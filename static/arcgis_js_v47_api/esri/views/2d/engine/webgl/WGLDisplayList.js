// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.7/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/generatorHelper ../../../../core/Logger ./enums ./MaterialInfo ./Utils ./util/serializationUtils".split(" "),function(q,z,v,w,h,r,x,e){var y=w.getLogger("esri.views.2d.engine.webgl.WGLDisplayList");q=function(){function c(){this.symbolLevels=[]}Object.defineProperty(c.prototype,"empty",{get:function(){return!this.symbolLevels||0===this.symbolLevels.length},enumerable:!0,configurable:!0});c.prototype.addToList=function(a){var b=this;Array.isArray(a)?
a.forEach(function(a){b._addToList(a)}):this._addToList(a)};c.prototype.removeFromList=function(a){var b=this;Array.isArray(a)||(a=[a]);a.forEach(function(a){b._removeFromList(a)})};c.prototype.ofType=function(a){var b,d,c,m,f,g,p,h,e,k,n;return v(this,function(l){switch(l.label){case 0:b=0,d=this.symbolLevels,l.label=1;case 1:if(!(b<d.length))return[3,8];c=d[b];m=0;f=c.zLevels;l.label=2;case 2:if(!(m<f.length))return[3,7];g=f[m];p=g.geometryDPInfo;h=this._getDPInfoType(a);if(!p[h])return[3,6];e=
0;k=p[h];l.label=3;case 3:if(!(e<k.length))return[3,6];n=k[e];return[4,n];case 4:l.sent(),l.label=5;case 5:return e++,[3,3];case 6:return m++,[3,2];case 7:return b++,[3,1];case 8:return[2]}})};c.prototype._addToList=function(a){var b=this._getDisplayList(a.symbolLevel,a.zOrder,a.geometryType),d=0<b.length?b[b.length-1]:null;null!==d&&x.isSameMaterialInfo(d.materialInfo,a.materialInfo)&&d.indexFrom+d.indexCount===a.indexFrom?d.indexCount+=a.indexCount:(d=new k,d.indexFrom=a.indexFrom,d.indexCount=
a.indexCount,d.materialInfo=a.materialInfo,d.geometryType=a.geometryType,b.push(d))};c.prototype._removeFromList=function(a){for(var b=this._getDisplayList(a.symbolLevel,a.zOrder,a.geometryType),d=b.length,c=void 0,m=0;m<d;++m){var f=b[m];a.indexFrom+a.indexCount>f.indexFrom&&a.indexFrom<f.indexFrom+f.indexCount&&(c=m)}if(void 0!==c)if(f=b[c],a.indexFrom<f.indexFrom)f.indexCount-=a.indexCount,f.indexFrom+=a.indexCount;else if(a.indexFrom+a.indexCount>f.indexFrom+f.indexCount)f.indexCount-=a.indexCount;
else{var d=f.indexFrom,m=a.indexFrom-f.indexFrom,g=a.indexCount;a=f.indexFrom+f.indexCount-(a.indexFrom+a.indexCount);f.indexCount=m;var e=new k;e.geometryType=f.geometryType;e.materialInfo=new r.default;e.materialInfo.copy(f.materialInfo);e.indexFrom=d+m+g;e.indexCount=a;b.splice(c+1,0,e)}};c.prototype._getDisplayList=function(a,c,d){for(var b,e=this.symbolLevels.length,f=0;f<e;f++)if(this.symbolLevels[f].symbolLevel===a){b=this.symbolLevels[f];break}b||(b=new t,b.symbolLevel=a,this.symbolLevels.push(b));
var g;a=b.zLevels.length;for(e=0;e<a;e++)if(b.zLevels[e].zLevel===c){g=b.zLevels[e];break}g||(g=new u,g.geometryDPInfo=new n,g.zLevel=c,b.zLevels.push(g));var k;switch(d){case h.WGLGeometryType.FILL:g.geometryDPInfo.fill||(g.geometryDPInfo.fill=[]);k=g.geometryDPInfo.fill;break;case h.WGLGeometryType.LINE:g.geometryDPInfo.line||(g.geometryDPInfo.line=[]);k=g.geometryDPInfo.line;break;case h.WGLGeometryType.MARKER:g.geometryDPInfo.marker||(g.geometryDPInfo.marker=[]);k=g.geometryDPInfo.marker;break;
case h.WGLGeometryType.TEXT:g.geometryDPInfo.text||(g.geometryDPInfo.text=[]);k=g.geometryDPInfo.text;break;default:console.error("Trying to add a record with geometry type '"+d+"'.")}return k};c.prototype.serialize=function(a){e.serializeList(a,this.symbolLevels);return a};c.deserialize=function(a){var b=new c;b.symbolLevels=e.deserializeList(a,t);return b};c.prototype._getDPInfoType=function(a){switch(a){case h.WGLGeometryType.FILL:return"fill";case h.WGLGeometryType.LINE:return"line";case h.WGLGeometryType.MARKER:return"marker";
case h.WGLGeometryType.TEXT:return"text";default:y.error("DisplayList: Tried to convert unknown geometryType: "+a)}};return c}();var k=function(){function c(){this.materialInfo=null;this.indexCount=this.indexFrom=0}c.prototype.serialize=function(a){this.materialInfo.serialize(a);a.writeInt32(this.indexFrom);a.writeInt32(this.indexCount);return a};c.deserialize=function(a,b){var d=new c;d.geometryType=b.geometryType;d.materialInfo=r.default.deserialize(a);d.indexFrom=a.readInt32();d.indexCount=a.readInt32();
return d};return c}(),n=function(){function c(){this.text=this.marker=this.line=this.fill=null}c.prototype.serialize=function(a){e.serializeList(a,this.fill);e.serializeList(a,this.line);e.serializeList(a,this.marker);e.serializeList(a,this.text);return a};c.deserialize=function(a){var b=new c,d={geometryType:h.WGLGeometryType.FILL},l=e.deserializeList(a,k,d);l.length&&(b.fill=l);d.geometryType=h.WGLGeometryType.LINE;l=e.deserializeList(a,k,d);l.length&&(b.line=l);d.geometryType=h.WGLGeometryType.MARKER;
l=e.deserializeList(a,k,d);l.length&&(b.marker=l);d.geometryType=h.WGLGeometryType.TEXT;a=e.deserializeList(a,k,d);a.length&&(b.text=a);return b};return c}(),u=function(){function c(){this.geometryDPInfo=new n}c.prototype.serialize=function(a){a.writeInt32(this.zLevel);this.geometryDPInfo.serialize(a);return a};c.deserialize=function(a){var b=new c;b.zLevel=a.readInt32();b.geometryDPInfo=n.deserialize(a);return b};return c}(),t=function(){function c(){this.zLevels=[]}c.prototype.serialize=function(a){a.writeInt32(this.symbolLevel);
e.serializeList(a,this.zLevels);return a};c.deserialize=function(a){var b=new c;b.symbolLevel=a.readInt32();b.zLevels=e.deserializeList(a,u);return b};return c}();return q});