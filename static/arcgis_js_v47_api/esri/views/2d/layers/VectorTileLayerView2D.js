// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.7/esri/copyright.txt for details.
//>>built
require({cache:{"esri/views/2d/tiling/TileInfoViewPOT":function(){define("require exports ../../../core/tsSupport/extendsHelper ../../../core/tsSupport/decorateHelper ./TileInfoView ./TileKey".split(" "),function(p,e,a,b,c,f){return function(b){function c(){return null!==b&&b.apply(this,arguments)||this}a(c,b);c.prototype.getTileParentId=function(a){a=f.pool.acquire(a);var b=0===a.level?null:f.getId(a.level-1,a.row>>1,a.col>>1,a.world);f.pool.release(a);return b};c.prototype.getTileIdAtParent=function(a,
b){b=f.pool.acquire(b);var c=this._infoByLevel[b.level];if(a.resolution<c.resolution)throw f.pool.release(b),Error("Cannot calculate parent tile. destination LOD's resolution "+a.resolution+" is not a parent resolution of "+c.resolution);if(a.resolution===c.resolution)return a=b.id,f.pool.release(b),a;c=b.level-a.level;if(0>c)throw f.pool.release(b),Error("Wrong way...!");a=f.getId(a.level,b.row>>c,b.col>>c,b.world);f.pool.release(b);return a};c.prototype.getTileCoverage=function(a){a=b.prototype.getTileCoverage.call(this,
a);if(!a)return a;var c=1<<a.lodInfo.level;a.spans=a.spans.filter(function(a){return 0<=a.row&&a.row<c});return a};return c}(c)})},"esri/views/vectorTiles/TileHandler":function(){define("require exports dojo/Deferred dojo/has dojo/promise/all ../../request ../../core/LRUCache ../../core/promiseUtils ../../core/requireUtils ../../core/workers ../2d/tiling/TileKey ./GeometryUtils ./GlyphMosaic ./GlyphSource ./SpriteMosaic ./SpriteSource ./TileIndex ./VectorTileDisplayObject module".split(" "),function(p,
e,a,b,c,f,d,h,n,m,k,q,g,l,u,r,t,v,w){var y=new d(10),x=new Map;return function(){function d(a,b,c,d,f){void 0===d&&(d=!1);this.devicePixelRatio=c;this.allowUpdates=d;this._tileIndex=this._connection=this._glyphMosaic=this._spriteMosaic=null;this._updateQueue=new Map;this._ongoingRequests=new Map;this._vectorTileLayer=a;this._styleRepository=a.styleRepository;this._requestUpdate=b}d.prototype.destroy=function(){this.stop();this._vectorTileLayer=this._requestUpdate=this._styleRepository=null;this._spriteMosaic&&
(this._spriteMosaic.dispose(),this._spriteMosaic=null);this._glyphMosaic&&(this._glyphMosaic.dispose(),this._glyphMosaic=null)};Object.defineProperty(d.prototype,"initialized",{get:function(){return this._broadcastPromise&&this._broadcastPromise.isFulfilled()},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"spriteMosaic",{get:function(){return this._spriteMosaic},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"glyphMosaic",{get:function(){return this._glyphMosaic},
enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"ongoingRequestCount",{get:function(){return this._ongoingRequests.size},enumerable:!0,configurable:!0});d.prototype.start=function(){var d=this;this.stop();var f=this._styleRepository,h=new r(f.sprite,this.devicePixelRatio);h.devicePixelRatio=this.devicePixelRatio;var t=h.load().then(function(){d._spriteMosaic=new u(1024,1024,250);d._spriteMosaic.setSpriteSource(h);b("stable-symbol-rendering")&&d._spriteMosaic.preloadSpriteItems()}),
k=new l(f.glyphs);this._glyphMosaic=new g(1024,1024,k);var v=this._fetchTileMap(this._vectorTileLayer.tileIndexUrl),q=m.open(n.getAbsMid("./WorkerTileHandler",p,w),{client:this}).then(function(a){d._connection=a}),e=new a(function(a){t.isFulfilled()||t.cancel();v.isFulfilled()||v.cancel();q.isFulfilled()||q.cancel()});c([t,v,q]).then(function(a){c(d._connection.broadcast("setLayers",f.styleJSON)).then(function(){e.resolve()})});return this._broadcastPromise=e.promise};d.prototype.stop=function(){this._broadcastPromise&&
!this._broadcastPromise.isFulfilled()&&this._broadcastPromise.cancel();this._updateQueue.forEach(function(a){return a.cancel()});this._ongoingRequests.forEach(function(a){return a.cancel()});this._connection&&(this._connection.close(),this._connection=null)};d.prototype.updateTile=function(a,b){var c=this;if(!this.allowUpdates)return h.resolve(null);if(!this._broadcastPromise.isFulfilled()||!this._connection)return h.reject(Error("no connection"));b=Math.round(q.degToByte(b.state.rotation));if(a.rotation===
b)return h.resolve(null);var d,f=a.key;this._updateQueue.has(f.id)&&(d=this._updateQueue.get(f.id),d.cancel());a.rotation=b;d=this._connection.invoke("update",{key:a.id,rotation:b},null,{client:a.client}).then(function(b){a.updateSymbolData(b);return b}).always(function(){c._updateQueue["delete"](f.id)});this._updateQueue.set(a.id,d);return d};d.prototype.getVectorTileWithLRC=function(a,b,c,d){var f=this;void 0===d&&(d=0);var l=new k(a,b,c,0);return this.getRefKey(l).then(function(a){var b=new v(l,
a,f._vectorTileLayer.tileInfo,f._styleRepository,0);if(a)return f.getTileData(b.key,0).then(function(a){b.setData(a.tileData,a.client);return b});b.setData(null,null);return b})};d.prototype.getTileData=function(a,b){var c=this;return this._broadcastPromise.isFulfilled()&&this._connection?this.getRefKey(a).then(function(d){if(!d)return h.resolve(null);var f=Math.round(q.degToByte(b));return c._getTileData(c._connection,a,d,f).then(function(a){return a&&a.tileData?{tileData:a.tileData,client:a.client}:
h.reject("No data")})}):h.reject(Error("no connection"))};d.prototype.getRefKey=function(a){return this._tileIndex?this._tileIndex.dataKey(a):h.resolve(a)};d.prototype.fetchTileData=function(a){a=k.pool.acquire(a);var b=this._vectorTileLayer.getTileUrl(a.level,a.row,a.col);k.pool.release(a);return f(b,{callbackParamName:"callback",responseType:"array-buffer"}).then(function(a){return{result:a.data,transferList:[a.data]}})};d.prototype.getSprites=function(a){return this._spriteMosaic.getSpriteItems(a)};
d.prototype.getGlyphs=function(a){return this._glyphMosaic.getGlyphItems(a.tileID,a.font,a.codePoints)};d.prototype.getStyleRepository=function(){return this._styleRepository};d.prototype.getTileIndex=function(){return this._tileIndex};d.prototype._getTileData=function(a,b,c,d){var f=this,l={client:null};if(a=this._ongoingRequests.get(b.id))return a;a=this._connection.invoke("getTile",{key:b.id,refKey:c.id,rotation:d,cacheTile:this.allowUpdates},null,l).then(function(a){f._ongoingRequests["delete"](b.id);
return{tileData:a,client:l.client}}).catch(function(a){f._ongoingRequests["delete"](b.id);f._connection.invoke("destructTileData",b.id,null,l);return h.reject(a)});this._ongoingRequests.set(b.id,a);return a};d.prototype._fetchTileMap=function(a){var b=this;if(this._vectorTileLayer.capabilities.supportsTileMapIndexing&&this._vectorTileLayer.tilemapCache)return this._tileIndex=new t(this._vectorTileLayer.tilemapCache),h.resolve();if(!a)return h.resolve();if(y.has(a))return this._tileIndex=y.use(a),
h.resolve();if(x.has(a))return x.get(a).then(function(a){b._tileIndex=new t(a.data)});var c=f(a,{callbackParamName:"callback",responseType:"json"});c.then(function(c){b._tileIndex=new t(c.data);x["delete"](a);y.insert(a,b._tileIndex)});x.set(a,c);return c};return d}()})},"esri/core/LRUCache":function(){define(["require","exports"],function(p,e){return function(){function a(a){this._cache={};this._lruQueue=[];if(0>=a)throw Error("LRU cache size must be bigger than zero!");this._maxSize=a}a.prototype.has=
function(a){return void 0!==this._cache[a]};a.prototype.insert=function(a,c){null!==this.use(a)?this._cache[a]=c:(this._collect(),this._cache[a]=c,this._lruQueue.unshift(a))};a.prototype.use=function(a){var b=this._cache[a];if(!b)return null;this._lruQueue.splice(this._lruQueue.indexOf(a),1);this._lruQueue.unshift(a);return b};a.prototype.print=function(){for(var a=0,c=this._lruQueue;a<c.length;a++){var f=c[a];console.log("key: "+f+", value: "+this._cache[f])}};a.prototype._collect=function(){if(!(this._lruQueue.length<
this._maxSize)){var a=this._lruQueue.pop(),c=this._cache[a];c&&c.release&&c.release();delete this._cache[a]}};return a}()})},"esri/core/requireUtils":function(){define(["require","exports","dojo/Deferred"],function(p,e,a){function b(c,f){if(Array.isArray(f)){var d=new a;c(f,function(){for(var a=[],b=0;b<arguments.length;b++)a[b]=arguments[b];d.resolve(a)});return d.promise}return b(c,[f]).then(function(a){return a[0]})}Object.defineProperty(e,"__esModule",{value:!0});e.when=b;e.getAbsMid=function(a,
b,d){return b.toAbsMid?b.toAbsMid(a):d.id.replace(/\/[^\/]*$/ig,"/")+a}})},"esri/views/vectorTiles/GeometryUtils":function(){define(["require","exports"],function(p,e){function a(a,b){a%=b;return 0<=a?a:a+b}Object.defineProperty(e,"__esModule",{value:!0});e.C_INFINITY=Number.POSITIVE_INFINITY;e.C_PI=Math.PI;e.C_2PI=2*e.C_PI;e.C_PI_BY_2=e.C_PI/2;e.C_RAD_TO_256=128/e.C_PI;e.C_256_TO_RAD=e.C_PI/128;e.C_DEG_TO_256=256/360;e.C_DEG_TO_RAD=e.C_PI/180;e.C_SQRT2=1.414213562;e.C_SQRT2_INV=1/e.C_SQRT2;var b=
1/Math.LN2;e.positiveMod=a;e.radToByte=function(b){return a(b*e.C_RAD_TO_256,256)};e.degToByte=function(b){return a(b*e.C_DEG_TO_256,256)};e.log2=function(a){return Math.log(a)*b};e.sqr=function(a){return a*a};e.clamp=function(a,b,d){return Math.min(Math.max(a,b),d)};e.interpolate=function(a,b,d){return a*(1-d)+b*d};e.between=function(a,b,d){return a>=b&&a<=d||a>=d&&a<=b}})},"esri/views/vectorTiles/GlyphMosaic":function(){define("require exports dojo/has ../../core/promiseUtils ./Rect ./RectangleBinPack ../webgl/Texture".split(" "),
function(p,e,a,b,c,f,d){var h;a("stable-symbol-rendering")&&(h=new Set);return function(){function n(a,b,c){this.height=this.width=0;this._dirties=[];this._glyphData=[];this._currentPage=0;this._glyphIndex={};this._textures=[];this._rangePromises=new Map;(0>=a||0>=b)&&console.error("Glyph mosaic width and height must be greater than zero!");this.width=a;this.height=b;this._glyphSource=c;this._binPack=new f(a-4,b-4);this._glyphData.push(new Uint8Array(a*b));this._dirties.push(!0);this._textures.push(void 0)}
n.prototype.getGlyphItems=function(d,k,n){var g=this,l=[],u=this._glyphSource,r=new Set;d=1/256;for(var t=0;t<n.length;t++)r.add(Math.floor(n[t]*d));var m=[];r.forEach(function(a){if(256>=a){var b=k+a;g._rangePromises.has(b)?m.push(g._rangePromises.get(b)):(a=u.getRange(k,a).always(function(){g._rangePromises["delete"](b)}),g._rangePromises.set(b,a),m.push(a))}});return b.all(m).then(function(b){b=g._glyphIndex[k];b||(b={},g._glyphIndex[k]=b);var d;if(a("stable-symbol-rendering")){h.clear();for(var t=
0;t<n.length;t++)d=n[t],h.add(d);var m=[];r.forEach(function(a){m.push(a)});m.sort();d=[];for(t=0;t<m.length;t++)for(var v=m[t],q=0;256>q;++q)d.push(256*v+q)}else d=n;t=0;for(v=d;t<v.length;t++)if(d=v[t],q=b[d]){if(!a("stable-symbol-rendering")||h.has(d))l[d]={rect:q.rect,metrics:q.metrics,page:q.page}}else{var e=u.getGlyph(k,d);if(e&&e.metrics){var q=e.metrics,w=void 0;if(0===q.width)w=new c(0,0,0,0);else{var p=q.width+6,I=q.height+6,L=p%4?4-p%4:4,D=I%4?4-I%4:4;1===L&&(L=5);1===D&&(D=5);w=g._binPack.allocate(p+
L,I+D);w.isEmpty&&(g._dirties[g._currentPage]||(g._glyphData[g._currentPage]=null),g._currentPage=g._glyphData.length,g._glyphData.push(new Uint8Array(g.width*g.height)),g._dirties.push(!0),g._textures.push(void 0),g._binPack=new f(g.width-4,g.height-4),w=g._binPack.allocate(p+L,I+D));var L=g._glyphData[g._currentPage],e=e.bitmap,J=D=void 0;if(e)for(var H=0;H<I;H++)for(var D=p*H,J=g.width*(w.y+H+1)+w.x,K=0;K<p;K++)L[J+K+1]=e[D+K]}b[d]={rect:w,metrics:q,tileIDs:null,page:g._currentPage};if(!a("stable-symbol-rendering")||
h.has(d))l[d]={rect:w,metrics:q,page:g._currentPage};g._dirties[g._currentPage]=!0}}return l})};n.prototype.removeGlyphs=function(a){for(var b in this._glyphIndex){var c=this._glyphIndex[b];if(c){var d=void 0,f;for(f in c)if(d=c[f],d.tileIDs["delete"](a),0===d.tileIDs.size){for(var u=this._glyphData[d.page],h=d.rect,t=void 0,m=void 0,n=0;n<h.height;n++)for(t=this.width*(h.y+n)+h.x,m=0;m<h.width;m++)u[t+m]=0;delete c[f];this._dirties[d.page]=!0}}}};n.prototype.bind=function(a,b,c,f){void 0===f&&(f=
0);this._textures[c]||(this._textures[c]=new d(a,{pixelFormat:6406,dataType:5121,width:this.width,height:this.height},new Uint8Array(this.width*this.height)));var l=this._textures[c];l.setSamplingMode(b);this._dirties[c]&&l.setData(this._glyphData[c]);a.bindTexture(l,f);this._dirties[c]=!1};n.prototype.dispose=function(){this._binPack=null;for(var a=0,b=this._textures;a<b.length;a++){var c=b[a];c&&c.dispose()}this._textures.length=0};return n}()})},"esri/views/vectorTiles/Rect":function(){define(["require",
"exports"],function(p,e){return function(){function a(a,c,f,d){void 0===a&&(a=0);void 0===c&&(c=0);void 0===f&&(f=0);void 0===d&&(d=0);this.x=a;this.y=c;this.width=f;this.height=d}Object.defineProperty(a.prototype,"isEmpty",{get:function(){return 0>=this.width||0>=this.height},enumerable:!0,configurable:!0});return a}()})},"esri/views/vectorTiles/RectangleBinPack":function(){define(["require","exports","./Rect"],function(p,e,a){return function(){function b(b,f){this._height=this._width=0;this._free=
[];this._width=b;this._height=f;this._free.push(new a(0,0,b,f))}Object.defineProperty(b.prototype,"width",{get:function(){return this._width},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"height",{get:function(){return this._height},enumerable:!0,configurable:!0});b.prototype.allocate=function(b,f){if(b>this._width||f>this._height)return new a;for(var c=null,h=-1,n=0;n<this._free.length;++n){var m=this._free[n];b<=m.width&&f<=m.height&&(null===c||m.y<=c.y&&m.x<=c.x)&&(c=m,h=n)}if(null===
c)return new a;this._free.splice(h,1);c.width<c.height?(c.width>b&&this._free.push(new a(c.x+b,c.y,c.width-b,f)),c.height>f&&this._free.push(new a(c.x,c.y+f,c.width,c.height-f))):(c.width>b&&this._free.push(new a(c.x+b,c.y,c.width-b,c.height)),c.height>f&&this._free.push(new a(c.x,c.y+f,b,c.height-f)));return new a(c.x,c.y,b,f)};b.prototype.release=function(a){for(var b=0;b<this._free.length;++b){var c=this._free[b];if(c.y===a.y&&c.height===a.height&&c.x+c.width===a.x)c.width+=a.width;else if(c.x===
a.x&&c.width===a.width&&c.y+c.height===a.y)c.height+=a.height;else if(a.y===c.y&&a.height===c.height&&a.x+a.width===c.x)c.x=a.x,c.width+=a.width;else if(a.x===c.x&&a.width===c.width&&a.y+a.height===c.y)c.y=a.y,c.height+=a.height;else continue;this._free.splice(b,1);this.release(a)}this._free.push(a)};return b}()})},"esri/views/vectorTiles/GlyphSource":function(){define(["require","exports","../../request","../../core/pbf","../../core/promiseUtils"],function(p,e,a,b,c){var f=function(){function a(a){this._metrics=
[];this._bitmaps=[];if(a)for(;a.next();)switch(a.tag()){case 1:for(var b=a.getMessage();b.next();)switch(b.tag()){case 3:for(var c=b.getMessage(),d=void 0,f=void 0,l=void 0,u=void 0,h=void 0,t=void 0,n=void 0;c.next();)switch(c.tag()){case 1:d=c.getUInt32();break;case 2:f=c.getBytes();break;case 3:l=c.getUInt32();break;case 4:u=c.getUInt32();break;case 5:h=c.getSInt32();break;case 6:t=c.getSInt32();break;case 7:n=c.getUInt32();break;default:c.skip()}d&&(this._metrics[d]={width:l,height:u,left:h,top:t,
advance:n},this._bitmaps[d]=f);break;default:b.skip()}break;default:a.skip()}}a.prototype.getMetrics=function(a){return this._metrics[a]};a.prototype.getBitmap=function(a){return this._bitmaps[a]};return a}(),d=function(){function a(){this._ranges=[]}a.prototype.getRange=function(a){return this._ranges[a]};a.prototype.addRange=function(a,b){this._ranges[a]=b};return a}();return function(){function h(a){this._glyphInfo={};this._baseURL=a}h.prototype.getRange=function(d,h){var k=this._getFontStack(d);
if(k.getRange(h))return c.resolve();var m=256*h,g=m+255;d=this._baseURL.replace("{fontstack}",d).replace("{range}",m+"-"+g);return a(d,{callbackParamName:"callback",responseType:"array-buffer"}).then(function(a){k.addRange(h,new f(new b(new Uint8Array(a.data),new DataView(a.data))))}).catch(function(){k.addRange(h,new f)})};h.prototype.getGlyph=function(a,b){if(a=this._getFontStack(a)){var c=Math.floor(b/256);if(!(256<c)&&(a=a.getRange(c)))return{metrics:a.getMetrics(b),bitmap:a.getBitmap(b)}}};h.prototype._getFontStack=
function(a){var b=this._glyphInfo[a];b||(b=this._glyphInfo[a]=new d);return b};return h}()})},"esri/core/pbf":function(){define(["require","exports"],function(p,e){return function(){function a(a,c,f,d){this._tag=0;this._dataType=99;this._data=a;this._dataView=c;this._pos=f||0;this._end=d||a.byteLength}a.prototype.clone=function(){return new a(this._data,this._dataView,this._pos,this._end)};a.prototype.next=function(a){for(;;){if(this._pos===this._end)return!1;var b=this._decodeVarint();this._tag=
b>>3;this._dataType=b&7;if(!a||a===this._tag)break;this.skip()}return!0};a.prototype.empty=function(){return this._pos>=this._end};a.prototype.tag=function(){return this._tag};a.prototype.getInt32=function(){return this._decodeVarint()};a.prototype.getInt64=function(){return this._decodeVarint()};a.prototype.getUInt32=function(){var a=4294967295,a=(this._data[this._pos]&127)>>>0;if(128>this._data[this._pos++])return a;a=(a|(this._data[this._pos]&127)<<7)>>>0;if(128>this._data[this._pos++])return a;
a=(a|(this._data[this._pos]&127)<<14)>>>0;if(128>this._data[this._pos++])return a;a=(a|(this._data[this._pos]&127)<<21)>>>0;if(128>this._data[this._pos++])return a;a=(a|(this._data[this._pos]&15)<<28)>>>0;if(128>this._data[this._pos++])return a};a.prototype.getUInt64=function(){return this._decodeVarint()};a.prototype.getSInt32=function(){var a=this.getUInt32();return a>>>1^-(a&1)|0};a.prototype.getSInt64=function(){return this._decodeSVarint()};a.prototype.getBool=function(){var a=0!==this._data[this._pos];
this._skip(1);return a};a.prototype.getEnum=function(){return this._decodeVarint()};a.prototype.getFixed64=function(){var a=this._dataView,c=this._pos,a=a.getUint32(c,!0)+4294967296*a.getUint32(c+4,!0);this._skip(8);return a};a.prototype.getSFixed64=function(){var a=this._dataView,c=this._pos,a=a.getUint32(c,!0)+4294967296*a.getInt32(c+4,!0);this._skip(8);return a};a.prototype.getDouble=function(){var a=this._dataView.getFloat64(this._pos,!0);this._skip(8);return a};a.prototype.getFixed32=function(){var a=
this._dataView.getUint32(this._pos,!0);this._skip(4);return a};a.prototype.getSFixed32=function(){var a=this._dataView.getInt32(this._pos,!0);this._skip(4);return a};a.prototype.getFloat=function(){var a=this._dataView.getFloat32(this._pos,!0);this._skip(4);return a};a.prototype.getString=function(){var a=this._getLength(),c=this._pos,c=this._toString(this._data,c,c+a);this._skip(a);return c};a.prototype.getBytes=function(){var a=this._getLength(),c=this._pos,c=this._toBytes(this._data,c,c+a);this._skip(a);
return c};a.prototype.getMessage=function(){var b=this._getLength(),c=this._pos,c=new a(this._data,this._dataView,c,c+b);this._skip(b);return c};a.prototype.skip=function(){switch(this._dataType){case 0:this._decodeVarint();break;case 1:this._skip(8);break;case 2:this._skip(this._getLength());break;case 5:this._skip(4);break;default:throw Error("Invalid data type!");}};a.prototype._skip=function(a){if(this._pos+a>this._end)throw Error("Attempt to skip past the end of buffer!");this._pos+=a};a.prototype._decodeVarint=
function(){var a=this._data,c=this._pos,f=0,d;if(10<=this._end-c){if(d=a[c++],f|=d&127,0!==(d&128)&&(d=a[c++],f|=(d&127)<<7,0!==(d&128)&&(d=a[c++],f|=(d&127)<<14,0!==(d&128)&&(d=a[c++],f|=(d&127)<<21,0!==(d&128)&&(d=a[c++],f+=268435456*(d&127),0!==(d&128)&&(d=a[c++],f+=34359738368*(d&127),0!==(d&128)&&(d=a[c++],f+=4398046511104*(d&127),0!==(d&128)&&(d=a[c++],f+=562949953421312*(d&127),0!==(d&128)&&(d=a[c++],f+=72057594037927936*(d&127),0!==(d&128)&&(d=a[c++],f+=0x7fffffffffffffff*(d&127),0!==(d&128)))))))))))throw Error("Varint too long!");
}else{for(var h=1;c!==this._end;){d=a[c];if(0===(d&128))break;++c;f+=(d&127)*h;h*=128}if(c===this._end)throw Error("Varint overrun!");++c;f+=d*h}this._pos=c;return f};a.prototype._decodeSVarint=function(){var a=this._decodeVarint();return a%2?-(a+1)/2:a/2};a.prototype._getLength=function(){if(2!==this._dataType)throw Error("Not a delimited data type!");return this._decodeVarint()};a.prototype._toString=function(a,c,f){var b="",h="";for(f=Math.min(this._end,f);c<f;++c){var n=a[c];n&128?h+="%"+n.toString(16):
(b+=decodeURIComponent(h)+String.fromCharCode(n),h="")}h.length&&(b+=decodeURIComponent(h));return b};a.prototype._toBytes=function(a,c,f){f=Math.min(this._end,f);return new Uint8Array(a.buffer,c,f-c)};return a}()})},"esri/views/vectorTiles/SpriteMosaic":function(){define("require exports ./GeometryUtils ./Rect ./RectangleBinPack ../webgl/Texture".split(" "),function(p,e,a,b,c,f){return function(){function d(a,b,d){void 0===d&&(d=0);this._size=[];this._mosaicsData=[];this._textures=[];this._dirties=
[];this._pageHeight=this._pageWidth=this._currentPage=this._maxItemSize=0;this._mosaicRects={};this.pixelRatio=1;(0>=a||0>=b)&&console.error("Sprites mosaic defaultWidth and defaultHeight must be greater than zero!");this._pageWidth=a;this._pageHeight=b;0<d&&(this._maxItemSize=d);this._binPack=new c(a-4,b-4)}d.prototype.getWidth=function(a){return a>=this._size.length?-1:this._size[a][0]};d.prototype.getHeight=function(a){return a>=this._size.length?-1:this._size[a][1]};d.prototype.setSpriteSource=
function(a){this.dispose();this.pixelRatio=a.devicePixelRatio;if(0===this._mosaicsData.length){this._binPack=new c(this._pageWidth-4,this._pageHeight-4);var b=new Uint32Array(Math.floor(this._pageWidth)*Math.floor(this._pageHeight));this._mosaicsData[0]=b;this._dirties.push(!0);this._size.push([this._pageWidth,this._pageHeight]);this._textures.push(void 0)}this._sprites=a};d.prototype.getSpriteItem=function(a,b){void 0===b&&(b=!1);var c=this._mosaicRects[a];if(c)return c;if(!this._sprites||"loaded"!==
this._sprites.loadStatus)return null;c=this._sprites.getSpriteInfo(a);if(!c||!c.width||!c.height||0>c.width||0>c.height)return null;var d=c.width,f=c.height,g=this._allocateImage(d,f),l=g[0],u=g[1];if(0>=l.width)return null;this._copy(l,c,u,g[2],b);c={rect:l,width:d,height:f,anchorX:0,anchorY:0,sdf:c.sdf,pixelRatio:c.pixelRatio,page:u};return this._mosaicRects[a]=c};d.prototype.preloadSpriteItems=function(){for(var a=0,b=this._sprites.spriteNames;a<b.length;a++)this.getSpriteItem(b[a],!0)};d.prototype.getSpriteItems=
function(a){for(var b={},c=0;c<a.length;c++){var d=a[c];b[d]=this.getSpriteItem(d)}return b};d.prototype.getMosaicItemPosition=function(a,b){b=(a=this.getSpriteItem(a,b))&&a.rect;if(!b)return null;b.width=a.width;b.height=a.height;return{size:[a.width,a.height],tl:[(b.x+2)/this._size[a.page][0],(b.y+2)/this._size[a.page][1]],br:[(b.x+2+a.width)/this._size[a.page][0],(b.y+2+a.height)/this._size[a.page][1]],page:a.page}};d.prototype.bind=function(a,b,c,d){void 0===c&&(c=0);void 0===d&&(d=0);this._textures[c]||
(this._textures[c]=new f(a,{pixelFormat:6408,dataType:5121,width:this._size[c][0],height:this._size[c][1]},new Uint8Array(this._mosaicsData[c].buffer)));var h=this._textures[c];h.setSamplingMode(b);this._dirties[c]&&h.setData(new Uint8Array(this._mosaicsData[c].buffer));a.bindTexture(h,d);this._dirties[c]=!1};d._copyBits=function(a,b,c,d,f,g,l,u,r,t,v){var h=d*b+c;l=u*g+l;if(v)for(l-=g,v=-1;v<=t;v++,h=((v+t)%t+d)*b+c,l+=g)for(u=-1;u<=r;u++)f[l+u]=a[h+(u+r)%r];else for(v=0;v<t;v++){for(u=0;u<r;u++)f[l+
u]=a[h+u];h+=b;l+=g}};d.prototype._copy=function(a,b,c,f,e,g){if(this._sprites&&"loaded"===this._sprites.loadStatus&&!(c>=this._mosaicsData.length)){var l=new Uint32Array(g?g.buffer:this._sprites.image.buffer),u=this._mosaicsData[c];u&&l||console.error("Source or target images are uninitialized!");d._copyBits(l,g?b.width:this._sprites.width,b.x,b.y,u,f[0],a.x+2,a.y+2,b.width,b.height,e);this._dirties[c]=!0}};d.prototype._allocateImage=function(d,f){d+=2;f+=2;var h=Math.max(d,f);if(this._maxItemSize&&
this._maxItemSize<h){var h=Math.pow(2,Math.ceil(a.log2(d))),k=Math.pow(2,Math.ceil(a.log2(f)));d=new b(0,0,d,f);this._mosaicsData.push(new Uint32Array(h*k));this._dirties.push(!0);this._size.push([h,k]);this._textures.push(void 0);return[d,this._mosaicsData.length-1,[h,k]]}h=d%4?4-d%4:4;k=f%4?4-f%4:4;1===h&&(h=5);1===k&&(k=5);h=this._binPack.allocate(d+h,f+k);return 0>=h.width?(this._dirties[this._currentPage]||(this._mosaicsData[this._currentPage]=null),this._currentPage=this._mosaicsData.length,
this._mosaicsData.push(new Uint32Array(this._pageWidth*this._pageHeight)),this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0),this._binPack=new c(this._pageWidth-4,this._pageHeight-4),this._allocateImage(d,f)):[h,this._currentPage,[this._pageWidth,this._pageHeight]]};d.prototype.dispose=function(){this._binPack=null;this._mosaicRects={};for(var a=0,b=this._textures;a<b.length;a++){var c=b[a];c&&c.dispose()}this._textures.length=0};return d}()})},
"esri/views/vectorTiles/SpriteSource":function(){define("require exports ../../core/tsSupport/extendsHelper ../../core/tsSupport/decorateHelper dojo/Deferred ../../kernel ../../request ../../core/promiseUtils ../../core/urlUtils".split(" "),function(p,e,a,b,c,f,d,h,n){return function(){function a(a,b){this.baseURL=a;this.devicePixelRatio=b;this._isRetina=!1;this._spritesData={};this.height=this.width=this.image=null;this.loadStatus="not-loaded"}Object.defineProperty(a.prototype,"spriteNames",{get:function(){var a=
[],b;for(b in this._spritesData)a.push(b);a.sort();return a},enumerable:!0,configurable:!0});a.prototype.getSpriteInfo=function(a){return this._spritesData[a]};a.prototype.load=function(){var a=this;this.loadStatus="loading";return this.baseURL?this._loadSprites().then(function(){a.loadStatus="loaded";return a}).catch(function(b){a.loadStatus="failed";return a}):h.resolve(this)};a.prototype._loadSprites=function(){var a=this;this._isRetina=1.15<this.devicePixelRatio?!0:!1;var b=this.baseURL,g=this._isRetina?
"@2x":"";return d(b+g+".json",{callbackParamName:"callback",responseType:"json"}).then(function(d){var l=Object.keys(d.data);if(!l||0===l.length||1===l.length&&"_ssl"===l[0])return h.resolve(null);a._spritesData=d.data;var r=new c,t=new Image;t.crossOrigin="anonymous";t.onload=function(){t.onload=null;a.width=t.width;a.height=t.height;var b=document.createElement("canvas");b.width=t.width;b.height=t.height;b=b.getContext("2d");b.drawImage(t,0,0,t.width,t.height);for(var b=b.getImageData(0,0,t.width,
t.height),b=new Uint8Array(b.data),c,d=0;d<b.length;d+=4)c=b[d+3]/255,b[d]*=c,b[d+1]*=c,b[d+2]*=c;a.image=b;r.resolve()};d=""+b+g+".png";f.id&&(l=f.id.findCredential(d))&&l.token&&(d+="?token\x3d"+l.token);t.src=n.addProxy(d);return r})};return a}()})},"esri/views/vectorTiles/TileIndex":function(){define(["require","exports","../../core/promiseUtils","../../layers/support/TilemapCache","../2d/tiling/TileKey"],function(p,e,a,b,c){return function(){function f(a){if(a instanceof b)this._tilemapCache=
a;else if(a&&"index"in a)this._tilemap=a.index;else throw Error("Invalid tilemap!");}f.prototype.dataKey=function(a){if(this._tilemapCache){var b=a.level,d=a.row,f=a.col,e=new c(a);return this._tilemapCache.fetchAvailabilityUpsample(b,d,f,e).then(function(){return e}).catch(function(a){if(a&&"cancel"===a.dojoType)throw a;e.level=b;e.row=d;e.col=f;return e})}return this._getIndexedDataKey(a)};f.prototype.forEach=function(a,b,c,f,e){this._callback=e;this._maxLevel=b+a;this._forEach(this._tilemap,b,
c,f)};f.prototype._forEach=function(a,b,c,f){0!==a&&(this._callback(b,c,f),b!==this._maxLevel&&"object"===typeof a&&(this._forEach(a[0],b+1,2*c,2*f),this._forEach(a[1],b+1,2*c,2*f+1),this._forEach(a[2],b+1,2*c+1,2*f),this._forEach(a[3],b+1,2*c+1,2*f+1)))};f.prototype._getIndexedDataKey=function(b){var d=[b];if(0>b.level||0>b.row||0>b.col||0<b.row>>b.level||0<b.col>>b.level)return a.resolve(null);for(;0!==b.level;)b=new c(b.level-1,b.row>>1,b.col>>1,b.world),d.push(b);b=this._tilemap;var f=d.pop(),
e,k;if(1===b)return a.resolve(f);for(;d.length;)if(e=d.pop(),k=(e.col&1)+((e.row&1)<<1),b)if(0===b[k]){f=null;break}else if(1===b[k]){f=e;break}else f=e,b=b[k];return a.resolve(f)};return f}()})},"esri/views/vectorTiles/VectorTileDisplayObject":function(){define("require exports ../../core/tsSupport/extendsHelper ../../core/ObjectPool ../../core/libs/gl-matrix/mat4 ../../core/libs/gl-matrix/vec2 ../../geometry/support/spatialReferenceUtils ../2d/engine/DisplayObject ../2d/tiling/TileKey ./RenderBucket ../webgl/BufferObject".split(" "),
function(p,e,a,b,c,f,d,h,n,m,k){return function(h){function g(){for(var a=[],b=0;b<arguments.length;b++)a[b]=arguments[b];b=h.call(this)||this;b._renderBuckets=[];b._vectorTileData=null;b._symbolUpdateData=null;b.status=5;b.coords=[0,0];b.bounds=[0,0,0,0];b.tileTransform={transform:Float32Array[16],displayCoord:Float32Array[2]};b.stencilData={mask:0,reference:0};b.status=0;b.tileTransform.transform=c.create();b.tileTransform.displayCoord=f.create();0<a.length&&(d=b.acquire).call.apply(d,[b].concat(a));
return b;var d}a(g,h);g.prototype.reset=function(){n.pool.release(this.key);this.refKey=this.key=null;this.coords[0]=0;this.coords[1]=0;this.bounds[0]=0;this.bounds[1]=0;this.bounds[2]=0;this.height=this.width=this.bounds[3]=0;this.resolution=null;this.rotation=0;this.id=this.client=this.styleLayers=this._vectorTileData=null;this.tileTransform.transform.fill(0);this.tileTransform.displayCoord.fill(0);this.stencilData.mask=0;this.stencilData.reference=0;this._renderBuckets.length=0;this._symbolUpdateData=
null;this.status=0};g.prototype.acquire=function(a,b,c,f,g){this.key=a;this.refKey=b;b=c.lodAt(a.level).resolution;var l=c.size[0]*b,u=c.origin,t=a.col*l,r=a.row*l,h=c.spatialReference,e=0;h&&(h._isWrappable?h._isWrappable():h.isWrappable)&&(h=d.getInfo(h),e=h.valid[1]-h.valid[0]);t=u.x+t+a.world*e;u=u.y-r;this.coords[0]=t;this.coords[1]=u;this.bounds[0]=t;this.bounds[1]=u;this.bounds[2]=t+l;this.bounds[3]=u-l;this.widthInPixels=c.size[1];this.coordRange=4096;this.resolution=b;this.rotation=g;this.styleLayers=
f;this.id=a.id;this.status=1};g.prototype.setData=function(a,b){this._vectorTileData=a;this.client=b;this.status=3};g.prototype.updateSymbolData=function(a){a&&(this._symbolUpdateData=a,this.requestRender())};g.prototype.dispose=function(){this.fillVertexArrayObject&&(this.fillVertexArrayObject.dispose(),this.fillVertexArrayObject=null);this.fillDDVertexArrayObject&&(this.fillDDVertexArrayObject.dispose(),this.fillDDVertexArrayObject=null);this.outlineVertexArrayObject&&(this.outlineVertexArrayObject.dispose(),
this.outlineVertexArrayObject=null);this.outlineDDVertexArrayObject&&(this.outlineDDVertexArrayObject.dispose(),this.outlineDDVertexArrayObject=null);this.lineVertexArrayObject&&(this.lineVertexArrayObject.dispose(),this.lineVertexArrayObject=null);this.lineDDVertexArrayObject&&(this.lineDDVertexArrayObject.dispose(),this.lineDDVertexArrayObject=null);this.iconVertexArrayObject&&(this.iconVertexArrayObject.dispose(),this.iconVertexArrayObject=null);this.iconDDVertexArrayObject&&(this.iconDDVertexArrayObject.dispose(),
this.iconDDVertexArrayObject=null);this.textVertexArrayObject&&(this.textVertexArrayObject.dispose(),this.textVertexArrayObject=null);this.textDDVertexArrayObject&&(this.textDDVertexArrayObject.dispose(),this.textDDVertexArrayObject=null);this.circleVertexArrayObject&&(this.circleVertexArrayObject.dispose(),this.circleVertexArrayObject=null);this.fillVertexBuffer&&(this.fillVertexBuffer.dispose(),this.fillVertexBuffer=null);this.fillDDVertexBuffer&&(this.fillDDVertexBuffer.dispose(),this.fillDDVertexBuffer=
null);this.fillIndexBuffer&&(this.fillIndexBuffer.dispose(),this.fillIndexBuffer=null);this.outlineVertexBuffer&&(this.outlineVertexBuffer.dispose(),this.outlineVertexBuffer=null);this.outlineDDVertexBuffer&&(this.outlineDDVertexBuffer.dispose(),this.outlineDDVertexBuffer=null);this.outlineIndexBuffer&&(this.outlineIndexBuffer.dispose(),this.outlineIndexBuffer=null);this.lineVertexBuffer&&(this.lineVertexBuffer.dispose(),this.lineVertexBuffer=null);this.lineDDVertexBuffer&&(this.lineDDVertexBuffer.dispose(),
this.lineDDVertexBuffer=null);this.lineIndexBuffer&&(this.lineIndexBuffer.dispose(),this.lineIndexBuffer=null);this.iconVertexBuffer&&(this.iconVertexBuffer.dispose(),this.iconVertexBuffer=null);this.iconDDVertexBuffer&&(this.iconDDVertexBuffer.dispose(),this.iconDDVertexBuffer=null);this.iconIndexBuffer&&(this.iconIndexBuffer.dispose(),this.iconIndexBuffer=null);this.textVertexBuffer&&(this.textVertexBuffer.dispose(),this.textVertexBuffer=null);this.textDDVertexBuffer&&(this.textDDVertexBuffer.dispose(),
this.textDDVertexBuffer=null);this.textIndexBuffer&&(this.textIndexBuffer.dispose(),this.textIndexBuffer=null);this.circleVertexBuffer&&(this.circleVertexBuffer.dispose(),this.circleVertexBuffer=null);this.circleIndexBuffer&&(this.circleIndexBuffer.dispose(),this.circleIndexBuffer=null);this.texture&&(this.texture.dispose(),this.texture=null);this._renderBuckets.length=0;this.status=7};g.prototype.getCpuMemoryUsage=function(){return null!=this._vectorTileData&&this._vectorTileData.bufferData?this._vectorTileData.bufferData.reduce(function(a,
b){return a+b.byteLength},0)+this._vectorTileData.bufferDataInfo.byteLength+this._vectorTileData.bucketDataInfo.byteLength:0};g.prototype.getGpuMemoryUsage=function(){var a=0;this.fillVertexBuffer&&(a+=this.fillVertexBuffer.size);this.fillDDVertexBuffer&&(a+=this.fillDDVertexBuffer.size);this.fillIndexBuffer&&(a+=this.fillIndexBuffer.size);this.outlineVertexBuffer&&(a+=this.outlineVertexBuffer.size);this.outlineDDVertexBuffer&&(a+=this.outlineDDVertexBuffer.size);this.outlineIndexBuffer&&(a+=this.outlineIndexBuffer.size);
this.lineVertexBuffer&&(a+=this.lineVertexBuffer.size);this.lineDDVertexBuffer&&(a+=this.lineDDVertexBuffer.size);this.lineIndexBuffer&&(a+=this.lineIndexBuffer.size);this.iconVertexBuffer&&(a+=this.iconVertexBuffer.size);this.iconDDVertexBuffer&&(a+=this.iconDDVertexBuffer.size);this.iconIndexBuffer&&(a+=this.iconIndexBuffer.size);this.textVertexBuffer&&(a+=this.textVertexBuffer.size);this.textDDVertexBuffer&&(a+=this.textDDVertexBuffer.size);this.textIndexBuffer&&(a+=this.textIndexBuffer.size);
this.circleVertexBuffer&&(a+=this.circleVertexBuffer.size);this.circleIndexBuffer&&(a+=this.circleIndexBuffer.size);this.texture&&(a+=this.texture.descriptor.width*this.texture.descriptor.height*4);return a};g.prototype.attach=function(a){if(4===this.status)return!0;this.status=3;if(!this._vectorTileData||!this._vectorTileData.bufferDataInfo)return this.status=4,!0;if(0===this._renderBuckets.length)for(var b=new Uint32Array(this._vectorTileData.bucketDataInfo),c=b.length,d=0;d<c;){var f=b[d],g=b[d+
1];if(0===g)g=new m.BackgroundRenderBucket,g.layerID=f,this._renderBuckets.push(g),d+=2;else if(1===g)g=new m.FillRenderBucket,g.layerID=f,g.triangleElementStart=b[d+2],g.triangleElementCount=b[d+3],g.outlineElementStart=b[d+4],g.outlineElementCount=b[d+5],this._renderBuckets.push(g),d+=6;else if(2===g)g=new m.LineRenderBucket,g.layerID=f,g.triangleElementStart=b[d+2],g.triangleElementCount=b[d+3],this._renderBuckets.push(g),d+=4;else if(3===g){g=new m.SymbolRenderBucket;g.layerID=f;g.isSDF=0!==b[d+
2];var l=d+3,f=b[l];l++;if(0<f)for(var h=void 0,e=void 0,q=void 0,n=0;n<f;n++)h=b[l],e=b[l+1],q=b[l+2],g.markerPerPageElementsMap.set(h,[e,q]),l+=3;var p=b[l];l++;if(0<p)for(q=e=h=void 0,n=0;n<p;n++)h=b[l],e=b[l+1],q=b[l+2],g.glyphPerPageElementsMap.set(h,[e,q]),l+=3;this._renderBuckets.push(g);d+=5+3*f+3*p}else 4===g?(g=new m.CircleRenderBucket,g.layerID=f,g.triangleElementStart=b[d+2],g.triangleElementCount=b[d+3],this._renderBuckets.push(g),d+=4):console.error("Bad bucket type!")}a=a.context;b=
new Uint32Array(this._vectorTileData.bufferDataInfo);c=b.length;for(g=d=0;g<c;g+=2,d++)if(!(0>=b[g+1]||0===this._vectorTileData.bufferData[d].byteLength))switch(b[g]){case 1:this.fillVertexBuffer?this.fillVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.fillVertexBuffer=k.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 2:this.fillDDVertexBuffer?this.fillDDVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.fillDDVertexBuffer=k.createVertex(a,35044,this._vectorTileData.bufferData[d]);
break;case 3:this.fillIndexBuffer?this.fillIndexBuffer.setData(this._vectorTileData.bufferData[d]):this.fillIndexBuffer=k.createIndex(a,35044,this._vectorTileData.bufferData[d]);break;case 4:this.outlineVertexBuffer?this.outlineVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.outlineVertexBuffer=k.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 5:this.outlineDDVertexBuffer?this.outlineDDVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.outlineDDVertexBuffer=
k.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 6:this.outlineIndexBuffer?this.outlineIndexBuffer.setData(this._vectorTileData.bufferData[d]):this.outlineIndexBuffer=k.createIndex(a,35044,this._vectorTileData.bufferData[d]);break;case 7:this.lineVertexBuffer?this.lineVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.lineVertexBuffer=k.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 8:this.lineDDVertexBuffer?this.lineDDVertexBuffer.setData(this._vectorTileData.bufferData[d]):
this.lineDDVertexBuffer=k.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 9:this.lineIndexBuffer?this.lineIndexBuffer.setData(this._vectorTileData.bufferData[d]):this.lineIndexBuffer=k.createIndex(a,35044,this._vectorTileData.bufferData[d]);break;case 10:this.iconVertexBuffer?this.iconVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.iconVertexBuffer=k.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 11:this.iconDDVertexBuffer?this.iconDDVertexBuffer.setData(this._vectorTileData.bufferData[d]):
this.iconDDVertexBuffer=k.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 12:this.iconIndexBuffer?this.iconIndexBuffer.setData(this._vectorTileData.bufferData[d]):this.iconIndexBuffer=k.createIndex(a,35044,this._vectorTileData.bufferData[d]);break;case 13:this.textVertexBuffer?this.textVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.textVertexBuffer=k.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 14:this.textDDVertexBuffer?this.textDDVertexBuffer.setData(this._vectorTileData.bufferData[d]):
this.textDDVertexBuffer=k.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 15:this.textIndexBuffer?this.textIndexBuffer.setData(this._vectorTileData.bufferData[d]):this.textIndexBuffer=k.createIndex(a,35044,this._vectorTileData.bufferData[d]);break;case 16:this.circleVertexBuffer?this.circleVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.circleVertexBuffer=k.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 17:this.circleIndexBuffer?this.circleIndexBuffer.setData(this._vectorTileData.bufferData[d]):
this.circleIndexBuffer=k.createIndex(a,35044,this._vectorTileData.bufferData[d])}this._vectorTileData=null;this.status=4;return!0};g.prototype.detach=function(a){this.client&&6!==this.status&&7!==this.status&&this.client.invoke("destructTileData",this.id);this.dispose();h.prototype.detach.call(this,a)};g.prototype.doRender=function(a){if(this.visible&&4===this.status){var b=a.context,c=a.renderer;if(b&&c){var d=a.drawphase;this._symbolUpdateData&&this._updateSymbolData(a);b.setStencilFunction(514,
this.stencilData.reference,this.stencilData.mask);var f=this.styleLayers,g=void 0!==a.layerOpacity?a.layerOpacity:1;if(0!==g){var l,h=this._renderBuckets.length,e=0;if(0===d)for(e=h-1;0<=e;e--)l=this._renderBuckets[e],3!==l.type&&l.hasData()&&c.renderBucket(b,l,a.displayLevel,a.requiredLevel,d,this,f.layers[l.layerID],g);else for(e=0;e<h;e++)l=this._renderBuckets[e],l.hasData()&&c.renderBucket(b,l,a.displayLevel,a.requiredLevel,d,this,f.layers[l.layerID],g)}}}};g.prototype._updateSymbolData=function(a){if(!this._symbolUpdateData.bucketDataInfo)return!0;
var b=new Uint32Array(this._symbolUpdateData.bucketDataInfo),c=b.length;if(0===c)return this._symbolUpdateData=null,!0;if(4!==this.status)return this.requestRender(),!1;a=a.context;for(var d=new Uint32Array(this._symbolUpdateData.bufferDataInfo),f=d.length,g=0,l=0;l<f;l+=2,g++)switch(d[l]){case 10:this.iconVertexBuffer&&(this.iconVertexBuffer.dispose(),this.iconVertexBuffer=null);this.iconVertexBuffer=k.createVertex(a,35044,this._symbolUpdateData.bufferData[g]);break;case 11:this.iconDDVertexBuffer&&
(this.iconDDVertexBuffer.dispose(),this.iconDDVertexBuffer=null);this.iconDDVertexBuffer=k.createVertex(a,35044,this._symbolUpdateData.bufferData[g]);break;case 12:this.iconIndexBuffer&&(this.iconIndexBuffer.dispose(),this.iconIndexBuffer=null);this.iconIndexBuffer=k.createIndex(a,35044,this._symbolUpdateData.bufferData[g]);break;case 13:this.textVertexBuffer&&(this.textVertexBuffer.dispose(),this.textVertexBuffer=null);this.textVertexBuffer=k.createVertex(a,35044,this._symbolUpdateData.bufferData[g]);
break;case 14:this.textDDVertexBuffer&&(this.textDDVertexBuffer.dispose(),this.textDDVertexBuffer=null);this.textDDVertexBuffer=k.createVertex(a,35044,this._symbolUpdateData.bufferData[g]);break;case 15:this.textIndexBuffer&&(this.textIndexBuffer.dispose(),this.textIndexBuffer=null),this.textIndexBuffer=k.createIndex(a,35044,this._symbolUpdateData.bufferData[g])}a=this._renderBuckets.length;for(d=0;d<a;d++)this._renderBuckets[d]instanceof m.SymbolRenderBucket&&(f=this._renderBuckets[d],f.markerPerPageElementsMap.clear(),
f.glyphPerPageElementsMap.clear());for(a=0;a<c;){f=b[a];g=-1;l=this._renderBuckets.length;for(d=0;d<l;d++)if(this._renderBuckets[d].layerID===f){g=d;break}d=this._renderBuckets[g];d||(d=new m.SymbolRenderBucket,d.layerID=f,d.isSDF=0!==b[a+2],this._renderBuckets.push(d));var h=a+3,f=b[h];h++;if(0<f)for(var e=l=g=void 0,q=0;q<f;q++)g=b[h],l=b[h+1],e=b[h+2],d.markerPerPageElementsMap.set(g,[l,e]),h+=3;var n=b[h];h++;if(0<n)for(e=l=g=void 0,q=0;q<n;q++)g=b[h],l=b[h+1],e=b[h+2],d.glyphPerPageElementsMap.set(g,
[l,e]),h+=3;a+=5+3*f+3*n}this.iconVertexArrayObject&&(this.iconVertexArrayObject.dispose(),this.iconVertexArrayObject=null);this.iconDDVertexArrayObject&&(this.iconDDVertexArrayObject.dispose(),this.iconDDVertexArrayObject=null);this.textVertexArrayObject&&(this.textVertexArrayObject.dispose(),this.textVertexArrayObject=null);this.textDDVertexArrayObject&&(this.textDDVertexArrayObject.dispose(),this.textDDVertexArrayObject=null);this._symbolUpdateData=null;return!0};g.pool=new b(g);return g}(h)})},
"esri/core/libs/gl-matrix/vec2":function(){define(["./common"],function(p){var e={create:function(){var a=new p.ARRAY_TYPE(2);a[0]=0;a[1]=0;return a},clone:function(a){var b=new p.ARRAY_TYPE(2);b[0]=a[0];b[1]=a[1];return b},fromValues:function(a,b){var c=new p.ARRAY_TYPE(2);c[0]=a;c[1]=b;return c},copy:function(a,b){a[0]=b[0];a[1]=b[1];return a},set:function(a,b,c){a[0]=b;a[1]=c;return a},add:function(a,b,c){a[0]=b[0]+c[0];a[1]=b[1]+c[1];return a},subtract:function(a,b,c){a[0]=b[0]-c[0];a[1]=b[1]-
c[1];return a}};e.sub=e.subtract;e.multiply=function(a,b,c){a[0]=b[0]*c[0];a[1]=b[1]*c[1];return a};e.mul=e.multiply;e.divide=function(a,b,c){a[0]=b[0]/c[0];a[1]=b[1]/c[1];return a};e.div=e.divide;e.ceil=function(a,b){a[0]=Math.ceil(b[0]);a[1]=Math.ceil(b[1]);return a};e.floor=function(a,b){a[0]=Math.floor(b[0]);a[1]=Math.floor(b[1]);return a};e.min=function(a,b,c){a[0]=Math.min(b[0],c[0]);a[1]=Math.min(b[1],c[1]);return a};e.max=function(a,b,c){a[0]=Math.max(b[0],c[0]);a[1]=Math.max(b[1],c[1]);return a};
e.round=function(a,b){a[0]=Math.round(b[0]);a[1]=Math.round(b[1]);return a};e.scale=function(a,b,c){a[0]=b[0]*c;a[1]=b[1]*c;return a};e.scaleAndAdd=function(a,b,c,f){a[0]=b[0]+c[0]*f;a[1]=b[1]+c[1]*f;return a};e.distance=function(a,b){var c=b[0]-a[0];a=b[1]-a[1];return Math.sqrt(c*c+a*a)};e.dist=e.distance;e.squaredDistance=function(a,b){var c=b[0]-a[0];a=b[1]-a[1];return c*c+a*a};e.sqrDist=e.squaredDistance;e.length=function(a){var b=a[0];a=a[1];return Math.sqrt(b*b+a*a)};e.len=e.length;e.squaredLength=
function(a){var b=a[0];a=a[1];return b*b+a*a};e.sqrLen=e.squaredLength;e.negate=function(a,b){a[0]=-b[0];a[1]=-b[1];return a};e.inverse=function(a,b){a[0]=1/b[0];a[1]=1/b[1];return a};e.normalize=function(a,b){var c=b[0],f=b[1],c=c*c+f*f;0<c&&(c=1/Math.sqrt(c),a[0]=b[0]*c,a[1]=b[1]*c);return a};e.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]};e.cross=function(a,b,c){b=b[0]*c[1]-b[1]*c[0];a[0]=a[1]=0;a[2]=b;return a};e.lerp=function(a,b,c,f){var d=b[0];b=b[1];a[0]=d+f*(c[0]-d);a[1]=b+f*(c[1]-b);return a};
e.random=function(a,b){b=b||1;var c=2*p.RANDOM()*Math.PI;a[0]=Math.cos(c)*b;a[1]=Math.sin(c)*b;return a};e.transformMat2=function(a,b,c){var f=b[0];b=b[1];a[0]=c[0]*f+c[2]*b;a[1]=c[1]*f+c[3]*b;return a};e.transformMat2d=function(a,b,c){var f=b[0];b=b[1];a[0]=c[0]*f+c[2]*b+c[4];a[1]=c[1]*f+c[3]*b+c[5];return a};e.transformMat3=function(a,b,c){var f=b[0];b=b[1];a[0]=c[0]*f+c[3]*b+c[6];a[1]=c[1]*f+c[4]*b+c[7];return a};e.transformMat4=function(a,b,c){var f=b[0];b=b[1];a[0]=c[0]*f+c[4]*b+c[12];a[1]=c[1]*
f+c[5]*b+c[13];return a};e.forEach=function(){var a=e.create();return function(b,c,f,d,h,e){c||(c=2);f||(f=0);for(d=d?Math.min(d*c+f,b.length):b.length;f<d;f+=c)a[0]=b[f],a[1]=b[f+1],h(a,a,e),b[f]=a[0],b[f+1]=a[1];return b}}();e.str=function(a){return"vec2("+a[0]+", "+a[1]+")"};e.exactEquals=function(a,b){return a[0]===b[0]&&a[1]===b[1]};e.equals=function(a,b){var c=a[0];a=a[1];var f=b[0];b=b[1];return Math.abs(c-f)<=p.EPSILON*Math.max(1,Math.abs(c),Math.abs(f))&&Math.abs(a-b)<=p.EPSILON*Math.max(1,
Math.abs(a),Math.abs(b))};return e})},"esri/views/vectorTiles/RenderBucket":function(){define(["require","exports","../../core/tsSupport/extendsHelper","../../core/tsSupport/decorateHelper"],function(p,e,a,b){Object.defineProperty(e,"__esModule",{value:!0});p=function(){return function(a){this.type=a}}();e.RenderBucket=p;b=function(b){function c(){var a=b.call(this,2)||this;a.triangleElementStart=0;a.triangleElementCount=0;return a}a(c,b);c.prototype.hasData=function(){return 0<this.triangleElementCount};
return c}(p);e.LineRenderBucket=b;b=function(b){function c(){var a=b.call(this,1)||this;a.triangleElementStart=0;a.triangleElementCount=0;a.outlineElementStart=0;a.outlineElementCount=0;return a}a(c,b);c.prototype.hasData=function(){return 0<this.triangleElementCount||0<this.outlineElementCount};return c}(p);e.FillRenderBucket=b;b=function(b){function c(){var a=b.call(this,3)||this;a.markerPerPageElementsMap=new Map;a.glyphPerPageElementsMap=new Map;a.isSDF=!1;return a}a(c,b);c.prototype.hasData=
function(){return 0<this.markerPerPageElementsMap.size||0<this.glyphPerPageElementsMap.size};return c}(p);e.SymbolRenderBucket=b;b=function(b){function c(){var a=b.call(this,4)||this;a.triangleElementStart=0;a.triangleElementCount=0;return a}a(c,b);c.prototype.hasData=function(){return 0<this.triangleElementCount};return c}(p);e.CircleRenderBucket=b;p=function(b){function c(){return b.call(this,0)||this}a(c,b);c.prototype.hasData=function(){return!0};return c}(p);e.BackgroundRenderBucket=p})},"esri/views/vectorTiles/VectorTileContainer":function(){define("require exports ../../core/tsSupport/extendsHelper dojo/has ../../core/promiseUtils ../../core/libs/gl-matrix/mat4 ../../core/libs/gl-matrix/vec3 ../2d/engine/Container ./GeometryUtils ./renderers/Renderer".split(" "),
function(p,e,a,b,c,f,d,h,n,m){return function(h){function e(){var a=h.call(this)||this;a.isInitialized=!1;a._displayWidth=0;a._displayHeight=0;a._pointToCallbacks=new Map;a._tileCoordinateScale=d.create();a._orientationVec=d.create();a._displayScale=d.create();a._orientationVec.set([0,0,1]);a._defaultTransform=f.create();return a}a(e,h);e.prototype.initialize=function(a,b,c,d){this._renderer=new m;this._renderer.initialize(a,b);this._tileInfoView=d;this._tileInfo=c;this.isInitialized=!0};e.prototype.destroy=
function(){this._renderer&&(this._renderer.dispose(),this._renderer=null)};e.prototype.hittest=function(a,b){var d=this,f=[a,b];return c.create(function(a,b){d._pointToCallbacks.set(f,{resolve:a,reject:b});d.requestRender()},function(){d._pointToCallbacks.has(f)&&d._pointToCallbacks.delete(f)})};e.prototype.prepareChildrenRenderParameters=function(a){var b=a.state;if(!b||!this._tileInfo||!this.isInitialized)return a;a.displayLevel=this._tileInfo.scaleToZoom(b.scale);a.requiredLevel=this._tileInfoView.getClosestInfoForScale(b.scale).level;
a.renderer=this._renderer;return a};e.prototype.renderChildren=function(a){var c=this;if(0!==this.children.length&&this.isInitialized&&a&&a.state){this.sortChildren(function(a,b){return a.key.level-b.key.level});for(var d=this.children.length,f=1;f<=d;f++){var g=this.children[f-1];g.attached&&(g.stencilData.reference=f,g.stencilData.mask=255)}this._updateTilesTransform(a.state,this._tileInfoView.getClosestInfoForScale(a.state.scale).level,this.children);d=a.context;d.setDepthWriteEnabled(!0);this._renderer.setStateParams(a.state,
a.pixelRatio,a.displayLevel);this._renderer.drawClippingMasks(d,this.children);d.setStencilWriteMask(0);d.setBlendFunctionSeparate(1,771,1,771);d.setStencilOp(7680,7680,7681);d.setDepthFunction(515);d.setBlendingEnabled(!1);d.setStencilTestEnabled(!0);d.setDepthTestEnabled(!0);d.setDepthWriteEnabled(!0);a.drawphase=0;h.prototype.renderChildren.call(this,a);d.setDepthWriteEnabled(!1);d.setBlendingEnabled(!0);a.drawphase=1;h.prototype.renderChildren.call(this,a);a.drawphase=2;h.prototype.renderChildren.call(this,
a);d.setStencilTestEnabled(!1);d.setDepthTestEnabled(!1);if(b("esri-vector-tiles-debug"))for(f=0,g=this.children;f<g.length;f++){var e=g[f];e.attached&&e.visible&&this._renderer.renderTileInfo(d,e)}0<this._pointToCallbacks.size&&(this._pointToCallbacks.forEach(function(b,d){b.resolve(c._hitTest(a,d[0],d[1]))}),this._pointToCallbacks.clear());this._renderer.needsRedraw()&&this.requestRender()}};e.prototype.removeAllChildren=function(){for(var a=0;a<this.children.length;a++)this.children[a].dispose();
h.prototype.removeAllChildren.call(this)};e.prototype._hitTest=function(a,b,c){var d=this._tileInfoView.getClosestInfoForScale(a.state.scale).level,f=[0,0];a.state.toMap(f,[b,c]);var g=a.state.clone(),l=g.viewpoint.clone(),h=l.targetGeometry;h.x=f[0];h.y=f[1];l.targetGeometry=h;g.viewpoint=l;g.size=[3,3];this._renderer.setStateParams(g,a.pixelRatio,a.displayLevel);return(a=this._renderer.hitTest({pixelRatio:a.pixelRatio,stationary:a.stationary,opacity:a.opacity,context:a.context,displayLevel:a.displayLevel,
requiredLevel:a.requiredLevel,renderer:a.renderer,layerOpacity:a.layerOpacity,state:g,drawphase:3,painter:null},b,c,this.children,d,3,this._updateTilesTransform.bind(this)))&&0!==a.length?a[0]:null};e.prototype._updateTilesTransform=function(a,b,c){var d=1/a.width,f=1/a.height,g=[0,0];this._calculateRelativeViewProjMat(this._tileInfo.lodAt(b).resolution,a.resolution,a.rotation,this._tileInfo.size[1],4096,a.width,a.height,this._defaultTransform);for(var h=0;h<c.length;h++){var l=c[h];a.toScreen(g,
l.coords);g[1]=a.height-g[1];l.tileTransform.displayCoord[0]=2*g[0]*d-1;l.tileTransform.displayCoord[1]=2*g[1]*f-1;l.key.level===b&&4096===l.coordRange?l.tileTransform.transform.set(this._defaultTransform):this._calculateRelativeViewProjMat(this._tileInfo.lodAt(l.key.level).resolution,a.resolution,a.rotation,this._tileInfo.size[1],l.coordRange,a.width,a.height,l.tileTransform.transform)}};e.prototype._calculateRelativeViewProjMat=function(a,b,c,d,h,e,k,q){var g=.125;512!==d&&4096!==h&&(g=d/h);a=a/
b*g;this._tileCoordinateScale.set([a,a,1]);if(e!==this._displayWidth||k!==this._displayHeight)this._displayScale.set([2/e,-2/k,1]),this._displayWidth=e,this._displayHeight=k;f.identity(q);f.scale(q,q,this._tileCoordinateScale);f.rotate(q,q,-c*n.C_DEG_TO_RAD,this._orientationVec);f.scale(q,q,this._displayScale);f.transpose(q,q)};return e}(h)})},"esri/core/libs/gl-matrix/vec3":function(){define(["./common"],function(p){var e={create:function(){var a=new p.ARRAY_TYPE(3);a[0]=0;a[1]=0;a[2]=0;return a},
clone:function(a){var b=new p.ARRAY_TYPE(3);b[0]=a[0];b[1]=a[1];b[2]=a[2];return b},fromValues:function(a,b,c){var f=new p.ARRAY_TYPE(3);f[0]=a;f[1]=b;f[2]=c;return f},copy:function(a,b){a[0]=b[0];a[1]=b[1];a[2]=b[2];return a},set:function(a,b,c,f){a[0]=b;a[1]=c;a[2]=f;return a},add:function(a,b,c){a[0]=b[0]+c[0];a[1]=b[1]+c[1];a[2]=b[2]+c[2];return a},subtract:function(a,b,c){a[0]=b[0]-c[0];a[1]=b[1]-c[1];a[2]=b[2]-c[2];return a}};e.sub=e.subtract;e.multiply=function(a,b,c){a[0]=b[0]*c[0];a[1]=b[1]*
c[1];a[2]=b[2]*c[2];return a};e.mul=e.multiply;e.divide=function(a,b,c){a[0]=b[0]/c[0];a[1]=b[1]/c[1];a[2]=b[2]/c[2];return a};e.div=e.divide;e.ceil=function(a,b){a[0]=Math.ceil(b[0]);a[1]=Math.ceil(b[1]);a[2]=Math.ceil(b[2]);return a};e.floor=function(a,b){a[0]=Math.floor(b[0]);a[1]=Math.floor(b[1]);a[2]=Math.floor(b[2]);return a};e.min=function(a,b,c){a[0]=Math.min(b[0],c[0]);a[1]=Math.min(b[1],c[1]);a[2]=Math.min(b[2],c[2]);return a};e.max=function(a,b,c){a[0]=Math.max(b[0],c[0]);a[1]=Math.max(b[1],
c[1]);a[2]=Math.max(b[2],c[2]);return a};e.round=function(a,b){a[0]=Math.round(b[0]);a[1]=Math.round(b[1]);a[2]=Math.round(b[2]);return a};e.scale=function(a,b,c){a[0]=b[0]*c;a[1]=b[1]*c;a[2]=b[2]*c;return a};e.scaleAndAdd=function(a,b,c,f){a[0]=b[0]+c[0]*f;a[1]=b[1]+c[1]*f;a[2]=b[2]+c[2]*f;return a};e.distance=function(a,b){var c=b[0]-a[0],f=b[1]-a[1];a=b[2]-a[2];return Math.sqrt(c*c+f*f+a*a)};e.dist=e.distance;e.squaredDistance=function(a,b){var c=b[0]-a[0],f=b[1]-a[1];a=b[2]-a[2];return c*c+f*
f+a*a};e.sqrDist=e.squaredDistance;e.length=function(a){var b=a[0],c=a[1];a=a[2];return Math.sqrt(b*b+c*c+a*a)};e.len=e.length;e.squaredLength=function(a){var b=a[0],c=a[1];a=a[2];return b*b+c*c+a*a};e.sqrLen=e.squaredLength;e.negate=function(a,b){a[0]=-b[0];a[1]=-b[1];a[2]=-b[2];return a};e.inverse=function(a,b){a[0]=1/b[0];a[1]=1/b[1];a[2]=1/b[2];return a};e.normalize=function(a,b){var c=b[0],f=b[1],d=b[2],c=c*c+f*f+d*d;0<c&&(c=1/Math.sqrt(c),a[0]=b[0]*c,a[1]=b[1]*c,a[2]=b[2]*c);return a};e.dot=
function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]};e.cross=function(a,b,c){var f=b[0],d=b[1];b=b[2];var h=c[0],e=c[1];c=c[2];a[0]=d*c-b*e;a[1]=b*h-f*c;a[2]=f*e-d*h;return a};e.lerp=function(a,b,c,f){var d=b[0],h=b[1];b=b[2];a[0]=d+f*(c[0]-d);a[1]=h+f*(c[1]-h);a[2]=b+f*(c[2]-b);return a};e.hermite=function(a,b,c,f,d,h){var e=h*h,m=e*(2*h-3)+1,k=e*(h-2)+h,q=e*(h-1);h=e*(3-2*h);a[0]=b[0]*m+c[0]*k+f[0]*q+d[0]*h;a[1]=b[1]*m+c[1]*k+f[1]*q+d[1]*h;a[2]=b[2]*m+c[2]*k+f[2]*q+d[2]*h;return a};e.bezier=function(a,
b,c,f,d,h){var e=1-h,m=e*e,k=h*h,q=m*e,m=3*h*m,e=3*k*e;h*=k;a[0]=b[0]*q+c[0]*m+f[0]*e+d[0]*h;a[1]=b[1]*q+c[1]*m+f[1]*e+d[1]*h;a[2]=b[2]*q+c[2]*m+f[2]*e+d[2]*h;return a};e.random=function(a,b){b=b||1;var c=2*p.RANDOM()*Math.PI,f=2*p.RANDOM()-1,d=Math.sqrt(1-f*f)*b;a[0]=Math.cos(c)*d;a[1]=Math.sin(c)*d;a[2]=f*b;return a};e.transformMat4=function(a,b,c){var f=b[0],d=b[1];b=b[2];var h=c[3]*f+c[7]*d+c[11]*b+c[15],h=h||1;a[0]=(c[0]*f+c[4]*d+c[8]*b+c[12])/h;a[1]=(c[1]*f+c[5]*d+c[9]*b+c[13])/h;a[2]=(c[2]*
f+c[6]*d+c[10]*b+c[14])/h;return a};e.transformMat3=function(a,b,c){var f=b[0],d=b[1];b=b[2];a[0]=f*c[0]+d*c[3]+b*c[6];a[1]=f*c[1]+d*c[4]+b*c[7];a[2]=f*c[2]+d*c[5]+b*c[8];return a};e.transformQuat=function(a,b,c){var f=b[0],d=b[1],h=b[2];b=c[0];var e=c[1],m=c[2];c=c[3];var k=c*f+e*h-m*d,q=c*d+m*f-b*h,g=c*h+b*d-e*f,f=-b*f-e*d-m*h;a[0]=k*c+f*-b+q*-m-g*-e;a[1]=q*c+f*-e+g*-b-k*-m;a[2]=g*c+f*-m+k*-e-q*-b;return a};e.rotateX=function(a,b,c,f){var d=[],e=[];d[0]=b[0]-c[0];d[1]=b[1]-c[1];d[2]=b[2]-c[2];e[0]=
d[0];e[1]=d[1]*Math.cos(f)-d[2]*Math.sin(f);e[2]=d[1]*Math.sin(f)+d[2]*Math.cos(f);a[0]=e[0]+c[0];a[1]=e[1]+c[1];a[2]=e[2]+c[2];return a};e.rotateY=function(a,b,c,f){var d=[],e=[];d[0]=b[0]-c[0];d[1]=b[1]-c[1];d[2]=b[2]-c[2];e[0]=d[2]*Math.sin(f)+d[0]*Math.cos(f);e[1]=d[1];e[2]=d[2]*Math.cos(f)-d[0]*Math.sin(f);a[0]=e[0]+c[0];a[1]=e[1]+c[1];a[2]=e[2]+c[2];return a};e.rotateZ=function(a,b,c,f){var d=[],e=[];d[0]=b[0]-c[0];d[1]=b[1]-c[1];d[2]=b[2]-c[2];e[0]=d[0]*Math.cos(f)-d[1]*Math.sin(f);e[1]=d[0]*
Math.sin(f)+d[1]*Math.cos(f);e[2]=d[2];a[0]=e[0]+c[0];a[1]=e[1]+c[1];a[2]=e[2]+c[2];return a};e.forEach=function(){var a=e.create();return function(b,c,f,d,e,n){c||(c=3);f||(f=0);for(d=d?Math.min(d*c+f,b.length):b.length;f<d;f+=c)a[0]=b[f],a[1]=b[f+1],a[2]=b[f+2],e(a,a,n),b[f]=a[0],b[f+1]=a[1],b[f+2]=a[2];return b}}();e.angle=function(a,b){a=e.fromValues(a[0],a[1],a[2]);b=e.fromValues(b[0],b[1],b[2]);e.normalize(a,a);e.normalize(b,b);b=e.dot(a,b);return 1<b?0:Math.acos(b)};e.str=function(a){return"vec3("+
a[0]+", "+a[1]+", "+a[2]+")"};e.exactEquals=function(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]};e.equals=function(a,b){var c=a[0],f=a[1];a=a[2];var d=b[0],e=b[1];b=b[2];return Math.abs(c-d)<=p.EPSILON*Math.max(1,Math.abs(c),Math.abs(d))&&Math.abs(f-e)<=p.EPSILON*Math.max(1,Math.abs(f),Math.abs(e))&&Math.abs(a-b)<=p.EPSILON*Math.max(1,Math.abs(a),Math.abs(b))};return e})},"esri/views/vectorTiles/renderers/Renderer":function(){define("require exports ../../../core/libs/gl-matrix/mat4 ../GeometryUtils ./BackgroundRenderer ./CircleRenderer ./FadeRecorder ./FillRenderer ./LineRenderer ./SymbolRenderer ./TileInfoRenderer ../../webgl/FramebufferObject".split(" "),
function(p,e,a,b,c,f,d,h,n,m,k,q){return function(){function g(){this._extrudeRotateVector=new Float32Array([0,0,1]);this._extrudeScaleVector=new Float32Array([1,1,1]);this._state={rotation:0,width:0,height:0};this._cachedRotation=this._cachedHeight=this._cachedWidth=0}g.prototype.initialize=function(a,b,g){void 0===g&&(g=!0);this._SpriteMosaic=a;this._glyphMosaic=b;this._ignoreSpeed=!g;this._backgroundRenderer=new c;this._lineRenderer=new n;this._fillRenderer=new h;this._symbolRenderer=new m;this._circleRenderer=
new f;this._tileInfoRenderer=new k;this._fadeRecorder=new d.FadeRecorder(300);this._extrudeMatrix=new Float32Array(16);this._extrudeNoRotationMatrix=new Float32Array(16);this._backgroundColor=new Float32Array([1,0,0,1])};g.prototype.dispose=function(){this._backgroundRenderer&&(this._backgroundRenderer.dispose(),this._backgroundRenderer=null);this._lineRenderer&&(this._lineRenderer.dispose(),this._lineRenderer=null);this._fillRenderer&&(this._fillRenderer.dispose(),this._fillRenderer=null);this._symbolRenderer&&
(this._symbolRenderer.dispose(),this._symbolRenderer=null);this._circleRenderer&&(this._circleRenderer.dispose(),this._circleRenderer=null);this._tileInfoRenderer&&(this._tileInfoRenderer.dispose(),this._tileInfoRenderer=null);this._hittestFBO&&(this._hittestFBO.dispose(),this._hittestFBO=null)};g.prototype.setStateParams=function(c,d,f){this._fadeRecorder.recordLevel(f);this._state=c;if(this._state.width!==this._cachedWidth||this._state.height!==this._cachedHeight||this._state.rotation!==this._cachedRotation)this._extrudeScaleVector[0]=
2/c.width,this._extrudeScaleVector[1]=-2/c.height,a.identity(this._extrudeMatrix),a.rotate(this._extrudeMatrix,this._extrudeMatrix,-c.rotation*b.C_DEG_TO_RAD,this._extrudeRotateVector),a.scale(this._extrudeMatrix,this._extrudeMatrix,this._extrudeScaleVector),a.transpose(this._extrudeMatrix,this._extrudeMatrix),a.identity(this._extrudeNoRotationMatrix),a.scale(this._extrudeNoRotationMatrix,this._extrudeNoRotationMatrix,this._extrudeScaleVector),a.transpose(this._extrudeNoRotationMatrix,this._extrudeNoRotationMatrix),
this._cachedWidth=this._state.width,this._cachedHeight=this._state.height,this._cachedRotation=this._state.rotation};g.prototype.drawClippingMasks=function(a,b){if(0!==b.length){a.setDepthWriteEnabled(!1);a.setDepthTestEnabled(!1);a.setStencilTestEnabled(!0);a.setBlendingEnabled(!1);a.setColorMask(!1,!1,!1,!1);a.setStencilOp(7680,7680,7681);a.setStencilWriteMask(255);a.setClearStencil(0);a.clear(a.gl.STENCIL_BUFFER_BIT);for(var c=0;c<b.length;c++){var d=b[c];d.attached&&d.visible&&(a.setStencilFunctionSeparate(1032,
519,d.stencilData.reference,d.stencilData.mask),this._backgroundRenderer.renderSolidColor(a,{u_matrix:d.tileTransform.transform,u_normalized_origin:d.tileTransform.displayCoord,u_coord_range:d.coordRange,u_depth:0,u_color:this._backgroundColor}))}a.setColorMask(!0,!0,!0,!0);a.setBlendingEnabled(!0)}};g.prototype.renderDebug=function(a,b){var c=b.key;this._backgroundColor.set([c.col%2,c.row%2,0===c.col%2&&0===c.row%2?1:0,.5]);this._backgroundRenderer.renderSolidColor(a,{u_matrix:b.tileTransform.transform,
u_normalized_origin:b.tileTransform.displayCoord,u_coord_range:b.coordRange,u_depth:0,u_color:this._backgroundColor})};g.prototype.renderBucket=function(a,b,c,d,f,g,e,h){if(!(void 0!==e.minzoom&&e.minzoom>c||void 0!==e.maxzoom&&e.maxzoom<=c))switch(b.type){case 0:2!==f&&this._renderBackground(a,b,c,f,g,e,h);break;case 1:2!==f&&this._renderFill(a,b,c,f,g,e,h);break;case 2:1!==f&&3!==f||this._renderLine(a,b,c,f,g,e,h);break;case 3:2!==f&&3!==f||this._renderSymbol(a,b,c,f,d,g,e,h);break;case 4:2!==f&&
3!==f||this._renderCircle(a,b,c,f,g,e,h)}};g.prototype.renderTileInfo=function(a,b){this._tileInfoRenderer.render(a,b)};g.prototype.needsRedraw=function(){return this._fadeRecorder.needsRedraw()};g.prototype.hitTest=function(a,b,c,d,f,g,e){var h=[0,0],l=[0,0],k=a.state;k.toMap(h,[0,0]);k.toMap(l,[g,g]);b=d.filter(function(a){return!(h[0]>a.bounds[2]||l[0]<a.bounds[0]||h[1]<a.bounds[3]||l[1]>a.bounds[1])});if(0===b.length)return[];b.sort(function(a,b){return a.key.level-b.key.level});c=b.length;for(d=
1;d<=c;d++){var u=b[d-1];u.attached&&(u.stencilData.reference=d,u.stencilData.mask=255)}e(k,f,b);f=a.context;this._hittestFBO||(this._hittestFBO=q.create(f,{colorTarget:0,depthStencilTarget:3,width:g,height:g}));e=f.getViewport();k=f.getBoundFramebufferObject();f.bindFramebuffer(this._hittestFBO);f.setViewport(0,0,g,g);d=f.gl;f.setDepthWriteEnabled(!0);f.setStencilWriteMask(255);f.setClearColor(1,1,1,1);f.setClearDepth(1);f.setClearStencil(0);f.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT|d.STENCIL_BUFFER_BIT);
f.setDepthWriteEnabled(!1);this.drawClippingMasks(f,b);f.setBlendingEnabled(!1);f.setStencilWriteMask(0);f.setStencilOp(7680,7680,7681);f.setDepthFunction(515);f.setDepthTestEnabled(!0);f.setDepthWriteEnabled(!0);f.setStencilTestEnabled(!0);for(d=0;d<c;d++)u=b[d],u.attached&&u.doRender(a);f.setStencilTestEnabled(!1);f.setDepthTestEnabled(!1);this._readbackBuffer||(this._readbackBuffer=new Uint8Array(4*g*g),this._readbackBuffer32=new Uint32Array(this._readbackBuffer.buffer));this._hittestFBO.readPixels(0,
0,g,g,6408,5121,this._readbackBuffer);a=new Set;g*=g;b=this._readbackBuffer32[Math.round(g/2)];4294967295!==b&&a.add(b);for(d=0;d<g;d++)b=this._readbackBuffer32[d],4294967295!==b&&a.add(b);f.bindFramebuffer(k);f.setViewport(e.x,e.y,e.width,e.height);var r=[];a.forEach(function(a){r.push(a)});return r};g.prototype._renderBackground=function(a,b,c,d,f,g,e){this._backgroundRenderer.render(a,b,c,d,f,g,this._SpriteMosaic,this._SpriteMosaic.pixelRatio,e)};g.prototype._renderLine=function(a,b,c,d,f,g,e){this._lineRenderer.render(a,
b,c,d,this._state,f,g,this._SpriteMosaic,this._extrudeMatrix,this._SpriteMosaic.pixelRatio,e)};g.prototype._renderFill=function(a,b,c,d,f,g,e){this._fillRenderer.render(a,b,c,this._state.rotation,d,f,g,this._SpriteMosaic,this._extrudeMatrix,this._SpriteMosaic.pixelRatio,e)};g.prototype._renderCircle=function(a,b,c,d,f,g,e){this._circleRenderer.render(a,b,c,d,this._state.rotation,f,g,this._extrudeMatrix,e)};g.prototype._renderSymbol=function(a,b,c,d,f,g,e,h){var l=!0;f===g.key.level&&(l=!1);a.setStencilTestEnabled(l);
this._symbolRenderer.render(a,b,c,d,this._state.rotation,this._fadeRecorder.getFadeValues(this._ignoreSpeed),g,e,this._SpriteMosaic,this._glyphMosaic,this._extrudeMatrix,this._extrudeNoRotationMatrix,this._SpriteMosaic.pixelRatio,h)};return g}()})},"esri/views/vectorTiles/renderers/BackgroundRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat3 ../../../core/libs/gl-matrix/vec4 ../MemoryBuffer ./rendererUtils ./vtShaderSnippets ../../webgl/BufferObject ../../webgl/ShaderVariations ../../webgl/VertexArrayObject".split(" "),
function(p,e,a,b,c,f,d,h,n,m){return function(){function e(){this._solidAttributeLocations={a_pos:0};this._attributeLocations={a_pos:0,a_id:1};this._patternMatrix=a.create();this._color=b.create();this._rendererInitialized=this._solidrendererInitialized=!1;this._color.set([1,0,0,1])}e.prototype.dispose=function(){this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null);this._vertexArrayObject&&(this._vertexArrayObject.dispose(),this._vertexArrayObject=
null)};e.prototype.renderSolidColor=function(a,b){this._solidrendererInitialized||this._initializeSolidRenderer(a);a.bindVAO(this._solidVertexArrayObject);var c=this._shaderVariations.getProgram([!1,!1],void 0,void 0,this._solidAttributeLocations);a.bindProgram(c);c.setUniformMatrix4fv("u_transformMatrix",b.u_matrix);c.setUniform2fv("u_normalized_origin",b.u_normalized_origin);c.setUniform1f("u_coord_range",b.u_coord_range||4096);c.setUniform1f("u_depth",b.u_depth||0);c.setUniform4fv("u_color",b.u_color||
this._color);a.drawArrays(5,0,4);a.bindVAO()};e.prototype.render=function(b,c,d,e,h,k,m,n,p){this._rendererInitialized||this._initialize(b);var g=k.getPaintValue("background-color",d);p*=k.getPaintValue("background-opacity",d);var l=k.getPaintValue("background-pattern",d),r=void 0!==l,u=g[3]*p,q=r||1>u;if(!q||0!==e)if(q||1!==e){q=3===e;e=this._shaderVariations.getProgram([r,q],void 0,void 0,this._attributeLocations);b.bindVAO(this._vertexArrayObject);b.bindProgram(e);e.setUniform1f("u_coord_range",
h.coordRange);e.setUniform1f("u_depth",k.z||0);e.setUniformMatrix4fv("u_transformMatrix",h.tileTransform.transform);e.setUniform2fv("u_normalized_origin",h.tileTransform.displayCoord);if(r){k=m.getMosaicItemPosition(l,!0);if(!k)return;d=h.coordRange/512/Math.pow(2,Math.floor(d)-h.key.level)/n;a.identity(this._patternMatrix);h=1/(k.size[1]*d);this._patternMatrix[0]=1/(k.size[0]*d);this._patternMatrix[4]=h;m.bind(b,9729,0);e.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix);e.setUniform1f("u_opacity",
p);e.setUniform2f("u_pattern_tl",k.tl[0],k.tl[1]);e.setUniform2f("u_pattern_br",k.br[0],k.br[1]);e.setUniform1i("u_texture",0)}else this._color[0]=u*g[0],this._color[1]=u*g[1],this._color[2]=u*g[2],this._color[3]=u,e.setUniform4fv("u_color",this._color);q&&(c=f.int32To4Bytes(c.layerID),e.setUniform4f("u_id",c[0],c[1],c[2],c[3]));b.drawArrays(5,0,4);b.bindVAO()}};e.prototype._initializeSolidRenderer=function(a){if(this._solidrendererInitialized)return!0;if(!this._shaderVariations){var b=new n("background",
["backgroundVS","backgroundFS"],[],d,a);b.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN");b.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=b}b=new Int8Array([0,0,1,0,0,1,1,1]);b=h.createVertex(a,35044,b);this._solidVertexArrayObject=new m(a,{a_pos:0},{geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},{geometry:b});return this._solidrendererInitialized=!0};e.prototype._initialize=function(a){if(this._rendererInitialized)return!0;if(!this._shaderVariations){var b=
new n("background",["backgroundVS","backgroundFS"],[],d,a);b.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN");b.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=b}b=[];b.push(c.i1616to32(0,0));b.push(c.i1616to32(1,0));b.push(c.i1616to32(0,1));b.push(c.i1616to32(1,1));b=new Uint32Array(b);b=h.createVertex(a,35044,b);this._vertexArrayObject=new m(a,{a_pos:0},{geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:4,normalized:!1,divisor:0}]},{geometry:b});return this._rendererInitialized=
!0};return e}()})},"esri/core/libs/gl-matrix/mat3":function(){define(["./common"],function(p){var e={create:function(){var a=new p.ARRAY_TYPE(9);a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a},fromMat4:function(a,b){a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[4];a[4]=b[5];a[5]=b[6];a[6]=b[8];a[7]=b[9];a[8]=b[10];return a},clone:function(a){var b=new p.ARRAY_TYPE(9);b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return b},copy:function(a,
b){a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];return a},fromValues:function(a,b,c,f,d,e,n,m,k){var h=new p.ARRAY_TYPE(9);h[0]=a;h[1]=b;h[2]=c;h[3]=f;h[4]=d;h[5]=e;h[6]=n;h[7]=m;h[8]=k;return h},set:function(a,b,c,f,d,e,n,m,k,q){a[0]=b;a[1]=c;a[2]=f;a[3]=d;a[4]=e;a[5]=n;a[6]=m;a[7]=k;a[8]=q;return a},identity:function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a},transpose:function(a,b){if(a===b){var c=b[1],f=b[2],d=b[5];
a[1]=b[3];a[2]=b[6];a[3]=c;a[5]=b[7];a[6]=f;a[7]=d}else a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8];return a},invert:function(a,b){var c=b[0],f=b[1],d=b[2],e=b[3],n=b[4],m=b[5],k=b[6],q=b[7];b=b[8];var g=b*n-m*q,l=-b*e+m*k,u=q*e-n*k,r=c*g+f*l+d*u;if(!r)return null;r=1/r;a[0]=g*r;a[1]=(-b*f+d*q)*r;a[2]=(m*f-d*n)*r;a[3]=l*r;a[4]=(b*c-d*k)*r;a[5]=(-m*c+d*e)*r;a[6]=u*r;a[7]=(-q*c+f*k)*r;a[8]=(n*c-f*e)*r;return a},adjoint:function(a,b){var c=b[0],f=b[1],d=
b[2],e=b[3],n=b[4],m=b[5],k=b[6],q=b[7];b=b[8];a[0]=n*b-m*q;a[1]=d*q-f*b;a[2]=f*m-d*n;a[3]=m*k-e*b;a[4]=c*b-d*k;a[5]=d*e-c*m;a[6]=e*q-n*k;a[7]=f*k-c*q;a[8]=c*n-f*e;return a},determinant:function(a){var b=a[3],c=a[4],f=a[5],d=a[6],e=a[7],n=a[8];return a[0]*(n*c-f*e)+a[1]*(-n*b+f*d)+a[2]*(e*b-c*d)},multiply:function(a,b,c){var f=b[0],d=b[1],e=b[2],n=b[3],m=b[4],k=b[5],q=b[6],g=b[7];b=b[8];var l=c[0],u=c[1],r=c[2],t=c[3],p=c[4],w=c[5],y=c[6],x=c[7];c=c[8];a[0]=l*f+u*n+r*q;a[1]=l*d+u*m+r*g;a[2]=l*e+u*
k+r*b;a[3]=t*f+p*n+w*q;a[4]=t*d+p*m+w*g;a[5]=t*e+p*k+w*b;a[6]=y*f+x*n+c*q;a[7]=y*d+x*m+c*g;a[8]=y*e+x*k+c*b;return a}};e.mul=e.multiply;e.translate=function(a,b,c){var f=b[0],d=b[1],e=b[2],n=b[3],m=b[4],k=b[5],q=b[6],g=b[7];b=b[8];var l=c[0];c=c[1];a[0]=f;a[1]=d;a[2]=e;a[3]=n;a[4]=m;a[5]=k;a[6]=l*f+c*n+q;a[7]=l*d+c*m+g;a[8]=l*e+c*k+b;return a};e.rotate=function(a,b,c){var f=b[0],d=b[1],e=b[2],n=b[3],m=b[4],k=b[5],q=b[6],g=b[7];b=b[8];var l=Math.sin(c);c=Math.cos(c);a[0]=c*f+l*n;a[1]=c*d+l*m;a[2]=
c*e+l*k;a[3]=c*n-l*f;a[4]=c*m-l*d;a[5]=c*k-l*e;a[6]=q;a[7]=g;a[8]=b;return a};e.scale=function(a,b,c){var f=c[0];c=c[1];a[0]=f*b[0];a[1]=f*b[1];a[2]=f*b[2];a[3]=c*b[3];a[4]=c*b[4];a[5]=c*b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];return a};e.fromTranslation=function(a,b){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=b[0];a[7]=b[1];a[8]=1;return a};e.fromRotation=function(a,b){var c=Math.sin(b);b=Math.cos(b);a[0]=b;a[1]=c;a[2]=0;a[3]=-c;a[4]=b;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a};e.fromScaling=function(a,
b){a[0]=b[0];a[1]=0;a[2]=0;a[3]=0;a[4]=b[1];a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a};e.fromMat2d=function(a,b){a[0]=b[0];a[1]=b[1];a[2]=0;a[3]=b[2];a[4]=b[3];a[5]=0;a[6]=b[4];a[7]=b[5];a[8]=1;return a};e.fromQuat=function(a,b){var c=b[0],f=b[1],d=b[2];b=b[3];var e=c+c,n=f+f,m=d+d,c=c*e,k=f*e,f=f*n,q=d*e,g=d*n,d=d*m,e=b*e,n=b*n;b*=m;a[0]=1-f-d;a[3]=k-b;a[6]=q+n;a[1]=k+b;a[4]=1-c-d;a[7]=g-e;a[2]=q-n;a[5]=g+e;a[8]=1-c-f;return a};e.normalFromMat4=function(a,b){var c=b[0],f=b[1],d=b[2],e=b[3],n=b[4],m=b[5],
k=b[6],q=b[7],g=b[8],l=b[9],u=b[10],r=b[11],t=b[12],p=b[13],w=b[14];b=b[15];var y=c*m-f*n,x=c*k-d*n,B=c*q-e*n,C=f*k-d*m,E=f*q-e*m,F=d*q-e*k,G=g*p-l*t,M=g*w-u*t,g=g*b-r*t,I=l*w-u*p,l=l*b-r*p,u=u*b-r*w,r=y*u-x*l+B*I+C*g-E*M+F*G;if(!r)return null;r=1/r;a[0]=(m*u-k*l+q*I)*r;a[1]=(k*g-n*u-q*M)*r;a[2]=(n*l-m*g+q*G)*r;a[3]=(d*l-f*u-e*I)*r;a[4]=(c*u-d*g+e*M)*r;a[5]=(f*g-c*l-e*G)*r;a[6]=(p*F-w*E+b*C)*r;a[7]=(w*B-t*F-b*x)*r;a[8]=(t*E-p*B+b*y)*r;return a};e.str=function(a){return"mat3("+a[0]+", "+a[1]+", "+
a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+")"};e.frob=function(a){return Math.sqrt(Math.pow(a[0],2)+Math.pow(a[1],2)+Math.pow(a[2],2)+Math.pow(a[3],2)+Math.pow(a[4],2)+Math.pow(a[5],2)+Math.pow(a[6],2)+Math.pow(a[7],2)+Math.pow(a[8],2))};e.add=function(a,b,c){a[0]=b[0]+c[0];a[1]=b[1]+c[1];a[2]=b[2]+c[2];a[3]=b[3]+c[3];a[4]=b[4]+c[4];a[5]=b[5]+c[5];a[6]=b[6]+c[6];a[7]=b[7]+c[7];a[8]=b[8]+c[8];return a};e.subtract=function(a,b,c){a[0]=b[0]-c[0];a[1]=b[1]-c[1];a[2]=b[2]-c[2];a[3]=
b[3]-c[3];a[4]=b[4]-c[4];a[5]=b[5]-c[5];a[6]=b[6]-c[6];a[7]=b[7]-c[7];a[8]=b[8]-c[8];return a};e.sub=e.subtract;e.multiplyScalar=function(a,b,c){a[0]=b[0]*c;a[1]=b[1]*c;a[2]=b[2]*c;a[3]=b[3]*c;a[4]=b[4]*c;a[5]=b[5]*c;a[6]=b[6]*c;a[7]=b[7]*c;a[8]=b[8]*c;return a};e.multiplyScalarAndAdd=function(a,b,c,f){a[0]=b[0]+c[0]*f;a[1]=b[1]+c[1]*f;a[2]=b[2]+c[2]*f;a[3]=b[3]+c[3]*f;a[4]=b[4]+c[4]*f;a[5]=b[5]+c[5]*f;a[6]=b[6]+c[6]*f;a[7]=b[7]+c[7]*f;a[8]=b[8]+c[8]*f;return a};e.exactEquals=function(a,b){return a[0]===
b[0]&&a[1]===b[1]&&a[2]===b[2]&&a[3]===b[3]&&a[4]===b[4]&&a[5]===b[5]&&a[6]===b[6]&&a[7]===b[7]&&a[8]===b[8]};e.equals=function(a,b){var c=a[0],f=a[1],d=a[2],e=a[3],n=a[4],m=a[5],k=a[6],q=a[7],g=a[8],l=b[0],u=b[1],r=b[2],t=b[3],v=b[4],w=b[5];a=a[6];var y=b[7];b=b[8];return Math.abs(c-l)<=p.EPSILON*Math.max(1,Math.abs(c),Math.abs(l))&&Math.abs(f-u)<=p.EPSILON*Math.max(1,Math.abs(f),Math.abs(u))&&Math.abs(d-r)<=p.EPSILON*Math.max(1,Math.abs(d),Math.abs(r))&&Math.abs(e-t)<=p.EPSILON*Math.max(1,Math.abs(e),
Math.abs(t))&&Math.abs(n-v)<=p.EPSILON*Math.max(1,Math.abs(n),Math.abs(v))&&Math.abs(m-w)<=p.EPSILON*Math.max(1,Math.abs(m),Math.abs(w))&&Math.abs(k-a)<=p.EPSILON*Math.max(1,Math.abs(k),Math.abs(a))&&Math.abs(q-y)<=p.EPSILON*Math.max(1,Math.abs(q),Math.abs(y))&&Math.abs(g-b)<=p.EPSILON*Math.max(1,Math.abs(g),Math.abs(b))};return e})},"esri/views/vectorTiles/MemoryBuffer":function(){define(["require","exports"],function(p,e){return function(){function a(a){this._array=[];0>=a&&console.error("strideInBytes must be positive!");
this._stride=a}Object.defineProperty(a.prototype,"array",{get:function(){return this._array},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"index",{get:function(){return 4*this._array.length/this._stride},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"itemSize",{get:function(){return this._stride},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"sizeInBytes",{get:function(){return 4*this._array.length},enumerable:!0,configurable:!0});a.prototype.reset=
function(){this.array.length=0};a.prototype.toBuffer=function(){return(new Uint32Array(this._array)).buffer};a.i1616to32=function(a,c){return 65535&a|c<<16};a.i8888to32=function(a,c,f,d){return a&255|(c&255)<<8|(f&255)<<16|d<<24};a.i8816to32=function(a,c,f){return a&255|(c&255)<<8|f<<16};return a}()})},"esri/views/vectorTiles/renderers/rendererUtils":function(){define(["require","exports"],function(p,e){Object.defineProperty(e,"__esModule",{value:!0});var a=new Uint32Array(1),b=new Uint8Array(a.buffer);
e.int32To4Bytes=function(c){a[0]=c|0;return[b[0],b[1],b[2],b[3]]}})},"esri/views/vectorTiles/renderers/vtShaderSnippets":function(){define("require exports dojo/text!../../2d/engine/webgl/shaders/tileInfo.xml dojo/text!./shaders/backgroundShaders.xml dojo/text!./shaders/circleShaders.xml dojo/text!./shaders/fillShaders.xml dojo/text!./shaders/iconShaders.xml dojo/text!./shaders/lineShaders.xml dojo/text!./shaders/outlineShaders.xml dojo/text!./shaders/textShaders.xml ../../webgl/ShaderSnippets".split(" "),
function(p,e,a,b,c,f,d,h,n,m,k){p=new k;k.parse(b,p);k.parse(a,p);k.parse(f,p);k.parse(n,p);k.parse(h,p);k.parse(d,p);k.parse(m,p);k.parse(c,p);return p})},"esri/views/vectorTiles/renderers/CircleRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec3 ../GeometryUtils ./rendererUtils ./vtShaderSnippets ../../webgl/ShaderVariations ../../webgl/VertexArrayObject".split(" "),function(p,e,a,b,c,f,d,h,n){return function(){function e(){this._attributeLocations=
{a_pos:0,a_color:1,a_stroke_color:2,a_data:3};this._initialized=!1;this._viewProjMat=a.create();this._offsetVector=b.create()}e.prototype.dispose=function(){};e.prototype.render=function(b,d,e,h,u,r,m,n,p){if(0!==d.triangleElementCount){this._initialized||this._initialize(b);p*=m.getPaintValue("circle-opacity",e);h=3===h;var g=r.tileTransform.transform,l=m.getPaintValue("circle-translate",e);if(0!==l[0]||0!==l[1]){a.copy(this._viewProjMat,r.tileTransform.transform);var g=l[0],l=l[1],k=0,q=0,q=(1<<
r.key.level)/Math.pow(2,e)*(r.coordRange/512);1===m.getPaintValue("circle-translate-anchor",e)?(u*=-c.C_DEG_TO_RAD,e=Math.sin(u),u=Math.cos(u),k=q*(g*u-l*e),q*=g*e+l*u):(k=q*g,q*=l);this._offsetVector[0]=k;this._offsetVector[1]=q;this._offsetVector[2]=0;a.translate(this._viewProjMat,this._viewProjMat,this._offsetVector);g=this._viewProjMat}if(e=this._getCircleVAO(b,r))b.bindVAO(e),e=this._shaderVariations.getProgram([h],void 0,void 0,this._attributeLocations),b.bindProgram(e),e.setUniformMatrix4fv("u_transformMatrix",
g),e.setUniformMatrix4fv("u_extrudeMatrix",n),e.setUniform2fv("u_normalized_origin",r.tileTransform.displayCoord),e.setUniform1f("u_depth",m.z),e.setUniform1f("u_opacity",p),e.setUniform1f("u_antialiasingWidth",1.2),h&&(r=f.int32To4Bytes(d.layerID),e.setUniform4f("u_id",r[0],r[1],r[2],r[3])),b.drawElements(4,d.triangleElementCount,5125,12*d.triangleElementStart),b.bindVAO()}};e.prototype._initialize=function(a){if(this._initialized)return!0;a=new h("circle",["circleVS","circleFS"],[],d,a);a.addDefine("ID",
"ID",[!0,!0],"ID");this._shaderVariations=a;this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:4,stride:16,normalized:!0,divisor:0},{name:"a_stroke_color",count:4,type:5121,offset:8,stride:16,normalized:!0,divisor:0},{name:"a_data",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}]};return this._initialized=!0};e.prototype._getCircleVAO=function(a,b){if(b.circleVertexArrayObject)return b.circleVertexArrayObject;
var c=b.circleVertexBuffer,d=b.circleIndexBuffer;if(!c||!d)return null;b.circleVertexArrayObject=new n(a,this._attributeLocations,this._vertexAttributes,{geometry:c},d);return b.circleVertexArrayObject};return e}()})},"esri/views/vectorTiles/renderers/FadeRecorder":function(){define(["require","exports","../../../core/now"],function(p,e,a){Object.defineProperty(e,"__esModule",{value:!0});(function(){return function(a,c){this.level=a;this.now=c}})();p=function(){return function(a,c,f,d){this.fadeSpeed=
a;this.minfadeLevel=c;this.maxfadeLevel=f;this.fadeChange=d}}();e.FadeProperties=p;p=function(){function b(a){void 0===a&&(a=300);this._levelSnapshots=[];this._duration=a}b.prototype.recordLevel=function(b){var c=a(),d=this._levelSnapshots;0===d.length&&(d.push({level:b,now:0}),d.push({level:b,now:0}));2!==d.length&&d[0].level===b||d.push({level:b,now:c})};b.prototype.needsRedraw=function(){if(0===this._levelSnapshots.length)return!1;for(var a=this._duration,b=this._levelSnapshots,d=b.length,e=b[d-
1],n=-1;d>n+1&&b[n+1].now+a<e.now;)n++;for(0>n&&(n=0);n<d;n++)if(b[n].level!==e.level)return!0;return!1};b.prototype.getFadeValues=function(b){void 0===b&&(b=!1);for(var c=this._duration,d=a(),e=this._levelSnapshots;3<e.length&&e[1].now+c<d;)e.shift();e[1].now+c<d&&(e[0].level=e[1].level);var n=e[0].level,m=e[e.length-1],k=m.level,q=Math.min(n,k),n=Math.max(n,k),e=(m.level-e[1].level)/((m.now-e[1].now)/c);return b?{fadeSpeed:0,minfadeLevel:q,maxfadeLevel:n,fadeChange:0}:{fadeSpeed:e,minfadeLevel:q,
maxfadeLevel:n,fadeChange:(d-m.now)/c*e}};return b}();e.FadeRecorder=p})},"esri/views/vectorTiles/renderers/FillRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat3 ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec3 ../../../core/libs/gl-matrix/vec4 ../GeometryUtils ./rendererUtils ./vtShaderSnippets ../../webgl/ShaderVariations ../../webgl/VertexArrayObject".split(" "),function(p,e,a,b,c,f,d,h,n,m,k){var q=1/65536;return function(){function e(){this._fillAttributeLocations=
{a_pos:0};this._fillAttributeLocationsDD={a_pos:0,a_color:1};this._outlineAttributeLocations={a_pos:0,a_offset:1,a_xnormal:2};this._outlineAttributeLocationsDD={a_pos:0,a_offset:1,a_xnormal:2,a_color:3};this._initialized=!1;this._viewProjMat=b.create();this._offsetVector=c.create();this._patternMatrix=a.create();this._color=f.create();this._outlineColor=f.create()}e.prototype.dispose=function(){};e.prototype.render=function(a,c,e,f,g,k,m,n,p,C,E){if(0!==c.triangleElementCount){this._initialized||
this._initialize(a);var l=void 0!==m.getPaintValue("fill-pattern",e),u=E*m.getPaintValue("fill-opacity",e),r=m.getPaintValue("fill-color",e),t=3===g,v;t&&(v=h.int32To4Bytes(c.layerID));var w=k.tileTransform.transform,y=k.coordRange/512,x=m.getPaintValue("fill-translate",e);if(0!==x[0]||0!==x[1]){b.copy(this._viewProjMat,k.tileTransform.transform);var w=x[0],x=x[1],B=0,z=0,y=(1<<k.key.level)/Math.pow(2,e)*y;1===m.getPaintValue("fill-translate-anchor",e)?(B=-d.C_DEG_TO_RAD*f,f=Math.sin(B),z=Math.cos(B),
B=y*(w*z-x*f),z=y*(w*f+x*z)):(B=y*w,z=y*x);this._offsetVector[0]=B;this._offsetVector[1]=z;this._offsetVector[2]=0;b.translate(this._viewProjMat,this._viewProjMat,this._offsetVector);w=this._viewProjMat}this._drawFill(a,c,e,g,k,m,n,w,C,E,t,v);if(m.getPaintValue("fill-antialias",e)&&!l&&0<c.outlineElementCount&&(1===g||3===g)){g=m.hasDataDrivenOutline;e=m.getPaintValue("fill-outline-color",e);if(0===e[3]){if(1!==this._color[3]&&!g)return;e=r}C=.75/C;if(r=this._getOutlineVAO(a,k,g))a.bindVAO(r),r=this._outlineShaderVariations.getProgram([g,
t],void 0,void 0,g?this._outlineAttributeLocationsDD:this._outlineAttributeLocations),a.bindProgram(r),r.setUniformMatrix4fv("u_transformMatrix",w),r.setUniformMatrix4fv("u_extrudeMatrix",p),r.setUniform2fv("u_normalized_origin",k.tileTransform.displayCoord),r.setUniform1f("u_depth",m.z+q),r.setUniform1f("u_outline_width",C),g||(k=u*e[3],this._outlineColor[0]=k*e[0],this._outlineColor[1]=k*e[1],this._outlineColor[2]=k*e[2],this._outlineColor[3]=k,r.setUniform4fv("u_color",this._outlineColor)),t&&
r.setUniform4f("u_id",v[0],v[1],v[2],v[3]),a.drawElements(4,c.outlineElementCount,5125,12*c.outlineElementStart),a.bindVAO()}}};e.prototype._initialize=function(a){if(this._initialized)return!0;var b=new m("fill",["fillVS","fillFS"],[],n,a);b.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN");b.addDefine("DD","DD",[!0,!1],"DD");b.addDefine("ID","ID",[!0,!0],"ID");this._fillShaderVariations=b;this._fillVertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:4,normalized:!1,divisor:0}]};
this._fillVertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:8,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:4,stride:8,normalized:!0,divisor:0}]};a=new m("outline",["outlineVS","outlineFS"],[],n,a);a.addDefine("DD","DD",[!0,!1],"DD");a.addDefine("ID","ID",[!0,!0],"ID");this._outlineShaderVariations=a;this._outlineVertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:8,normalized:!1,divisor:0},{name:"a_offset",count:2,type:5120,
offset:4,stride:8,normalized:!1,divisor:0},{name:"a_xnormal",count:2,type:5120,offset:6,stride:8,normalized:!1,divisor:0}]};this._outlineVertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:12,normalized:!1,divisor:0},{name:"a_offset",count:2,type:5120,offset:4,stride:12,normalized:!1,divisor:0},{name:"a_xnormal",count:2,type:5120,offset:6,stride:12,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:8,stride:12,normalized:!0,divisor:0}]};return this._initialized=
!0};e.prototype._drawFill=function(b,c,d,e,f,g,h,k,m,n,p,F){var l=g.getPaintValue("fill-pattern",d),r=void 0!==l,u=n*g.getPaintValue("fill-opacity",d);n=g.getPaintValue("fill-color",d);var t=g.hasDataDrivenFill,E=t?.5:n[3]*u,v=!1;r||1!==E||(v=!0);if(!r||0!==e)if(!v||1!==e)if(r||v||0!==e)if(e=this._getFillVAO(b,f,t))b.bindVAO(e),e=this._fillShaderVariations.getProgram([r,t,p],void 0,void 0,t?this._fillAttributeLocationsDD:this._fillAttributeLocations),b.bindProgram(e),r&&(l=h.getMosaicItemPosition(l,
!0))&&(d=f.coordRange/512/Math.pow(2,Math.round(d)-f.key.level)/m,a.identity(this._patternMatrix),m=1/(l.size[1]*d),this._patternMatrix[0]=1/(l.size[0]*d),this._patternMatrix[4]=m,h.bind(b,9729,l.page,1),e.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix),e.setUniform2f("u_pattern_tl",l.tl[0],l.tl[1]),e.setUniform2f("u_pattern_br",l.br[0],l.br[1]),e.setUniform1i("u_texture",1)),e.setUniformMatrix4fv("u_transformMatrix",k),e.setUniform2fv("u_normalized_origin",f.tileTransform.displayCoord),
e.setUniform1f("u_depth",g.z+q),t||(f=u*n[3],this._color[0]=f*n[0],this._color[1]=f*n[1],this._color[2]=f*n[2],this._color[3]=f,e.setUniform4fv("u_color",this._color)),p&&e.setUniform4f("u_id",F[0],F[1],F[2],F[3]),b.drawElements(4,c.triangleElementCount,5125,12*c.triangleElementStart),b.bindVAO()};e.prototype._getFillVAO=function(a,b,c){if(c){if(b.fillDDVertexArrayObject)return b.fillDDVertexArrayObject;c=b.fillDDVertexBuffer;var d=b.fillIndexBuffer;if(!c||!d)return null;b.fillDDVertexArrayObject=
new k(a,this._fillAttributeLocationsDD,this._fillVertexAttributesDD,{geometry:c},d);return b.fillDDVertexArrayObject}if(b.fillVertexArrayObject)return b.fillVertexArrayObject;c=b.fillVertexBuffer;d=b.fillIndexBuffer;if(!c||!d)return null;b.fillVertexArrayObject=new k(a,this._fillAttributeLocations,this._fillVertexAttributes,{geometry:c},d);return b.fillVertexArrayObject};e.prototype._getOutlineVAO=function(a,b,c){if(c){if(b.outlineDDVertexArrayObject)return b.outlineDDVertexArrayObject;c=b.outlineDDVertexBuffer;
var d=b.outlineIndexBuffer;if(!c||!d)return null;b.outlineDDVertexArrayObject=new k(a,this._outlineAttributeLocationsDD,this._outlineVertexAttributesDD,{geometry:c},d);return b.outlineDDVertexArrayObject}if(b.outlineVertexArrayObject)return b.outlineVertexArrayObject;c=b.outlineVertexBuffer;d=b.outlineIndexBuffer;if(!c||!d)return null;b.outlineVertexArrayObject=new k(a,this._outlineAttributeLocations,this._outlineVertexAttributes,{geometry:c},d);return b.outlineVertexArrayObject};return e}()})},"esri/views/vectorTiles/renderers/LineRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec2 ../../../core/libs/gl-matrix/vec3 ../../../core/libs/gl-matrix/vec4 ../GeometryUtils ./rendererUtils ./vtShaderSnippets ../../webgl/ShaderVariations ../../webgl/VertexArrayObject".split(" "),
function(p,e,a,b,c,f,d,h,n,m,k){return function(){function e(){this._attributeLocations={a_pos:0,a_offsetAndNormal:1,a_accumulatedDistance:2};this._attributeLocationsDD={a_pos:0,a_offsetAndNormal:1,a_accumulatedDistance:2,a_color:3,a_width:4};this._initialized=!1;this._viewProjMat=a.create();this._offsetVector=c.create();this._color=f.create();this._dashArray=b.create()}e.prototype.dispose=function(){};e.prototype.render=function(b,c,e,f,k,m,n,q,p,B,C){if(0!==c.triangleElementCount){this._initialized||
this._initialize(b);var g=m.tileTransform.transform,l=m.coordRange/512,r=n.getPaintValue("line-translate",e);if(0!==r[0]||0!==r[1]){a.copy(this._viewProjMat,m.tileTransform.transform);var g=r[0],r=r[1],u=0,t=0,t=(1<<m.key.level)/Math.pow(2,e)*l;k=k.rotation;if(1===n.getPaintValue("line-translate-anchor",e)){u=-d.C_DEG_TO_RAD*k;k=Math.sin(u);var v=Math.cos(u),u=t*(g*v-r*k),t=t*(g*k+r*v)}else u=t*g,t*=r;this._offsetVector[0]=u;this._offsetVector[1]=t;this._offsetVector[2]=0;a.translate(this._viewProjMat,
this._viewProjMat,this._offsetVector);g=this._viewProjMat}r=n.getPaintValue("line-pattern",e);t=void 0!==r;B=1/B;k=n.getPaintValue("line-blur",e)+B;B=n.getPaintValue("line-width",e);u=C*n.getPaintValue("line-opacity",e);C=n.getPaintValue("line-color",e);var v=n.hasDataDrivenLine,w=3===f,x;w&&(x=h.int32To4Bytes(c.layerID));if(f=this._getLineVAO(b,m,v)){b.bindVAO(f);f=this._shaderVariations.getProgram([t,v,w],void 0,void 0,v?this._attributeLocationsDD:this._attributeLocations);b.bindProgram(f);f.setUniformMatrix4fv("u_transformMatrix",
g);f.setUniformMatrix4fv("u_extrudeMatrix",p);f.setUniform2fv("u_normalized_origin",m.tileTransform.displayCoord);f.setUniform1f("u_depth",n.z);f.setUniform1f("u_blur",k);v||(m=u*C[3],this._color[0]=m*C[0],this._color[1]=m*C[1],this._color[2]=m*C[2],this._color[3]=m,f.setUniform4fv("u_color",this._color),f.setUniform1f("u_width",B));w&&f.setUniform4f("u_id",x[0],x[1],x[2],x[3]);if(t){if(e=q.getMosaicItemPosition(r,!0))q.bind(b,9729,e.page,1),f.setUniform2f("u_pattern_tl",e.tl[0],e.br[1]),f.setUniform2f("u_pattern_br",
e.br[0],e.tl[1]),f.setUniform2f("u_spriteSize",l*e.size[0],e.size[1]),f.setUniform1i("u_texture",1)}else q=n.getPaintValue("line-dasharray",e),2>q.length&&(q=[1,-1]),this._dashArray[0]=l*q[0],this._dashArray[1]=l*q[1],f.setUniform2fv("u_dasharray",this._dashArray);b.drawElements(4,c.triangleElementCount,5125,12*c.triangleElementStart);b.bindVAO()}}};e.prototype._initialize=function(a){if(this._initialized)return!0;a=new m("line",["lineVS","lineFS"],[],n,a);a.addDefine("PATTERN","PATTERN",[!0,!0],
"PATTERN");a.addDefine("DD","DD",[!0,!1],"DD");a.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=a;this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:12,normalized:!1,divisor:0},{name:"a_offsetAndNormal",count:4,type:5120,offset:4,stride:12,normalized:!1,divisor:0},{name:"a_accumulatedDistance",count:2,type:5123,offset:8,stride:12,normalized:!1,divisor:0}]};this._vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:20,normalized:!1,
divisor:0},{name:"a_offsetAndNormal",count:4,type:5120,offset:4,stride:20,normalized:!1,divisor:0},{name:"a_accumulatedDistance",count:2,type:5122,offset:8,stride:20,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:12,stride:20,normalized:!0,divisor:0},{name:"a_width",count:1,type:5126,offset:16,stride:20,normalized:!1,divisor:0}]};return this._initialized=!0};e.prototype._getLineVAO=function(a,b,c){if(c){if(b.lineDDVertexArrayObject)return b.lineDDVertexArrayObject;c=b.lineDDVertexBuffer;
var d=b.lineIndexBuffer;if(!c||!d)return null;b.lineDDVertexArrayObject=new k(a,this._attributeLocationsDD,this._vertexAttributesDD,{geometry:c},d);return b.lineDDVertexArrayObject}if(b.lineVertexArrayObject)return b.lineVertexArrayObject;c=b.lineVertexBuffer;d=b.lineIndexBuffer;if(!c||!d)return null;b.lineVertexArrayObject=new k(a,this._attributeLocations,this._vertexAttributes,{geometry:c},d);return b.lineVertexArrayObject};return e}()})},"esri/views/vectorTiles/renderers/SymbolRenderer":function(){define(["require",
"exports","./IconRenderer","./SDFRenderer"],function(p,e,a,b){return function(){function c(){this._iconRenderer=new a;this._sdfRenderer=new b}c.prototype.dispose=function(){this._iconRenderer&&(this._iconRenderer.dispose(),this._iconRenderer=null);this._sdfRenderer&&(this._sdfRenderer.dispose(),this._sdfRenderer=null)};c.prototype.render=function(a,b,c,e,m,k,q,g,l,u,r,p,v,w){b.hasData()&&(0<b.markerPerPageElementsMap.size&&this._iconRenderer.render(a,b,c,e,m,k,q,g,l,r,p,w),0<b.glyphPerPageElementsMap.size&&
this._sdfRenderer.render(a,b,c,e,m,k,q,g,u,r,p,v,w))};return c}()})},"esri/views/vectorTiles/renderers/IconRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec3 ../GeometryUtils ./rendererUtils ./vtShaderSnippets ../../webgl/ShaderVariations ../../webgl/VertexArrayObject".split(" "),function(p,e,a,b,c,f,d,h,n){return function(){function e(){this._attributeLocations={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3};this._attributeLocationsDD=
{a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3,a_color:4,a_size:5};this._spritesTextureSize=new Float32Array(2);this._initialized=!1;this._viewProjMat=a.create();this._offsetVector=b.create();this._extrudeMat=a.create()}e.prototype.dispose=function(){};e.prototype.render=function(b,d,e,h,m,n,p,v,w,y,x,B){var g=this;this._initialized||this._initialize(b);var k=v.getLayoutValue("icon-size",e);B*=v.getPaintValue("icon-opacity",e);var l=v.getLayoutValue("icon-rotation-alignment",e);2===l&&(l=1===v.getLayoutValue("symbol-placement",
e)?0:1);var q=0===l,r=d.isSDF,u=v.hasDataDrivenIcon;h=3===h;var l=c.degToByte(m),t=p.tileTransform.transform,D=v.getPaintValue("icon-translate",e);if(0!==D[0]||0!==D[1]){a.copy(this._viewProjMat,p.tileTransform.transform);var t=D[0],D=D[1],J=0,H=0,H=(1<<p.key.level)/Math.pow(2,e)*(p.coordRange/512);if(1===v.getPaintValue("icon-translate-anchor",e)){J=-c.C_DEG_TO_RAD*m;m=Math.sin(J);var K=Math.cos(J),J=H*(t*K-D*m),H=H*(t*m+D*K)}else J=H*t,H*=D;this._offsetVector[0]=J;this._offsetVector[1]=H;this._offsetVector[2]=
0;a.translate(this._viewProjMat,this._viewProjMat,this._offsetVector);t=this._viewProjMat}q?a.copy(this._extrudeMat,y):a.copy(this._extrudeMat,x);if(y=this._getIconVAO(b,p,u)){b.bindVAO(y);var z=this._shaderVariations.getProgram([r,u,h],void 0,void 0,u?this._attributeLocationsDD:this._attributeLocations);b.bindProgram(z);r&&(y=v.getPaintValue("icon-color",e),x=v.getPaintValue("icon-halo-color",e),r=v.getPaintValue("icon-halo-width",e),z.setUniform4f("u_color",y[0],y[1],y[2],y[3]),z.setUniform4f("u_outlineColor",
x[0],x[1],x[2],x[3]),z.setUniform1f("u_outlineSize",r));z.setUniformMatrix4fv("u_transformMatrix",t);z.setUniformMatrix4fv("u_extrudeMatrix",this._extrudeMat);z.setUniform2fv("u_normalized_origin",p.tileTransform.displayCoord);z.setUniform1f("u_depth",v.z);z.setUniform1f("u_mapRotation",l);z.setUniform1f("u_keepUpright",0);z.setUniform1f("u_level",10*e);z.setUniform1f("u_fadeSpeed",10*n.fadeSpeed);z.setUniform1f("u_minfadeLevel",10*n.minfadeLevel);z.setUniform1f("u_maxfadeLevel",10*n.maxfadeLevel);
z.setUniform1f("u_fadeChange",10*(e+n.fadeChange));z.setUniform1i("u_texture",1);z.setUniform1f("u_size",k);z.setUniform1f("u_opacity",B);h&&(e=f.int32To4Bytes(d.layerID),z.setUniform4f("u_id",e[0],e[1],e[2],e[3]));d.markerPerPageElementsMap.forEach(function(a,c){g._spritesTextureSize[0]=w.getWidth(c)/4;g._spritesTextureSize[1]=w.getHeight(c)/4;z.setUniform2fv("u_mosaicSize",g._spritesTextureSize);w.bind(b,9729,c,1);b.drawElements(4,a[1],5125,12*a[0])});b.bindVAO()}};e.prototype._initialize=function(a){if(this._initialized)return!0;
a=new h("icon",["iconVS","iconFS"],[],d,a);a.addDefine("SDF","SDF",[!0,!0],"SDF");a.addDefine("DD","DD",[!0,!1],"DD");a.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=a;this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:16,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:16,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:16,
normalized:!1,divisor:0}]};this._vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:24,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:24,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:24,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:24,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:16,stride:24,normalized:!0,divisor:0},{name:"a_size",count:1,type:5126,offset:20,
stride:24,normalized:!1,divisor:0}]};return this._initialized=!0};e.prototype._getIconVAO=function(a,b,c){if(c){if(b.iconDDVertexArrayObject)return b.iconDDVertexArrayObject;c=b.iconDDVertexBuffer;var d=b.iconIndexBuffer;if(!c||!d)return null;b.iconDDVertexArrayObject=new n(a,this._attributeLocationsDD,this._vertexAttributesDD,{geometry:c},d);return b.iconDDVertexArrayObject}if(b.iconVertexArrayObject)return b.iconVertexArrayObject;c=b.iconVertexBuffer;d=b.iconIndexBuffer;if(!c||!d)return null;b.iconVertexArrayObject=
new n(a,this._attributeLocations,this._vertexAttributes,{geometry:c},d);return b.iconVertexArrayObject};return e}()})},"esri/views/vectorTiles/renderers/SDFRenderer":function(){define("require exports dojo/has ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec3 ../../../core/libs/gl-matrix/vec4 ../GeometryUtils ./rendererUtils ./vtShaderSnippets ../../webgl/ShaderVariations ../../webgl/VertexArrayObject".split(" "),function(p,e,a,b,c,f,d,h,n,m,k){var q=1/65536;return function(){function e(){this._attributeLocations=
{a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3};this._attributeLocationsDD={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3,a_color:4,a_size:5};this._initialized=!1;this._viewProjMat=b.create();this._offsetVector=c.create();this._extrudeMat=b.create();this._haloColor=f.create();this._sdfColor=f.create();this._scaleVec=c.create()}e.prototype.dispose=function(){};e.prototype.render=function(c,e,f,g,k,m,n,p,B,C,E,F,G){var l=this;if(!a("esri-vector-tiles-avoid-text")){this._initialized||this._initialize(c);
var r=p.getLayoutValue("text-size",f),u=d.degToByte(k),t=p.getLayoutValue("text-rotation-alignment",f);2===t&&(t=1===p.getLayoutValue("symbol-placement",f)?0:1);var v=0===t,t=p.getLayoutValue("text-keep-upright",f)&&v;g=3===g;F=.8*3/F;var w=G*p.getPaintValue("text-opacity",f);this._glyphTextureSize||(this._glyphTextureSize=new Float32Array([B.width/4,B.height/4]));G=n.tileTransform.transform;var x=p.getPaintValue("text-translate",f);if(0!==x[0]||0!==x[1]){b.copy(this._viewProjMat,n.tileTransform.transform);
G=x[0];var x=x[1],z=0,y=0,y=(1<<n.key.level)/Math.pow(2,f)*(n.coordRange/512);if(1===p.getPaintValue("text-translate-anchor",f)){z=-d.C_DEG_TO_RAD*k;k=Math.sin(z);var N=Math.cos(z),z=y*(G*N-x*k),y=y*(G*k+x*N)}else z=y*G,y*=x;this._offsetVector[0]=z;this._offsetVector[1]=y;this._offsetVector[2]=0;b.translate(this._viewProjMat,this._viewProjMat,this._offsetVector);G=this._viewProjMat}v?b.copy(this._extrudeMat,C):b.copy(this._extrudeMat,E);this._scaleVec[0]=1/24;this._scaleVec[1]=1/24;this._scaleVec[2]=
1;b.scale(this._extrudeMat,this._extrudeMat,this._scaleVec);C=p.hasDataDrivenText;if(E=this._getSDFVAO(c,n,C)){c.bindVAO(E);var A=this._shaderVariations.getProgram([C,g],void 0,void 0,C?this._attributeLocationsDD:this._attributeLocations);c.bindProgram(A);A.setUniformMatrix4fv("u_transformMatrix",G);A.setUniformMatrix4fv("u_extrudeMatrix",this._extrudeMat);A.setUniform2fv("u_normalized_origin",n.tileTransform.displayCoord);A.setUniform1f("u_depth",p.z+q);A.setUniform2fv("u_mosaicSize",this._glyphTextureSize);
A.setUniform1f("u_mapRotation",u);A.setUniform1f("u_keepUpright",t?1:0);A.setUniform1f("u_level",10*f);A.setUniform1f("u_fadeSpeed",10*m.fadeSpeed);A.setUniform1f("u_minfadeLevel",10*m.minfadeLevel);A.setUniform1f("u_maxfadeLevel",10*m.maxfadeLevel);A.setUniform1f("u_fadeChange",10*(f+m.fadeChange));A.setUniform1f("u_opacity",w);A.setUniform1i("u_texture",0);A.setUniform1f("u_size",r);A.setUniform1f("u_antialiasingWidth",F);g&&(m=h.int32To4Bytes(e.layerID),A.setUniform4f("u_id",m[0],m[1],m[2],m[3]));
e.glyphPerPageElementsMap.forEach(function(a,b){B.bind(c,9729,b,0);var d=p.getPaintValue("text-halo-color",f);b=p.getPaintValue("text-halo-width",f);if(0<d[3]&&0<b){var e=d[3]*w;l._haloColor[0]=e*d[0];l._haloColor[1]=e*d[1];l._haloColor[2]=e*d[2];l._haloColor[3]=e;d=3*p.getPaintValue("text-halo-blur",f);b*=3;A.setUniform4fv("u_color",l._haloColor);A.setUniform1f("u_halo",1);A.setUniform1f("u_edgeDistance",b);A.setUniform1f("u_edgeBlur",d);c.drawElements(4,a[1],5125,12*a[0])}b=p.getPaintValue("text-color",
f);0<b[3]&&(d=b[3]*w,l._sdfColor[0]=d*b[0],l._sdfColor[1]=d*b[1],l._sdfColor[2]=d*b[2],l._sdfColor[3]=d,A.setUniform4fv("u_color",l._sdfColor),A.setUniform1f("u_halo",0),A.setUniform1f("u_edgeDistance",0),A.setUniform1f("u_edgeBlur",0),c.drawElements(4,a[1],5125,12*a[0]))});c.bindVAO()}}};e.prototype._initialize=function(a){if(this._initialized)return!0;a=new m("text",["textVS","textFS"],[],n,a);a.addDefine("DD","DD",[!0,!1],"DD");a.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=a;this._vertexAttributes=
{geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:16,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:16,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}]};this._vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:24,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:24,
normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:24,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:24,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:16,stride:24,normalized:!0,divisor:0},{name:"a_size",count:1,type:5126,offset:20,stride:24,normalized:!1,divisor:0}]};return this._initialized=!0};e.prototype._getSDFVAO=function(a,b,c){if(c){if(b.textDDVertexArrayObject)return b.textDDVertexArrayObject;c=b.textDDVertexBuffer;
var d=b.textIndexBuffer;if(!c||!d)return null;b.textDDVertexArrayObject=new k(a,this._attributeLocationsDD,this._vertexAttributesDD,{geometry:c},d);return b.textDDVertexArrayObject}if(b.textVertexArrayObject)return b.textVertexArrayObject;c=b.textVertexBuffer;d=b.textIndexBuffer;if(!c||!d)return null;b.textVertexArrayObject=new k(a,this._attributeLocations,this._vertexAttributes,{geometry:c},d);return b.textVertexArrayObject};return e}()})},"esri/views/vectorTiles/renderers/TileInfoRenderer":function(){define("require exports ../GeometryUtils ./vtShaderSnippets ../../webgl/BufferObject ../../webgl/Program ../../webgl/Texture ../../webgl/VertexArrayObject".split(" "),
function(p,e,a,b,c,f,d,h){return function(){function e(){this._initialized=!1;this._maxWidth=0;this._color=new Float32Array([1,0,0,1])}e.prototype.dispose=function(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null);this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null);this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null);this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),
this._tileInfoVertexArrayObject=null)};e.prototype.render=function(a,b){this._initialized||this._initialize(a);a.bindVAO(this._outlineVertexArrayObject);a.bindProgram(this._outlineProgram);this._outlineProgram.setUniformMatrix4fv("u_transformMatrix",b.tileTransform.transform);this._outlineProgram.setUniform2fv("u_normalized_origin",b.tileTransform.displayCoord);this._outlineProgram.setUniform1f("u_coord_range",b.coordRange);this._outlineProgram.setUniform1f("u_depth",0);this._outlineProgram.setUniform4fv("u_color",
this._color);a.setLineWidth(2);a.drawArrays(3,0,4);a.bindVAO();var c=this._getTexture(a,b);c&&(a.bindVAO(this._tileInfoVertexArrayObject),a.bindProgram(this._tileInfoProgram),a.bindTexture(c,0),this._tileInfoProgram.setUniformMatrix4fv("u_transformMatrix",b.tileTransform.transform),this._tileInfoProgram.setUniform2fv("u_normalized_origin",b.tileTransform.displayCoord),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform1f("u_coord_ratio",b.coordRange/512),this._tileInfoProgram.setUniform2f("u_delta",
8,8),this._tileInfoProgram.setUniform2f("u_dimensions",c.descriptor.width,c.descriptor.height),a.drawArrays(5,0,4),a.bindVAO())};e.prototype._initialize=function(a){if(this._initialized)return!0;var d={a_pos:0},e=new f(a,b.backgroundVS,b.backgroundFS,d),g=new f(a,b.tileInfoVS,b.tileInfoFS,d),l={geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},m=new Int8Array([0,0,1,0,1,1,0,1]),m=c.createVertex(a,35044,m),m=new h(a,d,l,{geometry:m}),n=new Int8Array([0,0,1,0,0,
1,1,1]),n=c.createVertex(a,35044,n);a=new h(a,d,l,{geometry:n});this._outlineProgram=e;this._tileInfoProgram=g;this._outlineVertexArrayObject=m;this._tileInfoVertexArrayObject=a;return this._initialized=!0};e.prototype._getTexture=function(b,c){if(c.texture)return c.texture;this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","canvas2d"),this._canvas.setAttribute("width","256"),this._canvas.setAttribute("height","32"),this._canvas.setAttribute("style","display:none"));
var e=c.key.id,f=this._canvas.getContext("2d");f.font="24px sans-serif";f.textAlign="left";f.textBaseline="middle";var h=f.measureText(e),h=Math.pow(2,Math.ceil(a.log2(h.width+2)));h>this._maxWidth&&(this._maxWidth=h);f.clearRect(0,0,this._maxWidth,32);f.fillStyle=c.key.level>c.refKey.level?"red":"blue";f.fillText(e,0,16);c.texture=new d(b,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728},this._canvas);return c.texture};return e}()})},"url:esri/views/vectorTiles/renderers/shaders/backgroundShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\x3c!--\r\n  // YF TODO: (doc)\r\n--\x3e\r\n\x3csnippets\x3e\r\n  \x3csnippet name\x3d"backgroundVS"\x3e\r\n    \x3c![CDATA[\r\n    precision mediump float;\r\n\r\n    attribute vec2 a_pos;\r\n\r\n  #ifdef ID\r\n    uniform mediump vec4 u_id;\r\n    varying mediump vec4 v_id;\r\n  #endif // ID\r\n\r\n    uniform highp mat4 u_transformMatrix;\r\n    uniform mediump vec2 u_normalized_origin;\r\n    uniform mediump float u_coord_range;\r\n    uniform mediump float u_depth;\r\n\r\n  #ifdef PATTERN\r\n    uniform mediump mat3 u_pattern_matrix; // can we use medium precision?\r\n    varying mediump vec2 v_tileTextureCoord;\r\n  #endif // PATTERN\r\n\r\n    void main() {\r\n      gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(u_coord_range * a_pos, 0.0, 1.0);\r\n\r\n  #ifdef PATTERN\r\n      // calculate the texture coordinates of the current vertex. It will of course get interpolated.\r\n      // The pattern matrix is a 3x3 scale matrix which \'tiles\' the texture inside the tile, translating from tile coordinates\r\n      v_tileTextureCoord \x3d (u_pattern_matrix * vec3(a_pos, 1.0)).xy;\r\n  #endif // PATTERN\r\n\r\n  #ifdef ID\r\n      v_id \x3d u_id / 255.0;\r\n  #endif // ID\r\n    }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"backgroundFS"\x3e\r\n    \x3c![CDATA[\r\n  #ifdef PATTERN\r\n    uniform lowp float u_opacity;\r\n    uniform mediump vec2 u_pattern_tl;\r\n    uniform mediump vec2 u_pattern_br;\r\n    uniform sampler2D u_texture;\r\n\r\n    varying mediump vec2 v_tileTextureCoord;\r\n  #else\r\n    uniform lowp vec4 u_color;\r\n  #endif // PATTERN\r\n\r\n  #ifdef ID\r\n    varying mediump vec4 v_id;\r\n  #endif // ID\r\n\r\n    void main() {\r\n  #ifdef PATTERN\r\n      // normalize the calculated texture coordinate such that it fits in the range of 0 to 1.\r\n      mediump vec2 normalizedTextureCoord \x3d mod(v_tileTextureCoord, 1.0);\r\n\r\n      // interpolate the image coordinate between the top-left and the bottom right to get the actual position to sample.\r\n      // after normalizing the position, we get a value ranging between 0 and 1 which refers to the entire texture, however\r\n      // we need to only sample from area that has our sprite in the mosaic.\r\n      mediump vec2 samplePos \x3d mix(u_pattern_tl, u_pattern_br, normalizedTextureCoord);\r\n\r\n      // sample the sprite mosaic\r\n      lowp vec4 color \x3d texture2D(u_texture, samplePos);\r\n      gl_FragColor \x3d u_opacity * color;\r\n  #else\r\n      gl_FragColor \x3d u_color;\r\n  #endif // PATTERN\r\n\r\n  #ifdef ID\r\n      if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n        discard;\r\n      }\r\n      gl_FragColor \x3d v_id;\r\n  #endif // ID\r\n    }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\x3c/snippets\x3e\r\n',
"url:esri/views/vectorTiles/renderers/shaders/circleShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\x3c!--\r\n  Add your GLSL snippets to this file. You should start from\r\n  importing your old GLSL files. For instance, if you have a\r\n  file such as myShader.vs.glsl you should create a new \x3csnippet name\x3d"myShaderVS"\x3e\r\n  and then copy and paste the GLSL source as the content. You will then convert your\r\n  code to use the {@link module:esri/views/vectorTiles/renderers/vtShaderSnippets vtShaderSnippets}\r\n  instance to access the GLSL code, instead of importing it directly with require("dojo/text!...").\r\n--\x3e\r\n\x3csnippets\x3e\r\n\r\n  \x3csnippet name\x3d"circleVS"\x3e\r\n    \x3c![CDATA[\r\n      precision mediump float;\r\n\r\n      attribute vec2 a_pos;\r\n      attribute vec4 a_color;\r\n      attribute vec4 a_stroke_color;\r\n      attribute vec4 a_data;\r\n\r\n      const float sizePrecision \x3d 0.25; // 1/4\r\n      const float blurPrecision \x3d 0.03125; // 1/32\r\n\r\n      varying lowp vec4 v_color;\r\n      varying lowp vec4 v_stroke_color;\r\n      varying mediump float v_blur;\r\n      varying mediump float v_stroke_width;\r\n      varying mediump float v_radius;\r\n      varying mediump vec2 v_offset;\r\n\r\n    #ifdef ID\r\n      uniform mediump vec4 u_id;\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\r\n      // relative to the tile\'s upper left corner\r\n      // the extrusion vector.\r\n      uniform highp mat4 u_transformMatrix;\r\n\r\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\r\n      uniform highp mat4 u_extrudeMatrix;\r\n\r\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\r\n      uniform highp vec2 u_normalized_origin;\r\n\r\n      // the z of the layer. Given by the order of the layers in the style\r\n      uniform mediump float u_depth;\r\n\r\n      // the opacity of the layer given by the painter\r\n      uniform mediump float u_opacity;\r\n\r\n      uniform mediump float u_antialiasingWidth; // antialiasing (factors in the pixel_ratio for high res devices)\r\n\r\n      void main()\r\n      {\r\n        v_color \x3d a_color;\r\n        v_stroke_color \x3d a_stroke_color;\r\n        v_stroke_width \x3d a_data[1] * sizePrecision;\r\n        v_radius \x3d a_data[2];\r\n        v_blur \x3d max(a_data[0] * blurPrecision, u_antialiasingWidth / (v_radius + v_stroke_width));\r\n\r\n        mediump vec2 offset \x3d vec2(mod(a_pos, 2.0) * 2.0 - 1.0);\r\n        v_offset \x3d offset;\r\n\r\n      #ifdef ID\r\n        v_id \x3d u_id / 255.0;\r\n      #endif // ID\r\n\r\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos * 0.5, 0.0, 1.0) + u_extrudeMatrix * (v_radius + v_stroke_width) * vec4(offset, 0.0, 0.0);\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"circleFS"\x3e\r\n    \x3c![CDATA[\r\n      precision lowp float;\r\n\r\n      varying lowp vec4 v_color;\r\n      varying lowp vec4 v_stroke_color;\r\n      varying mediump float v_blur;\r\n      varying mediump float v_stroke_width;\r\n      varying mediump float v_radius;\r\n      varying mediump vec2 v_offset;\r\n\r\n    #ifdef ID\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      void main()\r\n      {\r\n        mediump float dist \x3d length(v_offset);\r\n\r\n        mediump float alpha \x3d smoothstep(0.0, -v_blur, dist - 1.0);\r\n\r\n        lowp float color_mix_ratio \x3d v_stroke_width \x3c 0.01 ? 0.0 : smoothstep(-v_blur, 0.0, dist - v_radius / (v_radius + v_stroke_width));\r\n\r\n        gl_FragColor \x3d alpha * mix(v_color, v_stroke_color, color_mix_ratio);\r\n\r\n      #ifdef ID\r\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n          discard;\r\n        }\r\n        gl_FragColor \x3d v_id;\r\n      #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n\x3c/snippets\x3e\r\n\r\n',
"url:esri/views/vectorTiles/renderers/shaders/fillShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\x3c!--\r\n  // YF TODO: (doc)\r\n--\x3e\r\n\x3csnippets\x3e\r\n  \x3csnippet name\x3d"fillVS"\x3e\r\n    \x3c![CDATA[\r\n      precision mediump float;\r\n\r\n      attribute vec2 a_pos;\r\n\r\n      uniform highp mat4 u_transformMatrix;\r\n      uniform highp vec2 u_normalized_origin;\r\n      uniform mediump float u_depth;\r\n\r\n    #ifdef PATTERN\r\n      uniform mediump mat3 u_pattern_matrix;\r\n      varying mediump vec2 v_tileTextureCoord;\r\n    #endif // PATTERN\r\n\r\n    #ifdef ID\r\n      uniform mediump vec4 u_id;\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n    #ifdef DD\r\n      attribute vec4 a_color;\r\n    #else\r\n      uniform lowp vec4 u_color;\r\n    #endif // DD\r\n      varying lowp vec4 v_color;\r\n\r\n      void main()\r\n      {\r\n      #ifdef DD\r\n        v_color \x3d a_color;\r\n      #else\r\n        v_color \x3d u_color;\r\n      #endif // DD\r\n\r\n      #ifdef ID\r\n        v_id \x3d u_id / 255.0;\r\n      #endif // ID\r\n\r\n      #ifdef PATTERN\r\n        // calculate the texture coordinates of the current vertex. It will of course get interpolated.\r\n        // The pattern matrix is a 3x3 scale matrix which \'tiles\' the texture inside the tile, translating from tile coordinates\r\n        // (-4k to 8k -1) to texture coordinates.\r\n        v_tileTextureCoord \x3d (u_pattern_matrix * vec3(a_pos, 1.0)).xy;\r\n      #endif // PATTERN\r\n\r\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0, 1.0);\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"fillFS"\x3e\r\n    \x3c![CDATA[\r\n      precision lowp float;\r\n\r\n    #ifdef PATTERN\r\n      uniform mediump vec2 u_pattern_tl;\r\n      uniform mediump vec2 u_pattern_br;\r\n      uniform lowp sampler2D u_texture;\r\n      varying mediump vec2 v_tileTextureCoord;\r\n    #endif // PATTERN\r\n\r\n    #ifdef ID\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      varying lowp vec4 v_color;\r\n\r\n      vec4 mixColors(vec4 color1, vec4 color2) {\r\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Alpha_blending)\r\n        // we use pre-multiplied colors hence the need for this kind of mixing. At lease we save ourselves an extra division...\r\n        float compositeAlpha \x3d color2.a + color1.a * (1.0 - color2.a);\r\n        vec3 compositeColor \x3d color2.rgb + color1.rgb * (1.0 - color2.a);\r\n\r\n        return vec4(compositeColor, compositeAlpha);\r\n      }\r\n      void main()\r\n      {\r\n      #ifdef PATTERN\r\n        // normalize the calculated texture coordinate such that it fits in the range of 0 to 1.\r\n        mediump vec2 normalizedTextureCoord \x3d mod(v_tileTextureCoord, 1.0);\r\n\r\n        // interpolate the image coordinate between the top-left and the bottom right to get the actual position to sample.\r\n        // after normalizing the position, we get a value ranging between 0 and 1 which refers to the entire texture, however\r\n        // we need to only sample from area that has our sprite in the mosaic.\r\n        mediump vec2 samplePos \x3d mix(u_pattern_tl, u_pattern_br, normalizedTextureCoord);\r\n\r\n        // sample the sprite mosaic\r\n        lowp vec4 color \x3d texture2D(u_texture, samplePos);\r\n        gl_FragColor \x3d v_color[3] * color;\r\n      #else\r\n        gl_FragColor \x3d v_color;\r\n      #endif // PATTERN\r\n\r\n      #ifdef ID\r\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n          discard;\r\n        }\r\n        gl_FragColor \x3d v_id;\r\n      #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\x3c/snippets\x3e\r\n',
"url:esri/views/vectorTiles/renderers/shaders/iconShaders.xml":"\x3c?xml version\x3d\"1.0\" encoding\x3d\"UTF-8\"?\x3e\r\n\x3c!--\r\n  Add your GLSL snippets to this file. You should start from\r\n  importing your old GLSL files. For instance, if you have a\r\n  file such as myShader.vs.glsl you should create a new \x3csnippet name\x3d\"myShaderVS\"\x3e\r\n  and then copy and paste the GLSL source as the content. You will then convert your\r\n  code to use the {@link module:esri/views/vectorTiles/renderers/vtShaderSnippets vtShaderSnippets}\r\n  instance to access the GLSL code, instead of importing it directly with require(\"dojo/text!...\").\r\n--\x3e\r\n\x3csnippets\x3e\r\n  \x3csnippet name\x3d\"rgba2floatFunc\"\x3e\r\n    \x3c![CDATA[\r\n    float rgba2float(vec4 rgba) {\r\n      return dot(rgba,  vec4(1.0/16777216.0, 1.0/65535.0, 1.0/256.0, 1.0));\r\n    }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d\"iconVS\"\x3e\r\n    \x3c![CDATA[\r\n      attribute vec2 a_pos;\r\n      attribute vec2 a_vertexOffset;\r\n      attribute vec4 a_tex;\r\n      attribute vec4 a_levelInfo;\r\n\r\n    #ifdef DD\r\n      attribute vec4 a_color;\r\n      attribute mediump float a_size;\r\n    #else\r\n      uniform lowp vec4 u_color;\r\n      uniform mediump float u_size;\r\n    #endif // DD\r\n\r\n    #ifdef ID\r\n      uniform mediump vec4 u_id;\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      varying lowp vec4 v_color;\r\n\r\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\r\n      // relative to the tile's upper left corner\r\n      // the extrusion vector.\r\n      uniform highp mat4 u_transformMatrix;\r\n\r\n      // the extrude matrix which is responsible for the 'anti-zoom' as well as the rotation\r\n      uniform highp mat4 u_extrudeMatrix;\r\n\r\n      // u_normalized_origin is the tile's upper left corner given in normalized coordinates\r\n      uniform highp vec2 u_normalized_origin;\r\n\r\n      // the size of the mosaic given in pixels\r\n      uniform vec2 u_mosaicSize;\r\n\r\n      // the z of the layer. Given by the order of the layers in the style\r\n      uniform mediump float u_depth;\r\n\r\n      // the map's rotation from the north\r\n      uniform mediump float u_mapRotation;\r\n      uniform mediump float u_level;\r\n\r\n      // indicate whether the current set of iconst should be kept upright when the map is rotated\r\n      uniform lowp float u_keepUpright;\r\n\r\n      // the rate of the change in the opacity (fade) of the icons\r\n      uniform mediump float u_fadeSpeed;\r\n\r\n      // the low level we transition (to/from)\r\n      uniform mediump float u_minfadeLevel;\r\n\r\n      // the high level we transition (to/from)\r\n      uniform mediump float u_maxfadeLevel;\r\n\r\n      // the amount of fade given teh current time past the last recorded level\r\n      uniform mediump float u_fadeChange;\r\n\r\n      // the opacity of the layer given by the painter\r\n      uniform mediump float u_opacity;\r\n\r\n      // the interpolated texture coordinate value to be used by the fragment shader in order to sample the sprite texture\r\n      varying mediump vec2 v_tex;\r\n\r\n      // the calculated transparency to be applied by the fragment shader. It is incorporating both the fade as well as the\r\n      // opacity of the layer given by the painter\r\n      varying lowp float v_transparency;\r\n\r\n      varying mediump vec2 v_size;\r\n\r\n      // the vertex offsets are given in integers, therefore in order to maintain a reasonable precision we multiply the values\r\n      // by 16 and then at the shader devide by the same number\r\n      const float C_OFFSET_PRECISION \x3d 1.0 / 32.0;\r\n\r\n      const float C_256_TO_RAD \x3d 3.14159265359 / 128.0;\r\n      const float C_DEG_TO_RAD \x3d 3.14159265359 / 180.0;\r\n      const float tileCoordRatio \x3d 1.0 / 8.0;\r\n\r\n      void main()\r\n      {\r\n        mediump float a_labelMinLevel \x3d a_levelInfo[0];\r\n        mediump float a_angle         \x3d a_levelInfo[1];\r\n        mediump float a_minLevel      \x3d a_levelInfo[2];\r\n        mediump float a_maxLevel      \x3d a_levelInfo[3];\r\n\r\n        // if the given vertex should not be visible simply clip it by adding it a value that will push it outside the clipping plane\r\n        mediump float delta_z \x3d 0.0;\r\n\r\n        // If the label rotates with the map, and if the rotated label is upside down, hide it\r\n        mediump float rotated \x3d mod(a_angle + u_mapRotation, 256.0);\r\n        delta_z +\x3d (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated)); //ie. z +\x3d (flip \x3e 0) \x26\x26 (64 \x3c\x3d rotated) \x26\x26 (rotated \x3c 192)\r\n\r\n        // u_level is the current service level adjusted for the change in font size\r\n        delta_z +\x3d 1.0 - step(a_minLevel, u_level); // Test if (level \x3c minLevel)\r\n        delta_z +\x3d step(a_maxLevel, u_level); // Test if (maxLevel \x3c\x3d level)\r\n\r\n        // calculate the alpha given the change in the fade and the fade-speed\r\n        lowp float alpha \x3d clamp((u_fadeChange - a_labelMinLevel) / u_fadeSpeed, 0.0, 1.0);\r\n\r\n        // if the speed is positive we are zooming in and therefore we need to 'fade-in'. Else we need to 'fade-out'\r\n        v_transparency \x3d (u_fadeSpeed \x3e\x3d 0.0 ? alpha : 1.0 - alpha);\r\n\r\n        // now deal with the min/max fade-levels. If we exceeded the level we simply snap to 0 or 1\r\n        if (u_maxfadeLevel \x3c a_labelMinLevel)\r\n        {\r\n          v_transparency \x3d 0.0;\r\n        }\r\n        if (u_minfadeLevel \x3e\x3d a_labelMinLevel)\r\n        {\r\n          v_transparency \x3d 1.0;\r\n        }\r\n\r\n        // if label had been faded out, clip it\r\n        delta_z +\x3d step(v_transparency, 0.0);\r\n\r\n        vec2 offset \x3d C_OFFSET_PRECISION * a_vertexOffset;\r\n\r\n        v_size \x3d abs(offset);\r\n\r\n      #ifdef SDF\r\n        offset \x3d (120.0 / 86.0) * offset;\r\n      #endif // SDF\r\n\r\n      #ifdef DD\r\n        mediump float icon_size \x3d a_size;\r\n      #else\r\n        mediump float icon_size \x3d u_size;\r\n      #endif // DD\r\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * icon_size * vec4(offset, delta_z, 0.0);\r\n\r\n        float opacity;\r\n\r\n      #ifdef SDF\r\n      #ifdef DD\r\n        v_color \x3d a_color;\r\n      #else\r\n        v_color \x3d u_color;\r\n      #endif // DD\r\n        opacity \x3d u_opacity;\r\n      #else // SDF\r\n      #ifdef DD\r\n        opacity \x3d a_color.w;\r\n      #else\r\n        opacity \x3d u_opacity;\r\n      #endif // DD\r\n      #endif // SDF\r\n\r\n      #ifdef ID\r\n        v_id \x3d u_id / 255.0;\r\n      #endif // ID\r\n\r\n        v_tex \x3d a_tex.xy / u_mosaicSize;\r\n        v_transparency *\x3d opacity;\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d\"iconFS\"\x3e\r\n    \x3c![CDATA[\r\n      precision mediump float;\r\n\r\n      uniform lowp sampler2D u_texture; // SDF texture\r\n    #ifdef SDF\r\n      uniform lowp vec4 u_color; // a color to override the one of the vertex\r\n      uniform lowp vec4 u_outlineColor;\r\n      uniform mediump float u_outlineSize;\r\n    #endif // SDF\r\n\r\n      varying mediump vec2 v_tex;\r\n      // the calculated transparency to be applied by the fragment shader. It is incorporating both the fade as well as the\r\n      // opacity of the layer given by the painter\r\n      varying lowp float v_transparency;\r\n\r\n      varying mediump vec2 v_size;\r\n\r\n    #ifdef SDF\r\n      varying lowp vec4 v_color;\r\n    #endif // SDF\r\n\r\n    #ifdef ID\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      // we need the conversion function from RGBA to float\r\n      $rgba2floatFunc\r\n\r\n      vec4 mixColors(vec4 color1, vec4 color2) {\r\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Alpha_blending)\r\n        // we use pre-multiplied colors hence the need for this kind of mixing. At lease we save ourselves an extra division...\r\n        float compositeAlpha \x3d color2.a + color1.a * (1.0 - color2.a);\r\n        vec3 compositeColor \x3d color2.rgb + color1.rgb * (1.0 - color2.a);\r\n\r\n        return vec4(compositeColor, compositeAlpha);\r\n      }\r\n\r\n      void main()\r\n      {\r\n      #ifdef SDF\r\n        lowp vec4 fillPixelColor \x3d v_color;\r\n\r\n        // calculate the distance from the edge [-0.5, 0.5]\r\n        float d \x3d rgba2float(texture2D(u_texture, v_tex)) - 0.5;\r\n\r\n        // Work around loss of precision for 'd \x3d 0.0'.\r\n        // '0' gets normalised to 0.5 * 256 \x3d 128 before float packing, but can only\r\n        // be stored in the texture as 128 / 255 \x3d 0.502.\r\n        // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/7058#issuecomment-603110\r\n        const float diff \x3d (128.0 / 255.0 - 0.5);\r\n\r\n        // adjust all values, not just those close to 0, to avoid discontinuities in\r\n        // the outlines of other shapes e.g. circles\r\n        d \x3d d - diff;\r\n\r\n        // the soft edge ratio is about 1.5 pixels allocated for the soft edge.\r\n        // 1 / 86 represents a single pixel given the the size of the SDF is 128 and we add 4 pixels margins to deal with\r\n        // other non SDF types.\r\n        // The rasterized geometry takes only 86 pixels because of the extra 16 pixels margin for the outline.\r\n        const float sofetEdgeRatio \x3d 0.248062016; // \x3d\x3d\x3e (32.0 / 86.0) / 1.5;\r\n        float size \x3d max(v_size.x, v_size.y);\r\n        float dist \x3d d * sofetEdgeRatio * size;\r\n\r\n        // set the fragment's transparency according to the distance from the edge\r\n        fillPixelColor *\x3d clamp(0.5 - dist, 0.0, 1.0);\r\n\r\n        // count for the outline\r\n        // therefore tint the entire icon area.\r\n        if (u_outlineSize \x3e 0.25) {\r\n          lowp vec4 outlinePixelColor \x3d u_outlineColor;\r\n          // the outline limit ratio is derived from the 16 pixels allocated for the outline and the fact that 1/86 represents\r\n          // a single pixel.\r\n          const float outlineLimitRatio \x3d (16.0 / 86.0);\r\n          float clampedOutlineSize \x3d sofetEdgeRatio * min(u_outlineSize, outlineLimitRatio * max(v_size.x, v_size.y));\r\n\r\n          outlinePixelColor *\x3d clamp(0.5 - (abs(dist) - clampedOutlineSize), 0.0, 1.0);\r\n\r\n          // finally combine the outline and the fill colors\r\n          gl_FragColor \x3d v_transparency * mixColors(fillPixelColor, outlinePixelColor);\r\n        }\r\n        else {\r\n          gl_FragColor \x3d v_transparency * fillPixelColor;\r\n        }\r\n      #else // not an SDF\r\n        lowp vec4 texColor \x3d texture2D(u_texture, v_tex);\r\n        gl_FragColor \x3d v_transparency * texColor;\r\n      #endif // SDF\r\n\r\n      #ifdef ID\r\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n          discard;\r\n        }\r\n        gl_FragColor \x3d v_id;\r\n      #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n\x3c/snippets\x3e\r\n\r\n",
"url:esri/views/vectorTiles/renderers/shaders/lineShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\x3c!--\r\n  // YF TODO: (doc)\r\n--\x3e\r\n\x3csnippets\x3e\r\n  \x3csnippet name\x3d"lineVS"\x3e\r\n    \x3c![CDATA[\r\n      /* The implementation of the renderer is based on the article and implementation of MB described here:\r\n      * https://www.mapbox.com/blog/drawing-antialiased-lines/\r\n      */\r\n\r\n      attribute vec2 a_pos;\r\n      attribute vec4 a_offsetAndNormal;\r\n      attribute vec2 a_accumulatedDistance;\r\n\r\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\r\n      // relative to the tile\'s upper left corner\r\n      // the extrusion vector.\r\n      uniform highp mat4 u_transformMatrix;\r\n\r\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\r\n      uniform highp mat4 u_extrudeMatrix;\r\n\r\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\r\n      uniform highp vec2 u_normalized_origin;\r\n\r\n      uniform mediump float u_blur; // the feather distance at which the line edge fades out\r\n\r\n      // the z of the layer. Given by the order of the layers in the style\r\n      uniform mediump float u_depth;\r\n\r\n      // the interpolated normal to the line. the information is packed into the two LSBs of the vertex coordinate\r\n      varying mediump vec2 v_normal;\r\n\r\n      // the accumulated distance along the line. We need this information in order to render the dashes.\r\n      varying highp float v_accumulatedDistance;\r\n\r\n      const float scale \x3d 1.0 / 31.0;\r\n\r\n    #ifdef DD\r\n      attribute vec4 a_color;\r\n      attribute mediump float a_width;\r\n    #else\r\n      uniform lowp vec4 u_color;\r\n      uniform mediump float u_width;\r\n    #endif // DD\r\n\r\n    #ifdef ID\r\n      uniform mediump vec4 u_id;\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      varying lowp vec4 v_color;\r\n      varying mediump float v_lineHalfWidth; // the inset and outset of the line\r\n\r\n    #ifndef PATTERN\r\n      uniform mediump vec2 u_dasharray;\r\n      varying mediump vec2 v_dasharray;\r\n    #endif\r\n\r\n      void main()\r\n      {\r\n        v_normal \x3d a_offsetAndNormal.zw * scale;\r\n\r\n      #ifdef DD\r\n        v_lineHalfWidth \x3d a_width + u_blur;\r\n      #else\r\n        v_lineHalfWidth \x3d u_width + u_blur;\r\n      #endif // DD\r\n\r\n        v_lineHalfWidth *\x3d 0.5;\r\n\r\n      #ifndef PATTERN\r\n      #ifdef DD\r\n        v_dasharray \x3d u_dasharray * a_width;\r\n      #else\r\n        v_dasharray \x3d u_dasharray * u_width;\r\n      #endif // DD\r\n      #endif\r\n\r\n        // calculate the relative distance from the centerline to the edge of the line. Since offset is given in integers (for the\r\n        // sake of using less attribute memory, we need to scale it back to the original range of ~ 0: 1)\r\n        mediump vec2 dist \x3d v_lineHalfWidth * a_offsetAndNormal.xy * scale;\r\n\r\n        // transform the vertex\r\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * vec4(dist, 0.0, 0.0);\r\n\r\n        // the accumulated distance will be used to calculate the dashes (or the no-data...)\r\n        v_accumulatedDistance \x3d a_accumulatedDistance.x;\r\n\r\n        #ifdef DD\r\n          v_color \x3d a_color;\r\n        #else\r\n          v_color \x3d u_color;\r\n        #endif // DD\r\n\r\n        #ifdef ID\r\n          v_id \x3d u_id / 255.0;\r\n        #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"lineFS"\x3e\r\n    \x3c![CDATA[\r\n      uniform mediump float u_blur;\r\n\r\n      varying mediump vec2 v_normal;\r\n      varying highp float v_accumulatedDistance;\r\n\r\n      varying mediump float v_lineHalfWidth;\r\n      varying lowp vec4 v_color;\r\n\r\n    #ifdef PATTERN\r\n      uniform mediump vec2 u_pattern_tl;\r\n      uniform mediump vec2 u_pattern_br;\r\n      uniform mediump vec2 u_spriteSize;\r\n      uniform sampler2D u_texture;\r\n\r\n      // Horizontal scale is used to scale the horizontal texture coordinate v_normal.x before adding it as an offset to the\r\n      // accumulated distance. Most vertices will have v_normal.x \x3d\x3d 0, because the pattern must be sampled only depending on\r\n      // the v_accumulatedDistance value. But tessellation at caps can have vertices with v_normal.x !\x3d 0, thus allowing to\r\n      // "keep moving" for a few more pixel even when the line has ended or has not started yet.\r\n      const mediump float tileCoordRatio \x3d 8.0;\r\n    #else\r\n      varying mediump vec2 v_dasharray;\r\n    #endif\r\n\r\n    #ifdef ID\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      void main()\r\n      {\r\n        // dist represent the distance of the fragment from the line. 1.0 or -1.0 will be the values on the edge of the line,\r\n        // and any value in between will be inside the line (the sign represent the direction - right or left).\r\n        // since u_linewidth.s (half line width) is represented in pixels, dist is also given in pixels\r\n        mediump float fragDist \x3d length(v_normal) * v_lineHalfWidth;\r\n\r\n        // calculate the alpha given the difference between the line-width and the distance of the fragment from the center-line.\r\n        // We need to count for both sides of the line.\r\n        lowp float alpha \x3d clamp((v_lineHalfWidth - fragDist) / u_blur, 0.0, 1.0);\r\n\r\n      #ifdef PATTERN\r\n        // we need to calculate the relative portion of the line texture along the line given the accumulated distance aliong the line\r\n        // The computed value should is anumber btween 0 and 1 which will later be used to interpolate btween the BR and TL values\r\n        mediump float relativeTexX \x3d mod((v_accumulatedDistance + v_normal.x * v_lineHalfWidth * tileCoordRatio) / u_spriteSize.x, 1.0);\r\n\r\n        // in order to calculate the texture coordinates perpendicular to the line (Y axis), we use the interpolated normal values\r\n        // which range from -1.0 to 1.0. On the line\'s centerline, the value of the interpolated normal is 0.0, however the relative\r\n        // texture value should be 0.5 (given that at the bottom of the line, the texture coordinate must be equal to 0.0)\r\n        // (TL) ---------------------------      --\x3e left edge of line. Interpolated normal is 1.0\r\n        //              | -\x3e line-width / 2\r\n        //      - - - - - - - - - - - - - -\r\n        //              | -\x3e line-width / 2\r\n        //      ---------------------------- (BR)--\x3e right edge of line. Interpolated normal is -1.0\r\n\r\n        mediump float relativeTexY \x3d 0.5 + (v_normal.y * v_lineHalfWidth / u_spriteSize.y);\r\n\r\n        // claculate the actual texture coordinates by interpolating between the TL/BR pattern coordinates\r\n        mediump vec2 texCoord \x3d mix(u_pattern_tl, u_pattern_br, vec2(relativeTexX, relativeTexY));\r\n\r\n        // get the color from the texture\r\n        lowp vec4 color \x3d texture2D(u_texture, texCoord);\r\n\r\n        // finally write the fragment value\r\n        gl_FragColor \x3d alpha * v_color[3] * color;\r\n      #else\r\n        // now calculate the dashes given the accumulated distance of the line:\r\n        // start with calculating a normalized position along the line\r\n        lowp float dashPos \x3d  mod(v_accumulatedDistance, v_dasharray.x + v_dasharray.y);\r\n\r\n        // calculate the contribution to the alpha of the dash part. It is provided by the shortest portion of the position along the dash.\r\n        // we must clamp since the value might be bigger than 1 or smaller than zero (when over a dash).\r\n        //   | \x3c--- pos along the dash part\r\n        // -------_______-------_______\r\n        // when the dashPos is over the \'gap\' part of the dash dasharray.x - dashPos is negative and therefore the alpha will\r\n        // get clamped to zero.\r\n        // when dasharray.x - dashPos is positive, or when dashPos is smaller than 1.0, it gives us a soft edge to each dash part.\r\n        // along the direction of the line.\r\n        lowp float dashAlpha \x3d clamp(min(dashPos, v_dasharray.x - dashPos) + 0.5, 0.0, 1.0);\r\n\r\n        // if we don\'t have a no-data part to the dash then it is a solid line\r\n        dashAlpha \x3d max(sign(-v_dasharray.y), dashAlpha);\r\n        // finally multiply the fragment\'s alpha by the calculated dash-alpha\r\n        alpha *\x3d dashAlpha;\r\n\r\n        // output the fragment color\r\n        gl_FragColor \x3d alpha * v_color;\r\n      #endif // PATTERN\r\n\r\n      #ifdef ID\r\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n          discard;\r\n        }\r\n        gl_FragColor \x3d v_id;\r\n      #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\x3c/snippets\x3e\r\n',
"url:esri/views/vectorTiles/renderers/shaders/outlineShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\x3c!--\r\n  // YF TODO: (doc)\r\n--\x3e\r\n\x3csnippets\x3e\r\n  \x3csnippet name\x3d"outlineVS"\x3e\r\n    \x3c![CDATA[\r\n      attribute vec2 a_pos;\r\n      attribute vec2 a_offset;\r\n      attribute vec2 a_xnormal;\r\n\r\n    #ifdef DD\r\n      attribute vec4 a_color;\r\n    #else\r\n      uniform lowp vec4 u_color;\r\n    #endif // DD\r\n      varying lowp vec4 v_color;\r\n\r\n    #ifdef ID\r\n      uniform mediump vec4 u_id;\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      uniform highp mat4 u_transformMatrix;\r\n      uniform highp mat4 u_extrudeMatrix;\r\n      uniform highp vec2 u_normalized_origin;\r\n      uniform mediump float u_depth;\r\n      uniform mediump float u_outline_width;\r\n\r\n      varying lowp vec2 v_normal;\r\n\r\n      const float scale \x3d 1.0 / 15.0;\r\n\r\n      void main()\r\n      {\r\n      #ifdef DD\r\n        v_color \x3d a_color;\r\n      #else\r\n        v_color \x3d u_color;\r\n      #endif // DD\r\n\r\n      #ifdef ID\r\n        v_id \x3d u_id / 255.0;\r\n      #endif // ID\r\n\r\n        v_normal \x3d a_xnormal;\r\n\r\n        // calculate the relative distance from the centerline to the edge of the line. Since offset is given in integers (for the\r\n        // sake of using less attribute memory, we need to scale it back to the original range of ~ 0: 1)\r\n        mediump vec4 dist \x3d vec4(u_outline_width * a_offset * scale, 0.0, 0.0);\r\n\r\n        // Remove the texture normal bit of the position before scaling it with the\r\n        // model/view matrix. Add the extrusion vector *after* the model/view matrix\r\n        // because we\'re extruding the line in pixel space, regardless of the current\r\n        // tile\'s zoom level.\r\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * dist;\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"outlineFS"\x3e\r\n    \x3c![CDATA[\r\n      varying lowp vec4 v_color;\r\n      varying mediump vec2 v_normal;\r\n\r\n    #ifdef ID\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      void main()\r\n      {\r\n        // Calculate the distance of the pixel from the line in pixels.\r\n        lowp float dist \x3d abs(v_normal.y);\r\n\r\n        lowp float alpha \x3d smoothstep(1.0, 0.0, dist);\r\n        gl_FragColor \x3d alpha * v_color;\r\n\r\n      #ifdef ID\r\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n          discard;\r\n        }\r\n        gl_FragColor \x3d v_id;\r\n      #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\x3c/snippets\x3e\r\n',
"url:esri/views/vectorTiles/renderers/shaders/textShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\x3c!--\r\n  Add your GLSL snippets to this file. You should start from\r\n  importing your old GLSL files. For instance, if you have a\r\n  file such as myShader.vs.glsl you should create a new \x3csnippet name\x3d"myShaderVS"\x3e\r\n  and then copy and paste the GLSL source as the content. You will then convert your\r\n  code to use the {@link module:esri/views/vectorTiles/renderers/vtShaderSnippets vtShaderSnippets}\r\n  instance to access the GLSL code, instead of importing it directly with require("dojo/text!...").\r\n--\x3e\r\n\x3csnippets\x3e\r\n  \x3csnippet name\x3d"rgba2floatFunc"\x3e\r\n    \x3c![CDATA[\r\n    float rgba2float(vec4 rgba) {\r\n      return dot(rgba, vec4(1.0/16777216.0, 1.0/65535.0, 1.0/256.0, 1.0));\r\n    }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"textVS"\x3e\r\n    \x3c![CDATA[\r\n      attribute vec2 a_pos;\r\n      attribute vec2 a_vertexOffset;\r\n      attribute vec4 a_tex;\r\n      attribute vec4 a_levelInfo;\r\n\r\n      uniform lowp vec4 u_color; // always defined as halo does not support data driven but text does\r\n    #ifdef DD\r\n      attribute vec4 a_color;\r\n    #endif // DD\r\n      varying lowp vec4 v_color;\r\n\r\n    #ifdef DD\r\n      attribute mediump float a_size;\r\n    #else\r\n      uniform mediump float u_size;\r\n    #endif // DD\r\n      varying mediump float v_size;\r\n\r\n    #ifdef ID\r\n      uniform mediump vec4 u_id;\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n\r\n      // attribute bool a_visible; // --\x3e a one bit controlling the visibility of the vertex\r\n\r\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\r\n      // relative to the tile\'s upper left corner\r\n      // the extrusion vector.\r\n      uniform highp mat4 u_transformMatrix;\r\n\r\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\r\n      uniform highp mat4 u_extrudeMatrix;\r\n\r\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\r\n      uniform highp vec2 u_normalized_origin;\r\n\r\n      // the size of the mosaic given in pixels\r\n      uniform vec2 u_mosaicSize;\r\n\r\n      // the z of the layer. Given by the order of the layers in the style\r\n      uniform mediump float u_depth;\r\n\r\n      // the map\'s rotation from the north\r\n      uniform mediump float u_mapRotation;\r\n      uniform mediump float u_level;\r\n\r\n      // indicate whether the current set of iconst should be kept upright when the map is rotated\r\n      uniform lowp float u_keepUpright;\r\n\r\n      // the rate of the change in the opacity (fade) of the icons\r\n      uniform mediump float u_fadeSpeed;\r\n\r\n      // the low level we transition (to/from)\r\n      uniform mediump float u_minfadeLevel;\r\n\r\n      // the high level we transition (to/from)\r\n      uniform mediump float u_maxfadeLevel;\r\n\r\n      // the amount of fade given teh current time past the last recorded level\r\n      uniform mediump float u_fadeChange;\r\n\r\n      // the opacity of the layer given by the painter\r\n      uniform mediump float u_opacity;\r\n\r\n      // the interpolated texture coordinate value to be used by the fragment shader in order to sample the sprite texture\r\n      varying lowp vec2 v_tex;\r\n\r\n      // the calculated transparency to be applied by the fragment shader. It is incorporating both the fade as well as the\r\n      // opacity of the layer given by the painter\r\n      varying lowp float v_transparency;\r\n\r\n      // the vertex offsets are given in integers, therefore in order to maintain a reasonable precission we multiply the values\r\n      // by 16 and then at the shader devide by the same number\r\n      const float offsetPrecision \x3d 1.0 / 32.0;\r\n\r\n      // outline position and appearance\r\n      const mediump float edgePos \x3d 0.75; // defined by the SDF encoding\r\n      uniform mediump float u_edgeDistance;\r\n      uniform mediump float u_edgeBlur;\r\n      uniform mediump float u_antialiasingWidth; // antialiasing (factors in the pixel_ratio for high res devices)\r\n\r\n      varying mediump float v_edgeDistance; // will factor in the size\r\n      varying mediump float v_edgeWidth; // will factor in the size\r\n\r\n      uniform lowp float u_halo; // needed to avoid using the color attribute for halo\r\n\r\n      void main()\r\n      {\r\n        mediump float a_labelMinLevel \x3d a_levelInfo[0];\r\n        mediump float a_angle        \x3d a_levelInfo[1];\r\n        mediump float a_minLevel    \x3d a_levelInfo[2];\r\n        mediump float a_maxLevel    \x3d a_levelInfo[3];\r\n\r\n        // if the given vertex should not be visible simply clip it by adding it a value that will push it outside the clipping plane\r\n        mediump float delta_z \x3d 0.0;\r\n\r\n        // TODO: force clipping the vertex in case that the vertex isn\'t visible\r\n        //delta_z +\x3d a_visible ? 0.0 : 1.0;\r\n\r\n        // If the label rotates with the map, and if the rotated label is upside down, hide it\r\n        mediump float rotated \x3d mod(a_angle + u_mapRotation, 256.0);\r\n        delta_z +\x3d (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated)); //ie. z +\x3d (flip \x3e 0) \x26\x26 (64 \x3c\x3d rotated) \x26\x26 (rotated \x3c 192)\r\n\r\n        // u_level is the current service level adjusted for the change in font size\r\n        delta_z +\x3d 1.0 - step(a_minLevel, u_level); // Test if (level \x3c minLevel)\r\n        delta_z +\x3d step(a_maxLevel, u_level); // Test if (maxLevel \x3c\x3d level)\r\n\r\n        // calculate the alpha given the change in the fade and the fade-speed\r\n        lowp float alpha \x3d clamp((u_fadeChange - a_labelMinLevel) / u_fadeSpeed, 0.0, 1.0);\r\n\r\n        // if the speed is positive we are zooming in and therefore we need to \'fade-in\'. Else we need to \'fade-out\'\r\n        v_transparency \x3d (u_fadeSpeed \x3e\x3d 0.0 ? alpha : 1.0 - alpha);\r\n\r\n        // now deal with the min/max fade-levels. If we exceeded the level we simply snap to 0 or 1\r\n        if (u_maxfadeLevel \x3c a_labelMinLevel)\r\n        {\r\n          v_transparency \x3d 0.0;\r\n        }\r\n        if (u_minfadeLevel \x3e\x3d a_labelMinLevel)\r\n        {\r\n          v_transparency \x3d 1.0;\r\n        }\r\n\r\n        // if label has been faded out, clip it\r\n        delta_z +\x3d step(v_transparency, 0.0);\r\n\r\n        v_tex \x3d a_tex.xy / u_mosaicSize;\r\n\r\n      #ifdef DD\r\n        if (u_halo \x3e 0.5)\r\n        {\r\n          v_color \x3d u_color;\r\n          v_transparency *\x3d u_opacity;\r\n        }\r\n        else\r\n        {\r\n          v_color \x3d a_color;\r\n          // opacity already factored in a_color\r\n        }\r\n      #else\r\n        v_color \x3d u_color;\r\n        v_transparency *\x3d u_opacity;\r\n      #endif // DD\r\n\r\n      #ifdef DD\r\n        v_size \x3d a_size;\r\n      #else\r\n        v_size \x3d u_size;\r\n      #endif // DD\r\n\r\n      #ifdef ID\r\n        v_id \x3d u_id / 255.0;\r\n      #endif // ID\r\n\r\n        v_edgeDistance \x3d edgePos - u_edgeDistance / v_size;\r\n        v_edgeWidth \x3d (u_antialiasingWidth + u_edgeBlur) / v_size;\r\n\r\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * v_size * vec4(offsetPrecision * a_vertexOffset, delta_z, 0.0);\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n  \x3csnippet name\x3d"textFS"\x3e\r\n    \x3c![CDATA[\r\n      uniform lowp sampler2D u_texture;\r\n      uniform mediump float u_edgeDistance;\r\n\r\n      varying lowp vec2 v_tex;\r\n      varying lowp float v_transparency;\r\n      varying lowp vec4 v_color;\r\n      varying mediump float v_edgeWidth;\r\n      varying mediump float v_edgeDistance;\r\n\r\n    #ifdef ID\r\n      varying mediump vec4 v_id;\r\n    #endif // ID\r\n\r\n      // this is taken from http://www.valvesoftware.com/publications/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf\r\n      // and https://www.mapbox.com/blog/text-signed-distance-fields/\r\n      // http://metalbyexample.com/rendering-text-in-metal-with-signed-distance-fields/\r\n\r\n      void main()\r\n      {\r\n        // read the distance from the SDF texture\r\n        lowp float dist \x3d texture2D(u_texture, v_tex).a;\r\n\r\n        // use a smooth-step in order to calculate the geometry of the shape given by the distance field\r\n        mediump float alpha \x3d smoothstep(v_edgeDistance - v_edgeWidth, v_edgeDistance + v_edgeWidth, dist) * v_transparency;\r\n\r\n        gl_FragColor \x3d alpha * v_color;\r\n\r\n      #ifdef ID\r\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\r\n          discard;\r\n        }\r\n        gl_FragColor \x3d v_id;\r\n      #endif // ID\r\n      }\r\n    ]]\x3e\r\n  \x3c/snippet\x3e\r\n\r\n\x3c/snippets\x3e\r\n\r\n',
"*noref":1}});
define("require exports ../../../core/tsSupport/extendsHelper ../../../core/tsSupport/decorateHelper dojo/has ../../../Graphic ../../../core/Handles ../../../core/Logger ../../../core/promiseUtils ../../../core/accessorSupport/decorators ../engine/StageGL ./LayerView2D ../tiling/TileInfoViewPOT ../tiling/TileKey ../tiling/TileQueue ../tiling/TileStrategy ../../support/screenshotUtils ../../../views/vectorTiles/TileHandler ../../../views/vectorTiles/VectorTileContainer ../../../views/vectorTiles/VectorTileDisplayObject".split(" "),function(p,
e,a,b,c,f,d,h,n,m,k,q,g,l,u,r,t,v,w,y){var x=h.getLogger("esri.views.2d.layers.VectorTileLayerView2D");return function(e){function h(){var a=null!==e&&e.apply(this,arguments)||this;a._handles=new d;a._fetchQueue=null;a._tileRequests=new Map;a.container=new k;return a}a(h,e);h.prototype.initialize=function(){this.container.useContextVersion(this.view?this.view.renderContext:null)};h.prototype.hitTest=function(a,b){var c=this;return this.visible&&this._vectorTileContainer?this._vectorTileContainer.hittest(a,
b).then(function(a){var b=c._tileHandler.getStyleRepository().layers;if(null===a||0>a||a>=b.length)return null;a=new f({attributes:{layerId:a,layerName:b[a].id}});a.layer=c.layer;a.sourceLayer=c.layer;return a}):n.resolve(null)};h.prototype.update=function(a){if(this._vectorTileContainer&&this._vectorTileContainer.isInitialized)if(a.pixelRatio!==this._tileHandler.devicePixelRatio)this._start();else{this._fetchQueue.pause();this._fetchQueue.state=a.state;this._tileStrategy.update(a);this._fetchQueue.resume();
for(var b=0,c=this._vectorTileContainer.children;b<c.length;b++)this._tileHandler.updateTile(c[b],a);this.notifyChange("updating")}};h.prototype.attach=function(){c("esri-webgl")?this._start():x.error("WebGL is required but not supported!")};h.prototype.detach=function(){this._stop()};h.prototype.moveStart=function(){this.requestUpdate()};h.prototype.viewChange=function(){this.requestUpdate()};h.prototype.moveEnd=function(){this.requestUpdate()};h.prototype.destroy=function(){this.container.dispose();
this._vectorTileContainer.destroy();this._tileHandler.destroy()};h.prototype.takeScreenshot=function(a,b){if(!this.container)return n.reject("Could not find an object capable of capturing screenshot!");a=t.adjustScreenshotSettings(a,b);return this.container.takeScreenshot(a)};h.prototype.isUpdating=function(){var a=!0;this._tileRequests.forEach(function(b){a=a&&b.isFulfilled()});return!a};h.prototype.acquireTile=function(a){var b=this,c=l.pool.acquire();c.set(a.level,a.row,a.col,a.world);a=this.updateParameters.state.rotation;
var d=this._tileHandler.getStyleRepository(),e=y.pool.acquire(c,c,this.layer.tileInfo,d,a);a=this._tileHandler.getRefKey(c).then(function(a){if(a)return e.refKey=a,b._fetchQueue.push(e.key).then(function(a){e.setData(a.tileData,a.client);e.once("attach",function(){return b.requestUpdate()});b._vectorTileContainer.addChild(e);b.notifyChange("updating")});e.setData(null,null);e.once("attach",function(){return b.requestUpdate()});b._vectorTileContainer.addChild(e)});this._tileRequests.set(c.id,a);this.notifyChange("updating");
return e};h.prototype.releaseTile=function(a){var b=a.key.id,c=this._tileRequests.get(b);c.isFulfilled()||c.cancel();this._tileRequests.delete(b);this._vectorTileContainer.removeChild(a);this.requestUpdate();a.once("detach",function(){return y.pool.release(a)});this.notifyChange("updating")};h.prototype._stop=function(){this._handles.removeAll();this._tileStrategy&&this._tileStrategy.destroy();this._vectorTileContainer&&(this._vectorTileContainer.removeAllChildren(),this.container.removeChild(this._vectorTileContainer));
this._tileHandler&&this._tileHandler.stop();y.pool.prune();this._vectorTileContainer=this._tileHandler=this._tileStrategy=this._tileInfoView=null};h.prototype._start=function(){var a=this;this._stop();this._handles.add(this.watch("layer.currentStyleInfo",function(){return a.attach()}));this._vectorTileContainer=new w;this.container.addChild(this._vectorTileContainer);this._tileInfoView=new g(this.layer.tileInfo,this.layer.fullExtent);this._tileStrategy=new r({cachePolicy:"keep",acquireTile:function(b){return a.acquireTile(b)},
releaseTile:function(b){return a.releaseTile(b)},tileInfoView:this._tileInfoView});this._fetchQueue=new u({tileInfoView:this._tileInfoView,process:function(b){return a._getTileData(b)}});this._tileHandler=new v(this.layer,function(){return a.requestUpdate()},window.devicePixelRatio||1,!0,this._tileInfoView);this._tileHandler.start().then(function(){a._vectorTileContainer.initialize(a._tileHandler.spriteMosaic,a._tileHandler.glyphMosaic,a.layer.tileInfo,a._tileInfoView);a.requestUpdate()})};h.prototype._getTileData=
function(a){return this._tileHandler.getTileData(a,this.updateParameters.state.rotation)};return h=b([m.subclass("esri.views.2d.layers.VectorTileLayerView2D")],h)}(m.declared(q))});