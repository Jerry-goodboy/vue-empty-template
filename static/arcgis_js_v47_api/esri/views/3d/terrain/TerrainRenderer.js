// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.7/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/views/3d/terrain/TerrainMaterial.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\r\n\x3csnippets\x3e\r\n\r\n\x3csnippet name\x3d"vsTerrain"\x3e\x3c![CDATA[\r\n  $vsprecisionf\r\n\r\n  uniform mat4 proj;\r\n  uniform mat4 view;\r\n  uniform vec3 origin;\r\n  uniform vec2 texOffset;\r\n  uniform float texScale;\r\n  uniform mat4 viewNormal;\r\n\r\n  attribute vec3 $position;\r\n  attribute vec2 $uv0;\r\n  varying vec2 vtc;\r\n  varying vec3 vpos;\r\n  varying vec3 vnormal;\r\n\r\n#ifdef RECEIVE_SHADOWS\r\n  varying float linearDepth;\r\n#endif\r\n\r\n#if defined(WIREFRAME) || defined(TILE_BORDERS)\r\n  varying vec2 vuv;\r\n#endif\r\n\r\n#ifdef ATMOSPHERE\r\n  uniform vec3 lightDirection;\r\n  varying vec3 wpos;\r\n  varying vec3 wview;\r\n  varying vec3 wnormal;\r\n  varying vec3 wlight;\r\n#endif\r\n\r\n#ifdef OVERLAY\r\n  uniform vec2 overlayTexOffset;\r\n  uniform vec2 overlayTexScale;\r\n  varying vec2 vtcOverlay;\r\n#endif\r\n\r\n#ifdef SCREEN_SIZE_PERSPECTIVE /* debug only */\r\n\r\n  uniform vec4 screenSizePerspective;\r\n\r\n  varying float screenSizeDistanceToCamera;\r\n  varying float screenSizeCosAngle;\r\n\r\n#endif\r\n\r\n  void main(void) {\r\n    vpos \x3d $position;\r\n\r\n#ifdef SPHERICAL\r\n    vnormal \x3d normalize(vpos + origin);\r\n#else\r\n    vnormal \x3d vec3(0, 0, 1); // WARNING: up-axis dependent code\r\n#endif\r\n\r\n#ifdef ATMOSPHERE\r\n    wpos \x3d (view * vec4(vpos, 1.0)).xyz;\r\n    wnormal \x3d (viewNormal * vec4(normalize(vpos+origin), 1.0)).xyz;\r\n    wlight \x3d (view  * vec4(lightDirection, 1.0)).xyz;\r\n#endif\r\n\r\n#if defined(WIREFRAME) || defined(TILE_BORDERS)\r\n    vuv \x3d $uv0;\r\n#endif\r\n\r\n#ifdef SCREEN_SIZE_PERSPECTIVE /* debug only */\r\n\r\n    vec3 viewPos \x3d (view * vec4(vpos, 1.0)).xyz;\r\n\r\n    screenSizeDistanceToCamera \x3d length(viewPos);\r\n\r\n    vec3 viewSpaceNormal \x3d (viewNormal * vec4(normalize(vpos + origin), 1.0)).xyz;\r\n    screenSizeCosAngle \x3d abs(viewSpaceNormal.z);\r\n\r\n#endif\r\n\r\n    gl_Position \x3d proj * view * vec4(vpos, 1.0);\r\n\r\n#ifdef RECEIVE_SHADOWS\r\n    // Shadowmap\'s cascading index used to be based on \'1.0 / gl_FragCoord.w\'\r\n    // (i.e. the perspective interpolation of \'gl_Position.w\'). Precision\r\n    // issues on iPad/iPhone with the \'w\' component require the depth to be\r\n    // passed as varying to properly drive the cascading shadow map index.\r\n    linearDepth \x3d gl_Position.w;\r\n#endif\r\n\r\n    vtc \x3d $uv0*texScale + texOffset;\r\n\r\n#ifdef OVERLAY\r\n    vtcOverlay \x3d $uv0*overlayTexScale + overlayTexOffset;\r\n#endif\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsTerrainCommon"\x3e\x3c![CDATA[\r\n  uniform vec3 lightDirection;\r\n  uniform vec3 viewDirection;\r\n  uniform sampler2D depthTex;\r\n  uniform int shadowMapNum;\r\n  uniform vec4 shadowMapDistance;\r\n  uniform mat4 shadowMapMatrix[4];\r\n  uniform float depthHalfPixelSz;\r\n  uniform sampler2D ssaoTex;\r\n  uniform vec4 viewportPixelSz;\r\n  uniform sampler2D tex;\r\n  uniform float opacity;\r\n\r\n  varying vec3 vpos;\r\n  varying vec3 vnormal;\r\n  varying vec2 vtc;\r\n\r\n#if defined(WIREFRAME) || defined(TILE_BORDERS)\r\n  varying vec2 vuv;\r\n#endif\r\n\r\n#ifdef ATMOSPHERE\r\n  varying vec3 wpos;\r\n  varying vec3 wview;\r\n  varying vec3 wnormal;\r\n  varying vec3 wlight;\r\n#endif\r\n\r\n  $sceneLightingDefinitions\r\n\r\n#ifdef SCREEN_SIZE_PERSPECTIVE /* debug only */\r\n  $screenSizePerspective\r\n\r\n  uniform vec4 screenSizePerspective;\r\n\r\n  varying float screenSizeDistanceToCamera;\r\n  varying float screenSizeCosAngle;\r\n#endif\r\n\r\n  const vec3 ambient \x3d vec3(0.2,0.2,0.2);\r\n  const vec3 diffuse \x3d vec3(0.8,0.8,0.8);\r\n  const float diffuseHardness \x3d 2.5;\r\n\r\n#ifdef OVERLAY\r\n  uniform sampler2D overlayTex;\r\n  uniform float overlayOpacity;\r\n  varying vec2 vtcOverlay;\r\n#endif\r\n\r\n#ifdef RECEIVE_SHADOWS\r\n\tvarying float linearDepth;\r\n\t$evalShadow\r\n#endif\r\n\r\n  float lum(vec3 c) {\r\n    float max \x3d max(max(c.r, c.g), c.b);\r\n    float min \x3d min(min(c.r, c.g), c.b);\r\n    return (min + max) * 0.5;\r\n  }\r\n\r\n#ifdef ATMOSPHERE\r\n  vec3 atmosphere(vec3 lightPos, vec3 normal, vec3 view) {\r\n    vec3 surfaceColor   \x3d vec3(0.0);\r\n    vec3 fuzzySpecColor \x3d vec3(1.0);\r\n    vec3 subColor       \x3d vec3(0.0);\r\n    float rollOff       \x3d 1.0;\r\n\r\n    vec3 Ln \x3d normalize(lightPos);\r\n    vec3 Nn \x3d normalize(normal);\r\n    vec3 Hn \x3d normalize(view + Ln);\r\n\r\n    float ldn \x3d dot(Ln, Nn);\r\n    float diffComp \x3d max(0.0, ldn);\r\n    float vdn \x3d 1.0 - dot(view, Nn);\r\n    float ndv \x3d dot(view, Ln);\r\n\r\n    vec3 diffContrib \x3d surfaceColor * diffComp;\r\n    float subLamb \x3d max(0.0, smoothstep(-rollOff, 1.0, ldn) - smoothstep(0.0, 1.0, ldn));\r\n\r\n    vec3 subContrib \x3d subLamb * subColor;\r\n    vec3 vecColor \x3d vec3(vdn);\r\n\r\n    vec3 diffuseContrib \x3d (subContrib + diffContrib);\r\n    vec3 specularContrib \x3d (vecColor * fuzzySpecColor);\r\n\r\n    return (diffContrib + specularContrib) * rollOff;\r\n  }\r\n#endif\r\n\r\n  void main() {\r\n    vec3 a \x3d ambient;\r\n\r\n    float shadow \x3d 0.0;\r\n#ifdef RECEIVE_SHADOWS\r\n    shadow \x3d evalShadow(vpos, linearDepth, depthTex, shadowMapNum, shadowMapDistance, shadowMapMatrix, depthHalfPixelSz);\r\n#endif\r\n    float vndl \x3d dot(normalize(vnormal), lightDirection);\r\n    float k \x3d smoothstep(0.0, 1.0, clamp(vndl*diffuseHardness, 0.0, 1.0));\r\n    vec3 d \x3d (1.0 - shadow/1.8) * diffuse * k;\r\n\r\n    float ssao \x3d viewportPixelSz.w \x3c .0 ? 1.0 : texture2D(ssaoTex, (gl_FragCoord.xy - viewportPixelSz.xy) * viewportPixelSz.zw).a;\r\n    vec4 texCol \x3d texture2D(tex, vtc);\r\n\r\n#ifdef OVERLAY\r\n    if ((vtcOverlay.x \x3e 0.0) \x26\x26 (vtcOverlay.y \x3e 0.0) \x26\x26 (vtcOverlay.x \x3c 1.0) \x26\x26 (vtcOverlay.y \x3c 1.0)) {\r\n      vec4 overlayTexCol \x3d texture2D(overlayTex, vtcOverlay);\r\n      overlayTexCol *\x3d overlayOpacity;\r\n      texCol \x3d texCol * (1.0 - overlayTexCol.a) + overlayTexCol; // texCol and overlayTexCol have pre-multiplied alpha\r\n    }\r\n#endif\r\n\r\n    vec3 atm \x3d vec3(0.0);\r\n#ifdef ATMOSPHERE\r\n    float ndotl \x3d max(0.0, min(1.0, vndl));\r\n    atm \x3d atmosphere(wlight, wnormal, -viewDirection);\r\n    atm *\x3d max(0.0, min(1.0, (1.0-lum(texCol.rgb)*1.5))); //avoid atmosphere on bright base maps\r\n    atm *\x3d max(0.0, min(1.0, ndotl*2.0)); // avoid atmosphere on dark side of the globe\r\n#endif\r\n\r\n    vec3 albedo \x3d atm + texCol.rgb;\r\n    vec3 normal \x3d normalize(vnormal);\r\n\r\n    // heuristic shading function used in the old terrain, now used to add ambient lighting\r\n    float additionalAmbientScale \x3d smoothstep(0.0, 1.0, clamp(vndl*2.5, 0.0, 1.0));\r\n\t\tvec3 additionalLight \x3d ssao * lightingMainIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\r\n\r\n    gl_FragColor \x3d vec4(evaluateSceneLighting(normal, albedo, shadow, 1.0 - ssao, additionalLight), texCol.a) * opacity;\r\n\r\n#ifdef SCREEN_SIZE_PERSPECTIVE /* debug only */\r\n    // This is only used for debug rendering the screenSize perspective\r\n\r\n    float perspectiveScale \x3d screenSizePerspectiveScaleFloat(1.0, screenSizeCosAngle, screenSizeDistanceToCamera, screenSizePerspective);\r\n\r\n    if (perspectiveScale \x3c\x3d 0.25) {\r\n      gl_FragColor \x3d mix(gl_FragColor, vec4(1, 0, 0, 1), perspectiveScale * 4.0);\r\n    }\r\n    else if (perspectiveScale \x3c\x3d 0.5) {\r\n      gl_FragColor \x3d mix(gl_FragColor, vec4(0, 0, 1, 1), (perspectiveScale - 0.25) * 4.0);\r\n    }\r\n    else if (perspectiveScale \x3e\x3d 0.99) {\r\n      gl_FragColor \x3d mix(gl_FragColor, vec4(0, 1, 0, 1), 0.2);\r\n    }\r\n    else {\r\n      gl_FragColor \x3d mix(gl_FragColor, vec4(1, 0, 1, 1), (perspectiveScale - 0.5) * 2.0);\r\n    }\r\n\r\n#endif\r\n\r\n  // closing } is missing here, it\'s in the shaders using this snippet below\r\n\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsTerrainWireframe"\x3e\x3c![CDATA[\r\n#ifdef GL_OES_standard_derivatives\r\n#extension GL_OES_standard_derivatives : enable\r\n#endif\r\n\r\n  $fsprecisionf\r\n\r\n  struct WireframeSettings {\r\n    float width;\r\n    float falloff;\r\n    float subdivision;\r\n    vec4 color;\r\n    float wireOpacity;\r\n    float surfaceOpacity;\r\n  };\r\n\r\n  uniform WireframeSettings wireframe;\r\n\r\n    $fsTerrainCommon\r\n\r\n    vec2 vuvScaled \x3d vuv * wireframe.subdivision;\r\n    vec2 vuvMod \x3d fract(vuvScaled);\r\n\r\n#ifdef GL_OES_standard_derivatives\r\n    vec2 dVuv \x3d fwidth(vuvScaled);\r\n    dVuv \x3d max(vec2(0.00001), dVuv); // workaround against flickering skirts, see #10245\r\n#else\r\n    // Something that reasonably works\r\n    vec2 dVuv \x3d vec2(0.05);\r\n#endif\r\n\r\n    vec2 edgeFactors \x3d smoothstep((wireframe.width - wireframe.falloff) * dVuv,\r\n                                  wireframe.width * dVuv, min(vuvMod, 1.0 - vuvMod));\r\n\r\n    float edgeFactor \x3d 1.0 - min(edgeFactors.x, edgeFactors.y);\r\n\r\n#ifdef WIREFRAME\r\n    gl_FragColor \x3d vec4(mix(gl_FragColor.rgb, wireframe.color.rgb, edgeFactor * wireframe.color.a),\r\n                        mix(wireframe.surfaceOpacity, wireframe.wireOpacity, edgeFactor));\r\n#endif\r\n\r\n\r\n#ifdef TILE_BORDERS\r\n    dVuv \x3d fwidth(vuv);\r\n    edgeFactors \x3d smoothstep((wireframe.width - wireframe.falloff) * dVuv,\r\n                              wireframe.width * dVuv, min(vuv, 1.0 - vuv));\r\n    edgeFactor \x3d 1.0 - min(edgeFactors.x, edgeFactors.y);\r\n\r\n    gl_FragColor \x3d mix(gl_FragColor, vec4(1.0, 0.0, 0.0, 1.0), edgeFactor);\r\n#endif\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsTerrain"\x3e\x3c![CDATA[\r\n    $fsprecisionf\r\n    $fsTerrainCommon\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsTerrainNormal"\x3e\x3c![CDATA[\r\n  $vsprecisionf\r\n\r\n  uniform vec3 origin;\r\n  uniform mat4 proj;\r\n  uniform mat4 view;\r\n  uniform mat4 viewNormal;\r\n  attribute vec3 $position;\r\n  varying vec3 vnormal;\r\n\r\n  void main(void) {\r\n#ifdef SPHERICAL\r\n    vec4 normal \x3d vec4(normalize($position + origin), 1.0);\r\n#else\r\n    vec4 normal \x3d vec4(0.0, 1.0, 0.0, 1.0);\r\n#endif\r\n\r\n    gl_Position \x3d proj * view * vec4($position, 1.0);\r\n    vnormal \x3d normalize((viewNormal * normal).xyz);\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsTerrainDepthOnly"\x3e\x3c![CDATA[\r\n  $vsprecisionf\r\n\r\n  uniform mat4 proj;\r\n  uniform mat4 view;\r\n\r\n  attribute vec3 $position;\r\n\r\n  void main() {\r\n    gl_Position \x3d proj * view * vec4($position, 1.0);\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsTerrainDepthOnly"\x3e\x3c![CDATA[\r\n  $fsprecisionf\r\n\r\n  void main() {\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vsTerrainHighlight"\x3e\x3c![CDATA[\r\n  $vsprecisionf\r\n\r\n  uniform mat4 proj;\r\n  uniform mat4 view;\r\n  uniform vec2 overlayTexScale;\r\n  uniform vec2 overlayTexOffset;\r\n\r\n  attribute vec3 $position;\r\n  attribute vec2 $uv0;\r\n\r\n  varying vec2 vtcOverlay;\r\n\r\n  void main() {\r\n    vtcOverlay \x3d $uv0*overlayTexScale + overlayTexOffset;\r\n\r\n    gl_Position \x3d proj * view * vec4($position, 1.0);\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fsTerrainHighlight"\x3e\x3c![CDATA[\r\n  $fsprecisionf\r\n\r\n  uniform sampler2D overlayTex;\r\n\r\n  uniform sampler2D depthTex;\r\n  uniform vec4 highlightViewportPixelSz;\r\n\r\n  varying vec2 vtcOverlay;\r\n\r\n  void main() {\r\n    vec4 texCol \x3d vec4(0,0,0,0);\r\n    if ((vtcOverlay.x \x3e 0.0) \x26\x26 (vtcOverlay.y \x3e 0.0) \x26\x26 (vtcOverlay.x \x3c 1.0) \x26\x26 (vtcOverlay.y \x3c 1.0)) {\r\n      texCol \x3d texture2D(overlayTex, vtcOverlay);\r\n    }\r\n\r\n    if (texCol.a \x3d\x3d 0.0) {\r\n      // Here we have to write black, instead of discarding the fragment in order to overwrite\r\n      // the highlights which might have been written by skirts of other tiles.\r\n      // As a consequence skirts are not visible, but terrain overwrites draped highlights.\r\n      gl_FragColor \x3d vec4(0,0,0,0);\r\n      return;\r\n    }\r\n\r\n    $highlightWrite\r\n  }\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3c/snippets\x3e\r\n'}});
define("dojo/when ./tileUtils ./TerrainConst ./TileGeometryFactory ./TileRenderData ./ResourceCounter ./TileRenderer ../support/PreallocArray ../../../core/ObjectPool ../../../core/promiseUtils ../support/imageUtils ../webgl-engine/lib/ShaderVariations dojo/text!./TerrainMaterial.xml ../webgl-engine/materials/internal/MaterialUtil ../webgl-engine/lib/Util ../webgl-engine/lib/Geometry ../webgl-engine/lib/GeometryData ../lib/glMatrix ../webgl-engine/lib/RenderPass ../webgl-engine/lib/RenderSlot ../webgl-engine/lib/tracer ../../webgl/VertexArrayObject ../../webgl/BufferObject ../../webgl/Program ../webgl-engine/lib/DefaultVertexAttributeLocations ../webgl-engine/lib/DefaultVertexBufferLayouts ../webgl-engine/lib/screenSizePerspectiveUtils ../webgl-engine/lib/glUtil3D ../../webgl/Util".split(" "),
function(Ha,I,ia,Ia,ja,Ja,Ka,N,ka,La,Ma,la,Na,O,C,Oa,D,t,J,P,U,Pa,ma,na,V,Qa,Ra,Sa,oa){var pa=C.assert;C=t.vec2d;var g=t.vec3d,qa=t.vec4d,Ta=t.mat4d.identity(),Ua=[2,2],ra=P.OPAQUE_TERRAIN,sa=P.TRANSPARENT_TERRAIN,ta=g.create(),W=C.create();t=function(t,B,C){function D(a,b){a=a.screenDepth;b=b.screenDepth;return a<b?-E:a>b?E:0}function P(a,b){return 0===a.tiles.length?-E:0===b.tiles.length?E:D(a.tiles.data[0],b.tiles.data[0])}B=B||256;var ua,va=!1,n=null,X=null,p=null,wa={},e,h,xa=new ka(ja),q=new N(10,
function(){return{root:null,tiles:new N(300)}}),Y=!0,z=new I.IteratorPreorder,K=null,ya=!0,F=1,Q=!0,R=!1,f={mode:"none",width:1.5,falloff:1.5,wireOpacity:1,surfaceOpacity:0,color:[1,1,1,0],resolution:64},G=!1,za=!1,Z=!1,E=1,aa=!0,ba=!0,H=null,l=null,v=null,S=!1,ca=[];this.updateTileBackground=function(a){v&&v.cancel();v=a?Ma.requestImage(a).catch(function(){return null}):La.resolve(null);this.renderTileBackground();return v};var da=0,L=0,ea=0,fa=0;this.resourceCounter=new Ja;this.castShadows=!0;this.clippingExtent=
null;this.loaded=function(){};var Aa=!1;this.needsRender=!0;this.receiveShadows=this.needsHighlight=this.didRender=!1;var w=new N(10),M=0,T=new N(30),Ba=new ka(function(){this.extent=qa.create();this.maxLevel=this.minLevel=0;this.callback=null},!1);this.renderTileBackground=function(){if(e&&v&&l)return v.then(function(a){l&&(S=!0,l.setGridImage(a),n&&I.traverseTilesPreorder(n,function(a){l.updateTileTexture(a)}.bind(this)))}.bind(this))};this.initializeRenderContext=function(a){e=a.rctx;h=a.rctx.gl;
var b=function(a){Ha(a).then(function(){va=!0;this.setNeedsRender()}.bind(this)).catch(b)}.bind(this);b(this.renderTileBackground());ua=a.textureRep;var c=a.shaderSnippets;a=a.programRep;c.vsTerrain||c._parse(Na);var d=new la("terrain",["vsTerrain","fsTerrain"],null,a,c,e);d.addDefine("Spherical","SPHERICAL");d.addDefine("Overlay","OVERLAY");d.addDefine("Atmosphere","ATMOSPHERE");d.addDefine("Wireframe","WIREFRAME");d.addDefine("TileBorders","TILE_BORDERS");d.addBinaryShaderSnippetSuffix("Wireframe",
"Wireframe",[!1,!0]);d.addDefine("ReceiveShadows","RECEIVE_SHADOWS");d.addDefine("ScreenSizePerspective","SCREEN_SIZE_PERSPECTIVE");var ga=new la("terrainNormal",["vsTerrainNormal","fsNormal"],null,a,c,e);ga.addDefine("Spherical","SPHERICAL");ga.addDefine("AlphaZero","ALPHA_ZERO");p={depth:a.get("depth"),depthShadowMap:a.get("depthShadowMap"),depthOnly:new na(e,c.vsTerrainDepthOnly,c.fsTerrainDepthOnly,V.Default3D),highlight:new na(e,c.vsTerrainHighlight,c.fsTerrainHighlight,V.Default3D)};X={color:d,
normal:ga};this._updatePrograms();l=new Ka(e,B,a,this.resourceCounter,this.setNeedsRender.bind(this));this.renderTileBackground();H=Sa.createEmptyTexture(e)};this.uninitializeRenderContext=function(a){null!=H&&(H.dispose(),H=null);l&&(l.dispose(),l=null)};this._updatePrograms=function(){var a="spherical"===t,b="shader"===f.mode;p.color=X.color.getProgram([a,!0,a&&ba,b,G,b||G,this.receiveShadows,R]);p.normal=X.normal.getProgram([a,!0]);this.setNeedsRender()};this.destroy=function(a){this.uninstall(a);
v&&(v.cancel(),v=null)};this.install=function(a){a.addExternalRenderer([ra,sa],this)};this.uninstall=function(a){a.removeExternalRenderer(this)};this.setRootTiles=function(a){n=a;this.setNeedsRender()};this.setNeedsHighlight=function(a){this.needsHighlight=a;this.setNeedsRender()};this.setStencilEnabledLayerExtents=function(a){ca=a;this.setNeedsRender()};this.setTileSize=function(a){B=a;l&&(l.tileSize=a);this.setNeedsRender()};this.loadTile=function(a){pa(null===a.renderData);a.renderData=xa.acquire();
a.renderData.init();var b=this.getLocalOriginOfTile(a);a.createGeometry(a.renderData.updateGeometryState(a),b,"debug"===f.mode,a.renderData.geometryInfo);a.renderData.localOrigin=b;this._updateTileGeometryBuffers(a);S&&l.updateTileTexture(a)};this.queryVisibleLevelRange=function(a,b,c,d){var e=Ba.acquire();qa.set(a,e.extent);e.minLevel=b?b:-Number.MAX_VALUE;e.maxLevel=null!=c?c:Number.MAX_VALUE;e.callback=d;T.push(e);this.setNeedsRender()};this.updateTileTexture=function(a){l&&S&&l.updateTileTexture(a)};
this.updateTileGeometryNeedsUpdate=function(a){return a.renderData.updateGeometryState(a).needsUpdate};this._updateTileGeometry=function(a){for(var b=a.renderData.geometryState,c=a.layerInfo[ia.LayerClass.ELEVATION],d=0;d<c.length;d++)c[d].pendingUpdates&=~ia.TileUpdateTypes.UPDATE_GEOMETRY;return b.needsUpdate?(a.renderData.vao&&this._releaseTileGeometry(a),a.createGeometry(b,a.renderData.localOrigin,"debug"===f.mode,a.renderData.geometryInfo),this._updateTileGeometryBuffers(a),!0):!1};this.updateTileGeometry=
function(a){a.renderData.updateGeometryState(a);return this._updateTileGeometry(a)};this.unloadTile=function(a){this._releaseTileGeometry(a);a.renderData.texture&&a.renderData.texture.dispose();xa.release(a.renderData);a.renderData=null};this.getLocalOriginOfTile=function(a){if(10<=a.lij[0]){for(;7<a.lij[0];)a=a.parent;return a.centerAtSeaLevel}if("spherical"===t)return ta;for(;a.parent;)a=a.parent;return a.centerAtSeaLevel};this.setVisibility=function(a){ya=a;this.setNeedsRender()};this.getStats=
function(){return{numTilesRendered:L,numTilesCulled:ea,numTrianglesRendered:da,numOriginsRendered:fa}};this.setDisableRendering=function(a){za=!!a;this.setNeedsRender()};this.getOpacity=function(){return F};this.getWireframeEnabled=function(){return"shader"===f.mode};this.setDebugScreenSizePerspective=function(a){a!==R&&(R=a,this._updatePrograms())};this.setWireframe=function(a){a&&!0!==a||(a={mode:a?"shader":"none"});if(void 0!==a.mode&&f.mode!==a.mode){var b="debug"===f.mode,c="debug"===a.mode;
f.mode=a.mode;this._updatePrograms();b!==c&&n&&I.traverseTilesPreorder(n,function(a){a.renderData&&(a.renderData.vao&&this._releaseTileGeometry(a),a.createGeometry(a.renderData.updateGeometryState(a),a.renderData.localOrigin,c,a.renderData.geometryInfo),this._updateTileGeometryBuffers(a))}.bind(this))}for(var d in a)f.hasOwnProperty(d)&&(f[d]=a[d]),this.setNeedsRender();f.resolution&&(f.resolution=Math.min(f.resolution,B),f.resolution=1<<Math.round(Math.log(f.resolution)/Math.LN2))};this.setOpacity=
function(a){F=a;this.setNeedsRender()};this.setDrawSkirts=function(a){Q=a;this.setNeedsRender()};this.setCullBackFaces=function(a){Z=a;this.setNeedsRender()};this.setRenderOrder=function(a){E=a;this.setNeedsRender()};this.setBorders=function(a){G!==a&&(G=a,this._updatePrograms())};this.setFrontMostTransparent=function(a){aa!==a&&(aa=a,this.setNeedsRender())};this.setVelvetOverground=function(a){ba!==a&&(ba=a,this._updatePrograms())};this.setNeedsRender=function(){this.needsRender=!0;this.didRender=
!1;Y=!0};this.resetNeedsRender=function(){this.didRender&&(this.needsRender=0!==T.length,this.didRender=!1)};var ha=g.create();this.isTransparent=function(){return 1>F||"shader"===f.mode&&(1>f.wireOpacity||1>f.surfaceOpacity)};this._renderMaterialPass=function(a,b){var c=this.isTransparent(),d=a.shadowMap&&a.shadowMap.getEnableState();this.receiveShadows!=d&&(this.receiveShadows=d,this._updatePrograms());d=a.camera;e.setDepthTestEnabled(!0);e.setBlendingEnabled(c);c&&e.setBlendFunctionSeparate(h.SRC_ALPHA,
h.ONE_MINUS_SRC_ALPHA,h.ONE,h.ONE_MINUS_SRC_ALPHA);c&&aa?(c=p.depthOnly,e.bindProgram(c),e.setColorMask(!1,!1,!1,!1),e.setDepthWriteEnabled(!0),this._renderTilesAuxiliary(a,c,b),e.setColorMask(!0,!0,!0,!0),e.setDepthFunction(h.EQUAL),e.setDepthWriteEnabled(!1)):e.setDepthFunction(h.LESS);c=p.color;e.bindProgram(c);c.setUniform1f("opacity",F);if("shader"===f.mode||G)c.setUniform1f("wireframe.width",f.width),c.setUniform1f("wireframe.falloff",Math.min(f.width,f.falloff)),c.setUniform1f("wireframe.wireOpacity",
f.wireOpacity*F),c.setUniform1f("wireframe.surfaceOpacity",f.surfaceOpacity*F),c.setUniform4fv("wireframe.color",f.color);d=a.camera;a.shadowMap&&a.shadowMap.bind(c);a.ssaoHelper&&a.ssaoHelper.setUniforms(c);c.setUniform1i("tex",4);c.setUniform1i("overlayTex",5);c.setUniformMatrix4fv("viewNormal",d.viewInverseTransposeMatrix);c.setUniformMatrix4fv("proj",d.projectionMatrix);a.lightingData.helper.setUniforms(c,!0);d=d.viewMatrix;g.set3(d[12],d[13],d[14],ha);g.normalize(ha);c.setUniform3fv("viewDirection",
ha);for(fa=da=ea=L=0;w.length<w.data.length&&0<T.length;)d=T.pop(),w.push(d);M=w.length;this._renderTiles(a,c,b);e.setBlendingEnabled(!1);e.setDepthFunction(h.LESS);e.setDepthWriteEnabled(!0);for(a=0;a<w.length;a++)b=w.data[a],Ba.release(b),b.callback(a>=M),b.callback=null;w.clear();0<L&&!Aa&&(Aa=!0,this.loaded&&this.loaded())};this._renderDepthPass=function(a,b,c){var d=a.camera;e.bindProgram(b);e.setBlendingEnabled(!1);e.setDepthTestEnabled(!0);e.setDepthFunction(h.LESS);b.setUniformMatrix4fv("model",
Ta);b.setUniformMatrix4fv("viewNormal",d.viewInverseTransposeMatrix);W[0]=d.near;W[1]=d.far;b.setUniform2fv("nearFar",W);this._renderTilesAuxiliary(a,b,c)};this._renderNormalPass=function(a,b){var c=a.camera,d=p.normal;e.bindProgram(d);e.setBlendingEnabled(!1);e.setDepthTestEnabled(!0);e.setDepthFunction(h.LESS);d.setUniformMatrix4fv("viewNormal",c.viewInverseTransposeMatrix);this._renderTilesAuxiliary(a,d,b)};this._renderHighlightPass=function(a,b){var c=p.highlight;e.bindProgram(c);e.setBlendingEnabled(!1);
e.setDepthTestEnabled(!0);e.setDepthFunction(h.LESS);var d=a.offscreenRenderingHelper;e.bindTexture(d.getDepthTexture(),6);c.setUniform1i("depthTex",6);c.setUniform4f("highlightViewportPixelSz",0,0,1/d.width,1/d.height);this._renderTilesAuxiliary(a,c,b,!0)};this.render=function(a){if(va&&!za&&ya&&n&&S){var b=this.isTransparent()?sa:ra;if(a.slot===b){U.trace("# BEGIN RENDER TERRAIN");b=a.pass;e.setFaceCullingEnabled(Z);var c=1===a.lightingData.helper.globalFactor;b===J.MATERIAL?this._renderMaterialPass(a,
this._updatePerOriginTileData()):b===J.MATERIAL_DEPTH_SHADOWMAP&&this.castShadows&&c?this._renderDepthPass(a,p.depthShadowMap,this._updatePerOriginTileData()):b===J.MATERIAL_DEPTH?this._renderDepthPass(a,p.depth,this._updatePerOriginTileData()):b===J.MATERIAL_NORMAL?this._renderNormalPass(a,this._updatePerOriginTileData()):b===J.MATERIAL_HIGHLIGHT&&this.needsHighlight&&(this._renderHighlightPass(a,this._updatePerOriginTileData()),e.clear(e.gl.DEPTH_BUFFER_BIT));Z&&e.setFaceCullingEnabled(!1);U.trace("# END RENDER TERRAIN");
return!0}}};this._updatePerOriginTileData=function(){if(!Y)return q;K=null;this._renderCollectOrigins();if(0!==E){for(var a=0;a<q.length;a++)this._sortFrontToBack(q.data[a].tiles,D);this._sortFrontToBack(q,P)}Y=!1;return q};this._renderCollectOrigins=function(){q.clear();for(var a=0;a<n.length;a++){var b=n[a],c=q.next();c.root=b;c.origin="spherical"===t?ta:b.centerAtSeaLevel;c.tiles.clear();this._renderCollectOriginsForRoot(c)}return!0};this._renderCollectOriginsForRoot=function(a){for(z.reset(a.root);!z.done;){var b=
z.next(),c=b.renderData;if(c&&!b.visible)ea++,z.skip();else{var d=q.peek();if(7===b.lij[0]){if(d===a||0!==d.tiles.length)d=q.next(),d.tiles.clear();d.root=b;d.origin=b.centerAtSeaLevel}if(c){10<=b.lij[0]?q.peek().tiles.push(b):a.tiles.push(b);if(!K||b.vlevel>K.vlevel)K=b;z.skip()}}}};this._sortFrontToBack=function(a,b){a.sort(b)};this._updateStencilReadStateForTile=function(a,b){if(a.stencilRenderingHelper&&a.stencilRenderingHelper.getEnableState()){for(var c=!1,d=0;d<ca.length;d++)if(b.intersectsExtent(ca[d])){c=
!0;break}c?a.stencilRenderingHelper.enableStencilRead():a.stencilRenderingHelper.disableStencilRead()}};this._renderTilesAuxiliary=function(a,b,c,d){var e=a.camera,f=e.viewMatrix,k=a.rctx;b.setUniformMatrix4fv("proj",e.projectionMatrix);d&&b.setUniform1i("overlayTex",5);for(e=0;e<c.length;e++){var g=c.data[e];b.setUniform3fv("origin",g.origin);O.bindView(g.origin,f,b);for(var x=0;x<g.tiles.length;x++){var y=g.tiles.data[x],u=y.renderData;d&&(u.highlightOverlayTexId?Ca(b,u,u.highlightOverlayTexId):
k.bindTexture(H,5));this._updateStencilReadStateForTile(a,y);k.bindVAO(u.vao);oa.assertCompatibleVertexAttributeLocations(u.vao,b);y=u.vao.indexBuffer.size;Q||(y=u.geometryInfo.numWithoutSkirtIndices);k.drawElements(h.TRIANGLES,y,u.vao.indexBuffer.indexType,0)}}k.bindVAO(null);k.stencilRenderingHelper&&k.stencilRenderingHelper.disableStencilRead()};this._renderTiles=function(a,b,c){var d=a.camera.viewMatrix;if(R){var g=Ra.getSettings(t);g.update({distance:C.distanceToSurface,fovY:C.fovY});O.bindScreenSizePerspective(g,
b,"screenSizePerspective")}for(g=0;g<c.length;g++){var m=c.data[g];b.setUniform3fv("origin",m.origin);O.bindView(m.origin,d,b);a.shadowMap&&a.shadowMap.bindView(b,m.origin);fa++;var k=m.tiles;if(0!==k.length){var l=h.TRIANGLES;"debug"===f.mode&&(l=h.LINES);var x=K,y;x?(x=x.vlevel,y=B/f.resolution):(x=16,y=B/64);for(var u=0;u<k.length;u++){var r=k.data[u],m=r.renderData;this._updateStencilReadStateForTile(a,r);U.trace("# RENDER TILE "+r.lij[0]+"/"+r.lij[1]+"/"+r.lij[2]+", screenDepth:"+r.screenDepth);
b.setUniform2fv("texOffset",m.texOffset);b.setUniform1f("texScale",m.texScale);e.bindTexture(m.textureReference||m.texture,4);m.overlayTexId?Ca(b,m,m.overlayTexId):(b.setUniform2fv("overlayTexOffset",Ua),e.bindTexture(H,5));("shader"===f.mode||G)&&b.setUniform1f("wireframe.subdivision",y*(1<<x-r.vlevel));var n=m.vao.indexBuffer.size;Q||(n=m.geometryInfo.numWithoutSkirtIndices);e.bindVAO(m.vao);oa.assertCompatibleVertexAttributeLocations(m.vao,b);e.drawElements(l,n,m.vao.indexBuffer.indexType,0);r.renderOrder=
L;L++;da+=n/3;m=r.extent;r=r.lij[0];for(n=0;n<M;){var q=w.data[n],p=q.extent;r>=q.minLevel&&r<=q.maxLevel&&p[0]<=m[2]&&p[2]>=m[0]&&p[1]<=m[3]&&p[3]>=m[1]?(w.swap(n,M-1),M--):n++}}}}e.bindVAO(null);a.stencilRenderingHelper&&a.stencilRenderingHelper.disableStencilRead()};var Ca=function(a,b,c){var d=wa[c];d||(d=ua.aquire(c).getGLTexture(),pa(d),wa[c]=d);a.setUniform2fv("overlayTexOffset",b.overlayTexOffset);a.setUniform2fv("overlayTexScale",b.overlayTexScale);a.setUniform1f("overlayOpacity",b.overlayOpacity);
e.bindTexture(d,5)},Da=g.create(),Ea=g.create(),Fa=g.create(),Ga=this.clippingExtent;this.intersect=function(a,b,c){if(n&&(!a.isSelection||!this.isTransparent())&&a.enableTerrain){g.subtract(c,b,Da);var d=a.getMinResult(),e=a.getMaxResult();z.reset(n);for(var f={};!z.done;){var k=z.next();if(null!==k.renderData){if(a.enableInvisibleTerrain){if(!k.visible&&Ga&&!k.intersectsExtent(Ga))continue}else if(!k.visible)continue;var h=k.renderData.geometryInfo;A.getData().getAttribute("terrain").data=h.vertexAttributes;
A.getData()._indices.terrain=h.indices;var l=h.boundingBox;g.set3(l[0],l[1],l[2],A.boundingInfo.bbMin);g.set3(l[3],l[4],l[5],A.boundingInfo.bbMax);A.boundingInfo.indices=h.indices;A.boundingInfo.positionData=A.getData().getAttribute("terrain");h=k.renderData.localOrigin;g.subtract(b,h,Ea);g.subtract(c,h,Fa);O.intersectTriangleGeometry(A,f,void 0,a,Ea,Fa,function(b,c,f){if((Q||!(3*f>=k.renderData.geometryInfo.numWithoutSkirtIndices))&&0<=b&&(a.enableBackfacesTerrain||0>g.dot(c,Da))){if(void 0===d.dist||
b<d.dist)f=I.lij2str(k.lij[0],k.lij[1],k.lij[2]),d.set(void 0,f,b,c,void 0),d.setIntersector("terrain");if(void 0===e.dist||b>e.dist)f=I.lij2str(k.lij[0],k.lij[1],k.lij[2]),e.set(void 0,f,b,c,void 0),e.setIntersector("terrain")}})}}}};this._updateTileGeometryBuffers=function(a){a=a.renderData;var b=a.geometryInfo.indices;a.vao=new Pa(e,V.Default3D,{geometry:Qa.Pos3Tex},{geometry:ma.createVertex(e,h.STATIC_DRAW,a.geometryInfo.vertexAttributes)},ma.createIndex(e,h.STATIC_DRAW,b));this.setNeedsRender()};
this._releaseTileGeometry=function(a){a=a.renderData;a.vao.dispose(!0);a.vao=null;Ia.releaseGeometry(a.geometryInfo);this.setNeedsRender()}};D=new D({terrain:{data:null,size:5}},{terrain:null});var A=new Oa(D,"tmpTerrainGeometry",{bbMin:g.create(),bbMax:g.create(),indices:null,positionData:null,getBBMin:function(){return this.bbMin},getBBMax:function(){return this.bbMax},getPrimitiveIndices:function(){},getChildren:function(){},getIndices:function(){return this.indices},getPosition:function(){return this.positionData}});
t.TileRenderData=ja;return t});